{
  "version": 3,
  "sources": ["../../../../../node_modules/@lit/reactive-element/development/decorators/custom-element.js", "../../../../../node_modules/@lit/reactive-element/development/decorators/property.js", "../../../../../node_modules/@lit/reactive-element/development/decorators/state.js", "../../../../../node_modules/@lit/reactive-element/development/decorators/base.js", "../../../../../node_modules/@lit/reactive-element/development/decorators/query.js", "../../../../../node_modules/@lit/reactive-element/development/decorators/query-all.js", "../../../../../node_modules/@lit/reactive-element/development/decorators/query-async.js", "../../../../../node_modules/@lit/reactive-element/development/decorators/query-assigned-elements.js", "../../../../../node_modules/@lit/reactive-element/development/decorators/query-assigned-nodes.js", "../../../../../node_modules/@material/web/elevation/internal/elevation.js", "../../../../../node_modules/@material/web/elevation/internal/elevation-styles.js", "../../../../../node_modules/@material/web/elevation/elevation.js", "../../../../../node_modules/@material/web/internal/controller/attachable-controller.js", "../../../../../node_modules/@material/web/focus/internal/focus-ring.js", "../../../../../node_modules/@material/web/focus/internal/focus-ring-styles.js", "../../../../../node_modules/@material/web/focus/md-focus-ring.js", "../../../../../node_modules/lit-html/development/directive.js", "../../../../../node_modules/lit-html/development/directives/class-map.js", "../../../../../node_modules/@material/web/internal/motion/animation.js", "../../../../../node_modules/@material/web/ripple/internal/ripple.js", "../../../../../node_modules/@material/web/ripple/internal/ripple-styles.js", "../../../../../node_modules/@material/web/ripple/ripple.js", "../../../../../node_modules/@material/web/internal/aria/aria.js", "../../../../../node_modules/@material/web/internal/aria/delegate.js", "../../../../../node_modules/@material/web/labs/behaviors/element-internals.js", "../../../../../node_modules/@material/web/internal/controller/form-submitter.js", "../../../../../node_modules/@material/web/internal/events/form-label-activation.js", "../../../../../node_modules/@material/web/button/internal/button.js", "../../../../../node_modules/@material/web/button/internal/elevated-button.js", "../../../../../node_modules/@material/web/button/internal/elevated-styles.js", "../../../../../node_modules/@material/web/button/internal/shared-elevation-styles.js", "../../../../../node_modules/@material/web/button/internal/shared-styles.js", "../../../../../node_modules/@material/web/button/elevated-button.js", "../../../../../node_modules/@material/web/button/internal/filled-button.js", "../../../../../node_modules/@material/web/button/internal/filled-styles.js", "../../../../../node_modules/@material/web/button/filled-button.js", "../../../../../node_modules/@material/web/button/internal/filled-tonal-button.js", "../../../../../node_modules/@material/web/button/internal/filled-tonal-styles.js", "../../../../../node_modules/@material/web/button/filled-tonal-button.js", "../../../../../node_modules/@material/web/button/internal/outlined-button.js", "../../../../../node_modules/@material/web/button/internal/outlined-styles.js", "../../../../../node_modules/@material/web/button/outlined-button.js", "../../../../../node_modules/@material/web/button/internal/text-button.js", "../../../../../node_modules/@material/web/button/internal/text-styles.js", "../../../../../node_modules/@material/web/button/text-button.js", "../../../../../node_modules/@material/web/internal/events/redispatch-event.js", "../../../../../node_modules/@material/web/labs/behaviors/constraint-validation.js", "../../../../../node_modules/@material/web/labs/behaviors/form-associated.js", "../../../../../node_modules/@material/web/labs/behaviors/validators/validator.js", "../../../../../node_modules/@material/web/labs/behaviors/validators/checkbox-validator.js", "../../../../../node_modules/@material/web/checkbox/internal/checkbox.js", "../../../../../node_modules/@material/web/checkbox/internal/checkbox-styles.js", "../../../../../node_modules/@material/web/checkbox/checkbox.js", "../../../../../node_modules/@material/web/chips/internal/chip.js", "../../../../../node_modules/@material/web/chips/internal/assist-chip.js", "../../../../../node_modules/@material/web/chips/internal/assist-styles.js", "../../../../../node_modules/@material/web/chips/internal/elevated-styles.js", "../../../../../node_modules/@material/web/chips/internal/shared-styles.js", "../../../../../node_modules/@material/web/chips/assist-chip.js", "../../../../../node_modules/@material/web/chips/internal/chip-set.js", "../../../../../node_modules/@material/web/chips/internal/chip-set-styles.js", "../../../../../node_modules/@material/web/chips/chip-set.js", "../../../../../node_modules/@material/web/chips/internal/multi-action-chip.js", "../../../../../node_modules/@material/web/chips/internal/trailing-icons.js", "../../../../../node_modules/@material/web/chips/internal/filter-chip.js", "../../../../../node_modules/@material/web/chips/internal/filter-styles.js", "../../../../../node_modules/@material/web/chips/internal/selectable-styles.js", "../../../../../node_modules/@material/web/chips/internal/trailing-icon-styles.js", "../../../../../node_modules/@material/web/chips/filter-chip.js", "../../../../../node_modules/@material/web/chips/internal/input-chip.js", "../../../../../node_modules/@material/web/chips/internal/input-styles.js", "../../../../../node_modules/@material/web/chips/input-chip.js", "../../../../../node_modules/@material/web/chips/internal/suggestion-chip.js", "../../../../../node_modules/@material/web/chips/internal/suggestion-styles.js", "../../../../../node_modules/@material/web/chips/suggestion-chip.js", "../../../../../node_modules/@material/web/divider/internal/divider.js", "../../../../../node_modules/@material/web/divider/internal/divider-styles.js", "../../../../../node_modules/@material/web/divider/divider.js", "../../../../../node_modules/@material/web/dialog/internal/animations.js", "../../../../../node_modules/@material/web/dialog/internal/dialog.js", "../../../../../node_modules/@material/web/dialog/internal/dialog-styles.js", "../../../../../node_modules/@material/web/dialog/dialog.js", "../../../../../node_modules/@material/web/fab/internal/shared.js", "../../../../../node_modules/@material/web/fab/internal/fab.js", "../../../../../node_modules/@material/web/fab/internal/fab-branded-styles.js", "../../../../../node_modules/@material/web/fab/internal/forced-colors-styles.js", "../../../../../node_modules/@material/web/fab/internal/shared-styles.js", "../../../../../node_modules/@material/web/fab/branded-fab.js", "../../../../../node_modules/@material/web/fab/internal/fab-styles.js", "../../../../../node_modules/@material/web/fab/fab.js", "../../../../../node_modules/@material/web/field/internal/field.js", "../../../../../node_modules/@material/web/field/internal/filled-field.js", "../../../../../node_modules/@material/web/field/internal/filled-styles.js", "../../../../../node_modules/@material/web/field/internal/shared-styles.js", "../../../../../node_modules/@material/web/field/filled-field.js", "../../../../../node_modules/@material/web/field/internal/outlined-field.js", "../../../../../node_modules/@material/web/field/internal/outlined-styles.js", "../../../../../node_modules/@material/web/field/outlined-field.js", "../../../../../node_modules/@material/web/icon/internal/icon.js", "../../../../../node_modules/@material/web/icon/internal/icon-styles.js", "../../../../../node_modules/@material/web/icon/icon.js", "../../../../../node_modules/@material/web/iconbutton/internal/filled-styles.js", "../../../../../node_modules/lit-html/development/static.js", "../../../../../node_modules/@material/web/internal/controller/is-rtl.js", "../../../../../node_modules/@material/web/iconbutton/internal/icon-button.js", "../../../../../node_modules/@material/web/iconbutton/internal/shared-styles.js", "../../../../../node_modules/@material/web/iconbutton/filled-icon-button.js", "../../../../../node_modules/@material/web/iconbutton/internal/filled-tonal-styles.js", "../../../../../node_modules/@material/web/iconbutton/filled-tonal-icon-button.js", "../../../../../node_modules/@material/web/iconbutton/internal/standard-styles.js", "../../../../../node_modules/@material/web/iconbutton/icon-button.js", "../../../../../node_modules/@material/web/iconbutton/internal/outlined-styles.js", "../../../../../node_modules/@material/web/iconbutton/outlined-icon-button.js", "../../../../../node_modules/@material/web/list/internal/list-navigation-helpers.js", "../../../../../node_modules/@material/web/list/internal/list-controller.js", "../../../../../node_modules/@material/web/list/internal/list.js", "../../../../../node_modules/@material/web/list/internal/list-styles.js", "../../../../../node_modules/@material/web/list/list.js", "../../../../../node_modules/@material/web/labs/item/internal/item.js", "../../../../../node_modules/@material/web/labs/item/internal/item-styles.js", "../../../../../node_modules/@material/web/labs/item/item.js", "../../../../../node_modules/@material/web/list/internal/listitem/list-item.js", "../../../../../node_modules/@material/web/list/internal/listitem/list-item-styles.js", "../../../../../node_modules/@material/web/list/list-item.js", "../../../../../node_modules/lit-html/development/directives/style-map.js", "../../../../../node_modules/@material/web/menu/internal/controllers/shared.js", "../../../../../node_modules/@material/web/menu/internal/controllers/surfacePositionController.js", "../../../../../node_modules/@material/web/menu/internal/controllers/typeaheadController.js", "../../../../../node_modules/@material/web/menu/internal/menu.js", "../../../../../node_modules/@material/web/menu/internal/menu-styles.js", "../../../../../node_modules/@material/web/menu/menu.js", "../../../../../node_modules/@material/web/menu/internal/controllers/menuItemController.js", "../../../../../node_modules/@material/web/menu/internal/menuitem/menu-item.js", "../../../../../node_modules/@material/web/menu/internal/menuitem/menu-item-styles.js", "../../../../../node_modules/@material/web/menu/menu-item.js", "../../../../../node_modules/@material/web/menu/internal/submenu/sub-menu.js", "../../../../../node_modules/@material/web/menu/internal/submenu/sub-menu-styles.js", "../../../../../node_modules/@material/web/menu/sub-menu.js", "../../../../../node_modules/@material/web/progress/internal/progress.js", "../../../../../node_modules/@material/web/progress/internal/circular-progress.js", "../../../../../node_modules/@material/web/progress/internal/circular-progress-styles.js", "../../../../../node_modules/@material/web/progress/circular-progress.js", "../../../../../node_modules/@material/web/progress/internal/linear-progress.js", "../../../../../node_modules/@material/web/progress/internal/linear-progress-styles.js", "../../../../../node_modules/@material/web/progress/linear-progress.js", "../../../../../node_modules/@material/web/labs/behaviors/focusable.js", "../../../../../node_modules/@material/web/labs/behaviors/validators/radio-validator.js", "../../../../../node_modules/@material/web/radio/internal/single-selection-controller.js", "../../../../../node_modules/@material/web/radio/internal/radio.js", "../../../../../node_modules/@material/web/radio/internal/radio-styles.js", "../../../../../node_modules/@material/web/radio/radio.js", "../../../../../node_modules/@material/web/labs/behaviors/on-report-validity.js", "../../../../../node_modules/@material/web/labs/behaviors/validators/select-validator.js", "../../../../../node_modules/@material/web/select/internal/shared.js", "../../../../../node_modules/@material/web/select/internal/select.js", "../../../../../node_modules/@material/web/select/internal/filled-select.js", "../../../../../node_modules/@material/web/select/internal/filled-select-styles.js", "../../../../../node_modules/@material/web/select/internal/shared-styles.js", "../../../../../node_modules/@material/web/select/filled-select.js", "../../../../../node_modules/@material/web/select/internal/outlined-select.js", "../../../../../node_modules/@material/web/select/internal/outlined-select-styles.js", "../../../../../node_modules/@material/web/select/outlined-select.js", "../../../../../node_modules/@material/web/select/internal/selectoption/selectOptionController.js", "../../../../../node_modules/@material/web/select/internal/selectoption/select-option.js", "../../../../../node_modules/@material/web/select/select-option.js", "../../../../../node_modules/@material/web/slider/internal/forced-colors-styles.js", "../../../../../node_modules/lit-html/development/directives/when.js", "../../../../../node_modules/@material/web/slider/internal/slider.js", "../../../../../node_modules/@material/web/slider/internal/slider-styles.js", "../../../../../node_modules/@material/web/slider/slider.js", "../../../../../node_modules/@material/web/internal/events/dispatch-hooks.js", "../../../../../node_modules/@material/web/switch/internal/switch.js", "../../../../../node_modules/@material/web/switch/internal/switch-styles.js", "../../../../../node_modules/@material/web/switch/switch.js", "../../../../../node_modules/@material/web/tabs/internal/tab.js", "../../../../../node_modules/@material/web/tabs/internal/primary-tab.js", "../../../../../node_modules/@material/web/tabs/internal/primary-tab-styles.js", "../../../../../node_modules/@material/web/tabs/internal/tab-styles.js", "../../../../../node_modules/@material/web/tabs/primary-tab.js", "../../../../../node_modules/@material/web/tabs/internal/secondary-tab.js", "../../../../../node_modules/@material/web/tabs/internal/secondary-tab-styles.js", "../../../../../node_modules/@material/web/tabs/secondary-tab.js", "../../../../../node_modules/@material/web/tabs/internal/tabs.js", "../../../../../node_modules/@material/web/tabs/internal/tabs-styles.js", "../../../../../node_modules/@material/web/tabs/tabs.js", "../../../../../node_modules/@material/web/textfield/internal/filled-styles.js", "../../../../../node_modules/lit-html/development/directive-helpers.js", "../../../../../node_modules/lit-html/development/directives/live.js", "../../../../../node_modules/@material/web/internal/controller/string-converter.js", "../../../../../node_modules/@material/web/labs/behaviors/validators/text-field-validator.js", "../../../../../node_modules/@material/web/textfield/internal/text-field.js", "../../../../../node_modules/@material/web/textfield/internal/filled-text-field.js", "../../../../../node_modules/@material/web/textfield/internal/shared-styles.js", "../../../../../node_modules/@material/web/textfield/filled-text-field.js", "../../../../../node_modules/@material/web/textfield/internal/outlined-styles.js", "../../../../../node_modules/@material/web/textfield/internal/outlined-text-field.js", "../../../../../node_modules/@material/web/textfield/outlined-text-field.js"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```js\n * @customElement('my-element')\n * class MyElement extends LitElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n * @category Decorator\n * @param tagName The tag name of the custom element to define.\n */\nexport const customElement = (tagName) => (classOrTarget, context) => {\n    if (context !== undefined) {\n        context.addInitializer(() => {\n            customElements.define(tagName, classOrTarget);\n        });\n    }\n    else {\n        customElements.define(tagName, classOrTarget);\n    }\n};\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\nimport { defaultConverter, notEqual, } from '../reactive-element.js';\nconst DEV_MODE = true;\nlet issueWarning;\nif (DEV_MODE) {\n    // Ensure warnings are issued only 1x, even if multiple versions of Lit\n    // are loaded.\n    const issuedWarnings = (globalThis.litIssuedWarnings ??= new Set());\n    // Issue a warning, if we haven't already.\n    issueWarning = (code, warning) => {\n        warning += ` See https://lit.dev/msg/${code} for more information.`;\n        if (!issuedWarnings.has(warning)) {\n            console.warn(warning);\n            issuedWarnings.add(warning);\n        }\n    };\n}\nconst legacyProperty = (options, proto, name) => {\n    const hasOwnProperty = proto.hasOwnProperty(name);\n    proto.constructor.createProperty(name, hasOwnProperty ? { ...options, wrapped: true } : options);\n    // For accessors (which have a descriptor on the prototype) we need to\n    // return a descriptor, otherwise TypeScript overwrites the descriptor we\n    // define in createProperty() with the original descriptor. We don't do this\n    // for fields, which don't have a descriptor, because this could overwrite\n    // descriptor defined by other decorators.\n    return hasOwnProperty\n        ? Object.getOwnPropertyDescriptor(proto, name)\n        : undefined;\n};\n// This is duplicated from a similar variable in reactive-element.ts, but\n// actually makes sense to have this default defined with the decorator, so\n// that different decorators could have different defaults.\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual,\n};\n/**\n * Wraps a class accessor or setter so that `requestUpdate()` is called with the\n * property name and old value when the accessor is set.\n */\nexport const standardProperty = (options = defaultPropertyDeclaration, target, context) => {\n    const { kind, metadata } = context;\n    if (DEV_MODE && metadata == null) {\n        issueWarning('missing-class-metadata', `The class ${target} is missing decorator metadata. This ` +\n            `could mean that you're using a compiler that supports decorators ` +\n            `but doesn't support decorator metadata, such as TypeScript 5.1. ` +\n            `Please update your compiler.`);\n    }\n    // Store the property options\n    let properties = globalThis.litPropertyMetadata.get(metadata);\n    if (properties === undefined) {\n        globalThis.litPropertyMetadata.set(metadata, (properties = new Map()));\n    }\n    properties.set(context.name, options);\n    if (kind === 'accessor') {\n        // Standard decorators cannot dynamically modify the class, so we can't\n        // replace a field with accessors. The user must use the new `accessor`\n        // keyword instead.\n        const { name } = context;\n        return {\n            set(v) {\n                const oldValue = target.get.call(this);\n                target.set.call(this, v);\n                this.requestUpdate(name, oldValue, options);\n            },\n            init(v) {\n                if (v !== undefined) {\n                    this._$changeProperty(name, undefined, options);\n                }\n                return v;\n            },\n        };\n    }\n    else if (kind === 'setter') {\n        const { name } = context;\n        return function (value) {\n            const oldValue = this[name];\n            target.call(this, value);\n            this.requestUpdate(name, oldValue, options);\n        };\n    }\n    throw new Error(`Unsupported decorator location: ${kind}`);\n};\n/**\n * A class field or accessor decorator which creates a reactive property that\n * reflects a corresponding attribute value. When a decorated property is set\n * the element will update and render. A {@linkcode PropertyDeclaration} may\n * optionally be supplied to configure property features.\n *\n * This decorator should only be used for public fields. As public fields,\n * properties should be considered as primarily settable by element users,\n * either via attribute or the property itself.\n *\n * Generally, properties that are changed by the element should be private or\n * protected fields and should use the {@linkcode state} decorator.\n *\n * However, sometimes element code does need to set a public property. This\n * should typically only be done in response to user interaction, and an event\n * should be fired informing the user; for example, a checkbox sets its\n * `checked` property when clicked and fires a `changed` event. Mutating public\n * properties should typically not be done for non-primitive (object or array)\n * properties. In other cases when an element needs to manage state, a private\n * property decorated via the {@linkcode state} decorator should be used. When\n * needed, state properties can be initialized via public properties to\n * facilitate complex interactions.\n *\n * ```ts\n * class MyElement {\n *   @property({ type: Boolean })\n *   clicked = false;\n * }\n * ```\n * @category Decorator\n * @ExportDecoratedItems\n */\nexport function property(options) {\n    return (protoOrTarget, nameOrContext\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ) => {\n        return (typeof nameOrContext === 'object'\n            ? standardProperty(options, protoOrTarget, nameOrContext)\n            : legacyProperty(options, protoOrTarget, nameOrContext));\n    };\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\nimport { property } from './property.js';\n/**\n * Declares a private or protected reactive property that still triggers\n * updates to the element when it changes. It does not reflect from the\n * corresponding attribute.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like closure compiler.\n * @category Decorator\n */\nexport function state(options) {\n    return property({\n        ...options,\n        // Add both `state` and `attribute` because we found a third party\n        // controller that is keying off of PropertyOptions.state to determine\n        // whether a field is a private internal property or not.\n        state: true,\n        attribute: false,\n    });\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n/**\n * Wraps up a few best practices when returning a property descriptor from a\n * decorator.\n *\n * Marks the defined property as configurable, and enumerable, and handles\n * the case where we have a busted Reflect.decorate zombiefill (e.g. in Angular\n * apps).\n *\n * @internal\n */\nexport const desc = (obj, name, descriptor) => {\n    // For backwards compatibility, we keep them configurable and enumerable.\n    descriptor.configurable = true;\n    descriptor.enumerable = true;\n    if (\n    // We check for Reflect.decorate each time, in case the zombiefill\n    // is applied via lazy loading some Angular code.\n    Reflect.decorate &&\n        typeof name !== 'object') {\n        // If we're called as a legacy decorator, and Reflect.decorate is present\n        // then we have no guarantees that the returned descriptor will be\n        // defined on the class, so we must apply it directly ourselves.\n        Object.defineProperty(obj, name, descriptor);\n    }\n    return descriptor;\n};\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport { desc } from './base.js';\nconst DEV_MODE = true;\nlet issueWarning;\nif (DEV_MODE) {\n    // Ensure warnings are issued only 1x, even if multiple versions of Lit\n    // are loaded.\n    const issuedWarnings = (globalThis.litIssuedWarnings ??= new Set());\n    // Issue a warning, if we haven't already.\n    issueWarning = (code, warning) => {\n        warning += code\n            ? ` See https://lit.dev/msg/${code} for more information.`\n            : '';\n        if (!issuedWarnings.has(warning)) {\n            console.warn(warning);\n            issuedWarnings.add(warning);\n        }\n    };\n}\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n * @param cache An optional boolean which when true performs the DOM query only\n *     once and caches the result.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * ```ts\n * class MyElement {\n *   @query('#first')\n *   first: HTMLDivElement;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function query(selector, cache) {\n    return ((protoOrTarget, nameOrContext, descriptor) => {\n        const doQuery = (el) => {\n            const result = (el.renderRoot?.querySelector(selector) ?? null);\n            if (DEV_MODE && result === null && cache && !el.hasUpdated) {\n                const name = typeof nameOrContext === 'object'\n                    ? nameOrContext.name\n                    : nameOrContext;\n                issueWarning('', `@query'd field ${JSON.stringify(String(name))} with the 'cache' ` +\n                    `flag set for selector '${selector}' has been accessed before ` +\n                    `the first update and returned null. This is expected if the ` +\n                    `renderRoot tree has not been provided beforehand (e.g. via ` +\n                    `Declarative Shadow DOM). Therefore the value hasn't been cached.`);\n            }\n            // TODO: if we want to allow users to assert that the query will never\n            // return null, we need a new option and to throw here if the result\n            // is null.\n            return result;\n        };\n        if (cache) {\n            // Accessors to wrap from either:\n            //   1. The decorator target, in the case of standard decorators\n            //   2. The property descriptor, in the case of experimental decorators\n            //      on auto-accessors.\n            //   3. Functions that access our own cache-key property on the instance,\n            //      in the case of experimental decorators on fields.\n            const { get, set } = typeof nameOrContext === 'object'\n                ? protoOrTarget\n                : descriptor ??\n                    (() => {\n                        const key = DEV_MODE\n                            ? Symbol(`${String(nameOrContext)} (@query() cache)`)\n                            : Symbol();\n                        return {\n                            get() {\n                                return this[key];\n                            },\n                            set(v) {\n                                this[key] = v;\n                            },\n                        };\n                    })();\n            return desc(protoOrTarget, nameOrContext, {\n                get() {\n                    let result = get.call(this);\n                    if (result === undefined) {\n                        result = doQuery(this);\n                        if (result !== null || this.hasUpdated) {\n                            set.call(this, result);\n                        }\n                    }\n                    return result;\n                },\n            });\n        }\n        else {\n            // This object works as the return type for both standard and\n            // experimental decorators.\n            return desc(protoOrTarget, nameOrContext, {\n                get() {\n                    return doQuery(this);\n                },\n            });\n        }\n    });\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport { desc } from './base.js';\n// Shared fragment used to generate empty NodeLists when a render root is\n// undefined\nlet fragment;\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See:\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\n *\n * ```ts\n * class MyElement {\n *   @queryAll('div')\n *   divs: NodeListOf<HTMLDivElement>;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function queryAll(selector) {\n    return ((obj, name) => {\n        return desc(obj, name, {\n            get() {\n                const container = this.renderRoot ?? (fragment ??= document.createDocumentFragment());\n                return container.querySelectorAll(selector);\n            },\n        });\n    });\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport { desc } from './base.js';\n// Note, in the future, we may extend this decorator to support the use case\n// where the queried element may need to do work to become ready to interact\n// with (e.g. load some implementation code). If so, we might elect to\n// add a second argument defining a function that can be run to make the\n// queried element loaded/updated/ready.\n/**\n * A property decorator that converts a class property into a getter that\n * returns a promise that resolves to the result of a querySelector on the\n * element's renderRoot done after the element's `updateComplete` promise\n * resolves. When the queried property may change with element state, this\n * decorator can be used instead of requiring users to await the\n * `updateComplete` before accessing the property.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * ```ts\n * class MyElement {\n *   @queryAsync('#first')\n *   first: Promise<HTMLDivElement>;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n *\n * // external usage\n * async doSomethingWithFirst() {\n *  (await aMyElement.first).doSomething();\n * }\n * ```\n * @category Decorator\n */\nexport function queryAsync(selector) {\n    return ((obj, name) => {\n        return desc(obj, name, {\n            async get() {\n                await this.updateComplete;\n                return this.renderRoot?.querySelector(selector) ?? null;\n            },\n        });\n    });\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport { desc } from './base.js';\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedElements` of the given `slot`. Provides a declarative\n * way to use\n * [`HTMLSlotElement.assignedElements`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSlotElement/assignedElements).\n *\n * Can be passed an optional {@linkcode QueryAssignedElementsOptions} object.\n *\n * Example usage:\n * ```ts\n * class MyElement {\n *   @queryAssignedElements({ slot: 'list' })\n *   listItems!: Array<HTMLElement>;\n *   @queryAssignedElements()\n *   unnamedSlotEls!: Array<HTMLElement>;\n *\n *   render() {\n *     return html`\n *       <slot name=\"list\"></slot>\n *       <slot></slot>\n *     `;\n *   }\n * }\n * ```\n *\n * Note, the type of this property should be annotated as `Array<HTMLElement>`.\n *\n * @category Decorator\n */\nexport function queryAssignedElements(options) {\n    return ((obj, name) => {\n        const { slot, selector } = options ?? {};\n        const slotSelector = `slot${slot ? `[name=${slot}]` : ':not([name])'}`;\n        return desc(obj, name, {\n            get() {\n                const slotEl = this.renderRoot?.querySelector(slotSelector);\n                const elements = slotEl?.assignedElements(options) ?? [];\n                return (selector === undefined\n                    ? elements\n                    : elements.filter((node) => node.matches(selector)));\n            },\n        });\n    });\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport { desc } from './base.js';\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedNodes` of the given `slot`.\n *\n * Can be passed an optional {@linkcode QueryAssignedNodesOptions} object.\n *\n * Example usage:\n * ```ts\n * class MyElement {\n *   @queryAssignedNodes({slot: 'list', flatten: true})\n *   listItems!: Array<Node>;\n *\n *   render() {\n *     return html`\n *       <slot name=\"list\"></slot>\n *     `;\n *   }\n * }\n * ```\n *\n * Note the type of this property should be annotated as `Array<Node>`. Use the\n * queryAssignedElements decorator to list only elements, and optionally filter\n * the element list using a CSS selector.\n *\n * @category Decorator\n */\nexport function queryAssignedNodes(options) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return ((obj, name) => {\n        const { slot } = options ?? {};\n        const slotSelector = `slot${slot ? `[name=${slot}]` : ':not([name])'}`;\n        return desc(obj, name, {\n            get() {\n                const slotEl = this.renderRoot?.querySelector(slotSelector);\n                return (slotEl?.assignedNodes(options) ?? []);\n            },\n        });\n    });\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { html, LitElement } from 'lit';\n/**\n * A component for elevation.\n */\nexport class Elevation extends LitElement {\n    connectedCallback() {\n        super.connectedCallback();\n        // Needed for VoiceOver, which will create a \"group\" if the element is a\n        // sibling to other content.\n        this.setAttribute('aria-hidden', 'true');\n    }\n    render() {\n        return html `<span class=\"shadow\"></span>`;\n    }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./elevation/internal/elevation-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host,.shadow,.shadow::before,.shadow::after{border-radius:inherit;inset:0;position:absolute;transition-duration:inherit;transition-property:inherit;transition-timing-function:inherit}:host{display:flex;pointer-events:none;transition-property:box-shadow,opacity}.shadow::before,.shadow::after{content:\"\";transition-property:box-shadow,opacity;--_level: var(--md-elevation-level, 0);--_shadow-color: var(--md-elevation-shadow-color, var(--md-sys-color-shadow, #000))}.shadow::before{box-shadow:0px calc(1px*(clamp(0,var(--_level),1) + clamp(0,var(--_level) - 3,1) + 2*clamp(0,var(--_level) - 4,1))) calc(1px*(2*clamp(0,var(--_level),1) + clamp(0,var(--_level) - 2,1) + clamp(0,var(--_level) - 4,1))) 0px var(--_shadow-color);opacity:.3}.shadow::after{box-shadow:0px calc(1px*(clamp(0,var(--_level),1) + clamp(0,var(--_level) - 1,1) + 2*clamp(0,var(--_level) - 2,3))) calc(1px*(3*clamp(0,var(--_level),2) + 2*clamp(0,var(--_level) - 2,3))) calc(1px*(clamp(0,var(--_level),4) + 2*clamp(0,var(--_level) - 4,1))) var(--_shadow-color);opacity:.15}\n`;\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { Elevation } from './internal/elevation.js';\nimport { styles } from './internal/elevation-styles.js';\n/**\n * The `<md-elevation>` custom element with default styles.\n *\n * Elevation is the relative distance between two surfaces along the z-axis.\n *\n * @final\n * @suppress {visibility}\n */\nexport let MdElevation = class MdElevation extends Elevation {\n};\nMdElevation.styles = [styles];\nMdElevation = __decorate([\n    customElement('md-elevation')\n], MdElevation);\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { isServer } from 'lit';\n/**\n * A key to retrieve an `Attachable` element's `AttachableController` from a\n * global `MutationObserver`.\n */\nconst ATTACHABLE_CONTROLLER = Symbol('attachableController');\nlet FOR_ATTRIBUTE_OBSERVER;\nif (!isServer) {\n    /**\n     * A global `MutationObserver` that reacts to `for` attribute changes on\n     * `Attachable` elements. If the `for` attribute changes, the controller will\n     * re-attach to the new referenced element.\n     */\n    FOR_ATTRIBUTE_OBSERVER = new MutationObserver((records) => {\n        for (const record of records) {\n            // When a control's `for` attribute changes, inform its\n            // `AttachableController` to update to a new control.\n            record.target[ATTACHABLE_CONTROLLER]?.hostConnected();\n        }\n    });\n}\n/**\n * A controller that provides an implementation for `Attachable` elements.\n *\n * @example\n * ```ts\n * class MyElement extends LitElement implements Attachable {\n *   get control() { return this.attachableController.control; }\n *\n *   private readonly attachableController = new AttachableController(\n *     this,\n *     (previousControl, newControl) => {\n *       previousControl?.removeEventListener('click', this.handleClick);\n *       newControl?.addEventListener('click', this.handleClick);\n *     }\n *   );\n *\n *   // Implement remaining `Attachable` properties/methods that call the\n *   // controller's properties/methods.\n * }\n * ```\n */\nexport class AttachableController {\n    get htmlFor() {\n        return this.host.getAttribute('for');\n    }\n    set htmlFor(htmlFor) {\n        if (htmlFor === null) {\n            this.host.removeAttribute('for');\n        }\n        else {\n            this.host.setAttribute('for', htmlFor);\n        }\n    }\n    get control() {\n        if (this.host.hasAttribute('for')) {\n            if (!this.htmlFor || !this.host.isConnected) {\n                return null;\n            }\n            return this.host.getRootNode().querySelector(`#${this.htmlFor}`);\n        }\n        return this.currentControl || this.host.parentElement;\n    }\n    set control(control) {\n        if (control) {\n            this.attach(control);\n        }\n        else {\n            this.detach();\n        }\n    }\n    /**\n     * Creates a new controller for an `Attachable` element.\n     *\n     * @param host The `Attachable` element.\n     * @param onControlChange A callback with two parameters for the previous and\n     *     next control. An `Attachable` element may perform setup or teardown\n     *     logic whenever the control changes.\n     */\n    constructor(host, onControlChange) {\n        this.host = host;\n        this.onControlChange = onControlChange;\n        this.currentControl = null;\n        host.addController(this);\n        host[ATTACHABLE_CONTROLLER] = this;\n        FOR_ATTRIBUTE_OBSERVER?.observe(host, { attributeFilter: ['for'] });\n    }\n    attach(control) {\n        if (control === this.currentControl) {\n            return;\n        }\n        this.setCurrentControl(control);\n        // When imperatively attaching, remove the `for` attribute so\n        // that the attached control is used instead of a referenced one.\n        this.host.removeAttribute('for');\n    }\n    detach() {\n        this.setCurrentControl(null);\n        // When imperatively detaching, add an empty `for=\"\"` attribute. This will\n        // ensure the control is `null` rather than the `parentElement`.\n        this.host.setAttribute('for', '');\n    }\n    /** @private */\n    hostConnected() {\n        this.setCurrentControl(this.control);\n    }\n    /** @private */\n    hostDisconnected() {\n        this.setCurrentControl(null);\n    }\n    setCurrentControl(control) {\n        this.onControlChange(this.currentControl, control);\n        this.currentControl = control;\n    }\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { isServer, LitElement } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { AttachableController, } from '../../internal/controller/attachable-controller.js';\n/**\n * Events that the focus ring listens to.\n */\nconst EVENTS = ['focusin', 'focusout', 'pointerdown'];\n/**\n * A focus ring component.\n *\n * @fires visibility-changed {Event} Fired whenever `visible` changes.\n */\nexport class FocusRing extends LitElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * Makes the focus ring visible.\n         */\n        this.visible = false;\n        /**\n         * Makes the focus ring animate inwards instead of outwards.\n         */\n        this.inward = false;\n        this.attachableController = new AttachableController(this, this.onControlChange.bind(this));\n    }\n    get htmlFor() {\n        return this.attachableController.htmlFor;\n    }\n    set htmlFor(htmlFor) {\n        this.attachableController.htmlFor = htmlFor;\n    }\n    get control() {\n        return this.attachableController.control;\n    }\n    set control(control) {\n        this.attachableController.control = control;\n    }\n    attach(control) {\n        this.attachableController.attach(control);\n    }\n    detach() {\n        this.attachableController.detach();\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Needed for VoiceOver, which will create a \"group\" if the element is a\n        // sibling to other content.\n        this.setAttribute('aria-hidden', 'true');\n    }\n    /** @private */\n    handleEvent(event) {\n        if (event[HANDLED_BY_FOCUS_RING]) {\n            // This ensures the focus ring does not activate when multiple focus rings\n            // are used within a single component.\n            return;\n        }\n        switch (event.type) {\n            default:\n                return;\n            case 'focusin':\n                this.visible = this.control?.matches(':focus-visible') ?? false;\n                break;\n            case 'focusout':\n            case 'pointerdown':\n                this.visible = false;\n                break;\n        }\n        event[HANDLED_BY_FOCUS_RING] = true;\n    }\n    onControlChange(prev, next) {\n        if (isServer)\n            return;\n        for (const event of EVENTS) {\n            prev?.removeEventListener(event, this);\n            next?.addEventListener(event, this);\n        }\n    }\n    update(changed) {\n        if (changed.has('visible')) {\n            // This logic can be removed once the `:has` selector has been introduced\n            // to Firefox. This is necessary to allow correct submenu styles.\n            this.dispatchEvent(new Event('visibility-changed'));\n        }\n        super.update(changed);\n    }\n}\n__decorate([\n    property({ type: Boolean, reflect: true })\n], FocusRing.prototype, \"visible\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], FocusRing.prototype, \"inward\", void 0);\nconst HANDLED_BY_FOCUS_RING = Symbol('handledByFocusRing');\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./focus/internal/focus-ring-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{animation-delay:0s,calc(var(--md-focus-ring-duration, 600ms)*.25);animation-duration:calc(var(--md-focus-ring-duration, 600ms)*.25),calc(var(--md-focus-ring-duration, 600ms)*.75);animation-timing-function:cubic-bezier(0.2, 0, 0, 1);box-sizing:border-box;color:var(--md-focus-ring-color, var(--md-sys-color-secondary, #625b71));display:none;pointer-events:none;position:absolute}:host([visible]){display:flex}:host(:not([inward])){animation-name:outward-grow,outward-shrink;border-end-end-radius:calc(var(--md-focus-ring-shape-end-end, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) + var(--md-focus-ring-outward-offset, 2px));border-end-start-radius:calc(var(--md-focus-ring-shape-end-start, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) + var(--md-focus-ring-outward-offset, 2px));border-start-end-radius:calc(var(--md-focus-ring-shape-start-end, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) + var(--md-focus-ring-outward-offset, 2px));border-start-start-radius:calc(var(--md-focus-ring-shape-start-start, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) + var(--md-focus-ring-outward-offset, 2px));inset:calc(-1*var(--md-focus-ring-outward-offset, 2px));outline:var(--md-focus-ring-width, 3px) solid currentColor}:host([inward]){animation-name:inward-grow,inward-shrink;border-end-end-radius:calc(var(--md-focus-ring-shape-end-end, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) - var(--md-focus-ring-inward-offset, 0px));border-end-start-radius:calc(var(--md-focus-ring-shape-end-start, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) - var(--md-focus-ring-inward-offset, 0px));border-start-end-radius:calc(var(--md-focus-ring-shape-start-end, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) - var(--md-focus-ring-inward-offset, 0px));border-start-start-radius:calc(var(--md-focus-ring-shape-start-start, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) - var(--md-focus-ring-inward-offset, 0px));border:var(--md-focus-ring-width, 3px) solid currentColor;inset:var(--md-focus-ring-inward-offset, 0px)}@keyframes outward-grow{from{outline-width:0}to{outline-width:var(--md-focus-ring-active-width, 8px)}}@keyframes outward-shrink{from{outline-width:var(--md-focus-ring-active-width, 8px)}}@keyframes inward-grow{from{border-width:0}to{border-width:var(--md-focus-ring-active-width, 8px)}}@keyframes inward-shrink{from{border-width:var(--md-focus-ring-active-width, 8px)}}@media(prefers-reduced-motion){:host{animation:none}}\n`;\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { FocusRing } from './internal/focus-ring.js';\nimport { styles } from './internal/focus-ring-styles.js';\n/**\n * TODO(b/267336424): add docs\n *\n * @final\n * @suppress {visibility}\n */\nexport let MdFocusRing = class MdFocusRing extends FocusRing {\n};\nMdFocusRing.styles = [styles];\nMdFocusRing = __decorate([\n    customElement('md-focus-ring')\n], MdFocusRing);\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nexport const PartType = {\n    ATTRIBUTE: 1,\n    CHILD: 2,\n    PROPERTY: 3,\n    BOOLEAN_ATTRIBUTE: 4,\n    EVENT: 5,\n    ELEMENT: 6,\n};\n/**\n * Creates a user-facing directive function from a Directive class. This\n * function has the same parameters as the directive's render() method.\n */\nexport const directive = (c) => (...values) => ({\n    // This property needs to remain unminified.\n    ['_$litDirective$']: c,\n    values,\n});\n/**\n * Base class for creating custom directives. Users should extend this class,\n * implement `render` and/or `update`, and then pass their subclass to\n * `directive`.\n */\nexport class Directive {\n    constructor(_partInfo) { }\n    // See comment in Disconnectable interface for why this is a getter\n    get _$isConnected() {\n        return this._$parent._$isConnected;\n    }\n    /** @internal */\n    _$initialize(part, parent, attributeIndex) {\n        this.__part = part;\n        this._$parent = parent;\n        this.__attributeIndex = attributeIndex;\n    }\n    /** @internal */\n    _$resolve(part, props) {\n        return this.update(part, props);\n    }\n    update(_part, props) {\n        return this.render(...props);\n    }\n}\n", "/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport { noChange } from '../lit-html.js';\nimport { directive, Directive, PartType, } from '../directive.js';\nclass ClassMapDirective extends Directive {\n    constructor(partInfo) {\n        super(partInfo);\n        if (partInfo.type !== PartType.ATTRIBUTE ||\n            partInfo.name !== 'class' ||\n            partInfo.strings?.length > 2) {\n            throw new Error('`classMap()` can only be used in the `class` attribute ' +\n                'and must be the only part in the attribute.');\n        }\n    }\n    render(classInfo) {\n        // Add spaces to ensure separation from static classes\n        return (' ' +\n            Object.keys(classInfo)\n                .filter((key) => classInfo[key])\n                .join(' ') +\n            ' ');\n    }\n    update(part, [classInfo]) {\n        // Remember dynamic classes on the first render\n        if (this._previousClasses === undefined) {\n            this._previousClasses = new Set();\n            if (part.strings !== undefined) {\n                this._staticClasses = new Set(part.strings\n                    .join(' ')\n                    .split(/\\s/)\n                    .filter((s) => s !== ''));\n            }\n            for (const name in classInfo) {\n                if (classInfo[name] && !this._staticClasses?.has(name)) {\n                    this._previousClasses.add(name);\n                }\n            }\n            return this.render(classInfo);\n        }\n        const classList = part.element.classList;\n        // Remove old classes that no longer apply\n        for (const name of this._previousClasses) {\n            if (!(name in classInfo)) {\n                classList.remove(name);\n                this._previousClasses.delete(name);\n            }\n        }\n        // Add or remove classes based on their classMap value\n        for (const name in classInfo) {\n            // We explicitly want a loose truthy check of `value` because it seems\n            // more convenient that '' and 0 are skipped.\n            const value = !!classInfo[name];\n            if (value !== this._previousClasses.has(name) &&\n                !this._staticClasses?.has(name)) {\n                if (value) {\n                    classList.add(name);\n                    this._previousClasses.add(name);\n                }\n                else {\n                    classList.remove(name);\n                    this._previousClasses.delete(name);\n                }\n            }\n        }\n        return noChange;\n    }\n}\n/**\n * A directive that applies dynamic CSS classes.\n *\n * This must be used in the `class` attribute and must be the only part used in\n * the attribute. It takes each property in the `classInfo` argument and adds\n * the property name to the element's `classList` if the property value is\n * truthy; if the property value is falsy, the property name is removed from\n * the element's `class`.\n *\n * For example `{foo: bar}` applies the class `foo` if the value of `bar` is\n * truthy.\n *\n * @param classInfo\n */\nexport const classMap = directive(ClassMapDirective);\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * Easing functions to use for web animations.\n *\n * **NOTE:** `EASING.EMPHASIZED` is approximated with unknown accuracy.\n *\n * TODO(b/241113345): replace with tokens\n */\nexport const EASING = {\n    STANDARD: 'cubic-bezier(0.2, 0, 0, 1)',\n    STANDARD_ACCELERATE: 'cubic-bezier(.3,0,1,1)',\n    STANDARD_DECELERATE: 'cubic-bezier(0,0,0,1)',\n    EMPHASIZED: 'cubic-bezier(.3,0,0,1)',\n    EMPHASIZED_ACCELERATE: 'cubic-bezier(.3,0,.8,.15)',\n    EMPHASIZED_DECELERATE: 'cubic-bezier(.05,.7,.1,1)',\n};\n/**\n * Creates an `AnimationSignal` that can be used to cancel a previous task.\n *\n * @example\n * class MyClass {\n *   private labelAnimationSignal = createAnimationSignal();\n *\n *   private async animateLabel() {\n *     // Start of the task. Previous tasks will be canceled.\n *     const signal = this.labelAnimationSignal.start();\n *\n *     // Do async work...\n *     if (signal.aborted) {\n *       // Use AbortSignal to check if a request was made to abort after some\n *       // asynchronous work.\n *       return;\n *     }\n *\n *     const animation = this.animate(...);\n *     // Add event listeners to be notified when the task should be canceled.\n *     signal.addEventListener('abort', () => {\n *       animation.cancel();\n *     });\n *\n *     animation.addEventListener('finish', () => {\n *       // Tell the signal that the current task is finished.\n *       this.labelAnimationSignal.finish();\n *     });\n *   }\n * }\n *\n * @return An `AnimationSignal`.\n */\nexport function createAnimationSignal() {\n    // The current animation's AbortController\n    let animationAbortController = null;\n    return {\n        start() {\n            // Tell the previous animation to cancel.\n            animationAbortController?.abort();\n            // Set up a new AbortController for the current animation.\n            animationAbortController = new AbortController();\n            // Provide the AbortSignal so that the caller can check aborted status\n            // and add listeners.\n            return animationAbortController.signal;\n        },\n        finish() {\n            animationAbortController = null;\n        },\n    };\n}\n/**\n * Returns a function which can be used to throttle function calls\n * mapped to a key via a given function that should produce a promise that\n * determines the throttle amount (defaults to requestAnimationFrame).\n */\nexport function createThrottle() {\n    const stack = new Set();\n    return async (key = '', cb, timeout = async () => {\n        await new Promise(requestAnimationFrame);\n    }) => {\n        if (!stack.has(key)) {\n            stack.add(key);\n            await timeout();\n            if (stack.has(key)) {\n                stack.delete(key);\n                cb();\n            }\n        }\n    };\n}\n/**\n * Parses an number in milliseconds from a css time value\n */\nexport function msFromTimeCSSValue(value) {\n    const match = value.trim().match(/([\\d.]+)(\\s*s$)?/);\n    const time = match?.[1];\n    const seconds = match?.[2];\n    return Number(time ?? 0) * (seconds ? 1000 : 1);\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { html, isServer, LitElement } from 'lit';\nimport { property, query, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { AttachableController, } from '../../internal/controller/attachable-controller.js';\nimport { EASING } from '../../internal/motion/animation.js';\nconst PRESS_GROW_MS = 450;\nconst MINIMUM_PRESS_MS = 225;\nconst INITIAL_ORIGIN_SCALE = 0.2;\nconst PADDING = 10;\nconst SOFT_EDGE_MINIMUM_SIZE = 75;\nconst SOFT_EDGE_CONTAINER_RATIO = 0.35;\nconst PRESS_PSEUDO = '::after';\nconst ANIMATION_FILL = 'forwards';\n/**\n * Interaction states for the ripple.\n *\n * On Touch:\n *  - `INACTIVE -> TOUCH_DELAY -> WAITING_FOR_CLICK -> INACTIVE`\n *  - `INACTIVE -> TOUCH_DELAY -> HOLDING -> WAITING_FOR_CLICK -> INACTIVE`\n *\n * On Mouse or Pen:\n *   - `INACTIVE -> WAITING_FOR_CLICK -> INACTIVE`\n */\nvar State;\n(function (State) {\n    /**\n     * Initial state of the control, no touch in progress.\n     *\n     * Transitions:\n     *   - on touch down: transition to `TOUCH_DELAY`.\n     *   - on mouse down: transition to `WAITING_FOR_CLICK`.\n     */\n    State[State[\"INACTIVE\"] = 0] = \"INACTIVE\";\n    /**\n     * Touch down has been received, waiting to determine if it's a swipe or\n     * scroll.\n     *\n     * Transitions:\n     *   - on touch up: begin press; transition to `WAITING_FOR_CLICK`.\n     *   - on cancel: transition to `INACTIVE`.\n     *   - after `TOUCH_DELAY_MS`: begin press; transition to `HOLDING`.\n     */\n    State[State[\"TOUCH_DELAY\"] = 1] = \"TOUCH_DELAY\";\n    /**\n     * A touch has been deemed to be a press\n     *\n     * Transitions:\n     *  - on up: transition to `WAITING_FOR_CLICK`.\n     */\n    State[State[\"HOLDING\"] = 2] = \"HOLDING\";\n    /**\n     * The user touch has finished, transition into rest state.\n     *\n     * Transitions:\n     *   - on click end press; transition to `INACTIVE`.\n     */\n    State[State[\"WAITING_FOR_CLICK\"] = 3] = \"WAITING_FOR_CLICK\";\n})(State || (State = {}));\n/**\n * Events that the ripple listens to.\n */\nconst EVENTS = [\n    'click',\n    'contextmenu',\n    'pointercancel',\n    'pointerdown',\n    'pointerenter',\n    'pointerleave',\n    'pointerup',\n];\n/**\n * Delay reacting to touch so that we do not show the ripple for a swipe or\n * scroll interaction.\n */\nconst TOUCH_DELAY_MS = 150;\n/**\n * Used to detect if HCM is active. Events do not process during HCM when the\n * ripple is not displayed.\n */\nconst FORCED_COLORS = isServer\n    ? null\n    : window.matchMedia('(forced-colors: active)');\n/**\n * A ripple component.\n */\nexport class Ripple extends LitElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * Disables the ripple.\n         */\n        this.disabled = false;\n        this.hovered = false;\n        this.pressed = false;\n        this.rippleSize = '';\n        this.rippleScale = '';\n        this.initialSize = 0;\n        this.state = State.INACTIVE;\n        this.checkBoundsAfterContextMenu = false;\n        this.attachableController = new AttachableController(this, this.onControlChange.bind(this));\n    }\n    get htmlFor() {\n        return this.attachableController.htmlFor;\n    }\n    set htmlFor(htmlFor) {\n        this.attachableController.htmlFor = htmlFor;\n    }\n    get control() {\n        return this.attachableController.control;\n    }\n    set control(control) {\n        this.attachableController.control = control;\n    }\n    attach(control) {\n        this.attachableController.attach(control);\n    }\n    detach() {\n        this.attachableController.detach();\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Needed for VoiceOver, which will create a \"group\" if the element is a\n        // sibling to other content.\n        this.setAttribute('aria-hidden', 'true');\n    }\n    render() {\n        const classes = {\n            'hovered': this.hovered,\n            'pressed': this.pressed,\n        };\n        return html `<div class=\"surface ${classMap(classes)}\"></div>`;\n    }\n    update(changedProps) {\n        if (changedProps.has('disabled') && this.disabled) {\n            this.hovered = false;\n            this.pressed = false;\n        }\n        super.update(changedProps);\n    }\n    /**\n     * TODO(b/269799771): make private\n     * @private only public for slider\n     */\n    handlePointerenter(event) {\n        if (!this.shouldReactToEvent(event)) {\n            return;\n        }\n        this.hovered = true;\n    }\n    /**\n     * TODO(b/269799771): make private\n     * @private only public for slider\n     */\n    handlePointerleave(event) {\n        if (!this.shouldReactToEvent(event)) {\n            return;\n        }\n        this.hovered = false;\n        // release a held mouse or pen press that moves outside the element\n        if (this.state !== State.INACTIVE) {\n            this.endPressAnimation();\n        }\n    }\n    handlePointerup(event) {\n        if (!this.shouldReactToEvent(event)) {\n            return;\n        }\n        if (this.state === State.HOLDING) {\n            this.state = State.WAITING_FOR_CLICK;\n            return;\n        }\n        if (this.state === State.TOUCH_DELAY) {\n            this.state = State.WAITING_FOR_CLICK;\n            this.startPressAnimation(this.rippleStartEvent);\n            return;\n        }\n    }\n    async handlePointerdown(event) {\n        if (!this.shouldReactToEvent(event)) {\n            return;\n        }\n        this.rippleStartEvent = event;\n        if (!this.isTouch(event)) {\n            this.state = State.WAITING_FOR_CLICK;\n            this.startPressAnimation(event);\n            return;\n        }\n        // after a longpress contextmenu event, an extra `pointerdown` can be\n        // dispatched to the pressed element. Check that the down is within\n        // bounds of the element in this case.\n        if (this.checkBoundsAfterContextMenu && !this.inBounds(event)) {\n            return;\n        }\n        this.checkBoundsAfterContextMenu = false;\n        // Wait for a hold after touch delay\n        this.state = State.TOUCH_DELAY;\n        await new Promise((resolve) => {\n            setTimeout(resolve, TOUCH_DELAY_MS);\n        });\n        if (this.state !== State.TOUCH_DELAY) {\n            return;\n        }\n        this.state = State.HOLDING;\n        this.startPressAnimation(event);\n    }\n    handleClick() {\n        // Click is a MouseEvent in Firefox and Safari, so we cannot use\n        // `shouldReactToEvent`\n        if (this.disabled) {\n            return;\n        }\n        if (this.state === State.WAITING_FOR_CLICK) {\n            this.endPressAnimation();\n            return;\n        }\n        if (this.state === State.INACTIVE) {\n            // keyboard synthesized click event\n            this.startPressAnimation();\n            this.endPressAnimation();\n        }\n    }\n    handlePointercancel(event) {\n        if (!this.shouldReactToEvent(event)) {\n            return;\n        }\n        this.endPressAnimation();\n    }\n    handleContextmenu() {\n        if (this.disabled) {\n            return;\n        }\n        this.checkBoundsAfterContextMenu = true;\n        this.endPressAnimation();\n    }\n    determineRippleSize() {\n        const { height, width } = this.getBoundingClientRect();\n        const maxDim = Math.max(height, width);\n        const softEdgeSize = Math.max(SOFT_EDGE_CONTAINER_RATIO * maxDim, SOFT_EDGE_MINIMUM_SIZE);\n        const initialSize = Math.floor(maxDim * INITIAL_ORIGIN_SCALE);\n        const hypotenuse = Math.sqrt(width ** 2 + height ** 2);\n        const maxRadius = hypotenuse + PADDING;\n        this.initialSize = initialSize;\n        this.rippleScale = `${(maxRadius + softEdgeSize) / initialSize}`;\n        this.rippleSize = `${initialSize}px`;\n    }\n    getNormalizedPointerEventCoords(pointerEvent) {\n        const { scrollX, scrollY } = window;\n        const { left, top } = this.getBoundingClientRect();\n        const documentX = scrollX + left;\n        const documentY = scrollY + top;\n        const { pageX, pageY } = pointerEvent;\n        return { x: pageX - documentX, y: pageY - documentY };\n    }\n    getTranslationCoordinates(positionEvent) {\n        const { height, width } = this.getBoundingClientRect();\n        // end in the center\n        const endPoint = {\n            x: (width - this.initialSize) / 2,\n            y: (height - this.initialSize) / 2,\n        };\n        let startPoint;\n        if (positionEvent instanceof PointerEvent) {\n            startPoint = this.getNormalizedPointerEventCoords(positionEvent);\n        }\n        else {\n            startPoint = {\n                x: width / 2,\n                y: height / 2,\n            };\n        }\n        // center around start point\n        startPoint = {\n            x: startPoint.x - this.initialSize / 2,\n            y: startPoint.y - this.initialSize / 2,\n        };\n        return { startPoint, endPoint };\n    }\n    startPressAnimation(positionEvent) {\n        if (!this.mdRoot) {\n            return;\n        }\n        this.pressed = true;\n        this.growAnimation?.cancel();\n        this.determineRippleSize();\n        const { startPoint, endPoint } = this.getTranslationCoordinates(positionEvent);\n        const translateStart = `${startPoint.x}px, ${startPoint.y}px`;\n        const translateEnd = `${endPoint.x}px, ${endPoint.y}px`;\n        this.growAnimation = this.mdRoot.animate({\n            top: [0, 0],\n            left: [0, 0],\n            height: [this.rippleSize, this.rippleSize],\n            width: [this.rippleSize, this.rippleSize],\n            transform: [\n                `translate(${translateStart}) scale(1)`,\n                `translate(${translateEnd}) scale(${this.rippleScale})`,\n            ],\n        }, {\n            pseudoElement: PRESS_PSEUDO,\n            duration: PRESS_GROW_MS,\n            easing: EASING.STANDARD,\n            fill: ANIMATION_FILL,\n        });\n    }\n    async endPressAnimation() {\n        this.rippleStartEvent = undefined;\n        this.state = State.INACTIVE;\n        const animation = this.growAnimation;\n        let pressAnimationPlayState = Infinity;\n        if (typeof animation?.currentTime === 'number') {\n            pressAnimationPlayState = animation.currentTime;\n        }\n        else if (animation?.currentTime) {\n            pressAnimationPlayState = animation.currentTime.to('ms').value;\n        }\n        if (pressAnimationPlayState >= MINIMUM_PRESS_MS) {\n            this.pressed = false;\n            return;\n        }\n        await new Promise((resolve) => {\n            setTimeout(resolve, MINIMUM_PRESS_MS - pressAnimationPlayState);\n        });\n        if (this.growAnimation !== animation) {\n            // A new press animation was started. The old animation was canceled and\n            // should not finish the pressed state.\n            return;\n        }\n        this.pressed = false;\n    }\n    /**\n     * Returns `true` if\n     *  - the ripple element is enabled\n     *  - the pointer is primary for the input type\n     *  - the pointer is the pointer that started the interaction, or will start\n     * the interaction\n     *  - the pointer is a touch, or the pointer state has the primary button\n     * held, or the pointer is hovering\n     */\n    shouldReactToEvent(event) {\n        if (this.disabled || !event.isPrimary) {\n            return false;\n        }\n        if (this.rippleStartEvent &&\n            this.rippleStartEvent.pointerId !== event.pointerId) {\n            return false;\n        }\n        if (event.type === 'pointerenter' || event.type === 'pointerleave') {\n            return !this.isTouch(event);\n        }\n        const isPrimaryButton = event.buttons === 1;\n        return this.isTouch(event) || isPrimaryButton;\n    }\n    /**\n     * Check if the event is within the bounds of the element.\n     *\n     * This is only needed for the \"stuck\" contextmenu longpress on Chrome.\n     */\n    inBounds({ x, y }) {\n        const { top, left, bottom, right } = this.getBoundingClientRect();\n        return x >= left && x <= right && y >= top && y <= bottom;\n    }\n    isTouch({ pointerType }) {\n        return pointerType === 'touch';\n    }\n    /** @private */\n    async handleEvent(event) {\n        if (FORCED_COLORS?.matches) {\n            // Skip event logic since the ripple is `display: none`.\n            return;\n        }\n        switch (event.type) {\n            case 'click':\n                this.handleClick();\n                break;\n            case 'contextmenu':\n                this.handleContextmenu();\n                break;\n            case 'pointercancel':\n                this.handlePointercancel(event);\n                break;\n            case 'pointerdown':\n                await this.handlePointerdown(event);\n                break;\n            case 'pointerenter':\n                this.handlePointerenter(event);\n                break;\n            case 'pointerleave':\n                this.handlePointerleave(event);\n                break;\n            case 'pointerup':\n                this.handlePointerup(event);\n                break;\n            default:\n                break;\n        }\n    }\n    onControlChange(prev, next) {\n        if (isServer)\n            return;\n        for (const event of EVENTS) {\n            prev?.removeEventListener(event, this);\n            next?.addEventListener(event, this);\n        }\n    }\n}\n__decorate([\n    property({ type: Boolean, reflect: true })\n], Ripple.prototype, \"disabled\", void 0);\n__decorate([\n    state()\n], Ripple.prototype, \"hovered\", void 0);\n__decorate([\n    state()\n], Ripple.prototype, \"pressed\", void 0);\n__decorate([\n    query('.surface')\n], Ripple.prototype, \"mdRoot\", void 0);\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./ripple/internal/ripple-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{display:flex;margin:auto;pointer-events:none}:host([disabled]){display:none}@media(forced-colors: active){:host{display:none}}:host,.surface{border-radius:inherit;position:absolute;inset:0;overflow:hidden}.surface{-webkit-tap-highlight-color:rgba(0,0,0,0)}.surface::before,.surface::after{content:\"\";opacity:0;position:absolute}.surface::before{background-color:var(--md-ripple-hover-color, var(--md-sys-color-on-surface, #1d1b20));inset:0;transition:opacity 15ms linear,background-color 15ms linear}.surface::after{background:radial-gradient(closest-side, var(--md-ripple-pressed-color, var(--md-sys-color-on-surface, #1d1b20)) max(100% - 70px, 65%), transparent 100%);transform-origin:center center;transition:opacity 375ms linear}.hovered::before{background-color:var(--md-ripple-hover-color, var(--md-sys-color-on-surface, #1d1b20));opacity:var(--md-ripple-hover-opacity, 0.08)}.pressed::after{opacity:var(--md-ripple-pressed-opacity, 0.12);transition-duration:105ms}\n`;\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { Ripple } from './internal/ripple.js';\nimport { styles } from './internal/ripple-styles.js';\n/**\n * @summary Ripples, also known as state layers, are visual indicators used to\n * communicate the status of a component or interactive element.\n *\n * @description A state layer is a semi-transparent covering on an element that\n * indicates its state. State layers provide a systematic approach to\n * visualizing states by using opacity. A layer can be applied to an entire\n * element or in a circular shape and only one state layer can be applied at a\n * given time.\n *\n * @final\n * @suppress {visibility}\n */\nexport let MdRipple = class MdRipple extends Ripple {\n};\nMdRipple.styles = [styles];\nMdRipple = __decorate([\n    customElement('md-ripple')\n], MdRipple);\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * Accessibility Object Model reflective aria properties.\n */\nexport const ARIA_PROPERTIES = [\n    'role',\n    'ariaAtomic',\n    'ariaAutoComplete',\n    'ariaBusy',\n    'ariaChecked',\n    'ariaColCount',\n    'ariaColIndex',\n    'ariaColSpan',\n    'ariaCurrent',\n    'ariaDisabled',\n    'ariaExpanded',\n    'ariaHasPopup',\n    'ariaHidden',\n    'ariaInvalid',\n    'ariaKeyShortcuts',\n    'ariaLabel',\n    'ariaLevel',\n    'ariaLive',\n    'ariaModal',\n    'ariaMultiLine',\n    'ariaMultiSelectable',\n    'ariaOrientation',\n    'ariaPlaceholder',\n    'ariaPosInSet',\n    'ariaPressed',\n    'ariaReadOnly',\n    'ariaRequired',\n    'ariaRoleDescription',\n    'ariaRowCount',\n    'ariaRowIndex',\n    'ariaRowSpan',\n    'ariaSelected',\n    'ariaSetSize',\n    'ariaSort',\n    'ariaValueMax',\n    'ariaValueMin',\n    'ariaValueNow',\n    'ariaValueText',\n];\n/**\n * Accessibility Object Model aria attributes.\n */\nexport const ARIA_ATTRIBUTES = ARIA_PROPERTIES.map(ariaPropertyToAttribute);\n/**\n * Checks if an attribute is one of the AOM aria attributes.\n *\n * @example\n * isAriaAttribute('aria-label'); // true\n *\n * @param attribute The attribute to check.\n * @return True if the attribute is an aria attribute, or false if not.\n */\nexport function isAriaAttribute(attribute) {\n    return ARIA_ATTRIBUTES.includes(attribute);\n}\n/**\n * Converts an AOM aria property into its corresponding attribute.\n *\n * @example\n * ariaPropertyToAttribute('ariaLabel'); // 'aria-label'\n *\n * @param property The aria property.\n * @return The aria attribute.\n */\nexport function ariaPropertyToAttribute(property) {\n    return property\n        .replace('aria', 'aria-')\n        // IDREF attributes also include an \"Element\" or \"Elements\" suffix\n        .replace(/Elements?/g, '')\n        .toLowerCase();\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { isServer } from 'lit';\nimport { ARIA_PROPERTIES, ariaPropertyToAttribute, isAriaAttribute, } from './aria.js';\n// Private symbols\nconst privateIgnoreAttributeChangesFor = Symbol('privateIgnoreAttributeChangesFor');\n/**\n * Mixes in aria delegation for elements that delegate focus and aria to inner\n * shadow root elements.\n *\n * This mixin fixes invalid aria announcements with shadow roots, caused by\n * duplicate aria attributes on both the host and the inner shadow root element.\n *\n * Note: this mixin **does not yet support** ID reference attributes, such as\n * `aria-labelledby` or `aria-controls`.\n *\n * @example\n * ```ts\n * class MyButton extends mixinDelegatesAria(LitElement) {\n *   static shadowRootOptions = {mode: 'open', delegatesFocus: true};\n *\n *   render() {\n *     return html`\n *       <button aria-label=${this.ariaLabel || nothing}>\n *         <slot></slot>\n *       </button>\n *     `;\n *   }\n * }\n * ```\n * ```html\n * <my-button aria-label=\"Plus one\">+1</my-button>\n * ```\n *\n * Use `ARIAMixinStrict` for lit analyzer strict types, such as the \"role\"\n * attribute.\n *\n * @example\n * ```ts\n * return html`\n *   <button role=${(this as ARIAMixinStrict).role || nothing}>\n *     <slot></slot>\n *   </button>\n * `;\n * ```\n *\n * In the future, updates to the Accessibility Object Model (AOM) will provide\n * built-in aria delegation features that will replace this mixin.\n *\n * @param base The class to mix functionality into.\n * @return The provided class with aria delegation mixed in.\n */\nexport function mixinDelegatesAria(base) {\n    var _a;\n    if (isServer) {\n        // Don't shift attributes when running with lit-ssr. The SSR renderer\n        // implements a subset of DOM APIs, including the methods this mixin\n        // overrides, causing errors. We don't need to shift on the server anyway\n        // since elements will shift attributes immediately once they hydrate.\n        return base;\n    }\n    class WithDelegatesAriaElement extends base {\n        constructor() {\n            super(...arguments);\n            this[_a] = new Set();\n        }\n        attributeChangedCallback(name, oldValue, newValue) {\n            if (!isAriaAttribute(name)) {\n                super.attributeChangedCallback(name, oldValue, newValue);\n                return;\n            }\n            if (this[privateIgnoreAttributeChangesFor].has(name)) {\n                return;\n            }\n            // Don't trigger another `attributeChangedCallback` once we remove the\n            // aria attribute from the host. We check the explicit name of the\n            // attribute to ignore since `attributeChangedCallback` can be called\n            // multiple times out of an expected order when hydrating an element with\n            // multiple attributes.\n            this[privateIgnoreAttributeChangesFor].add(name);\n            this.removeAttribute(name);\n            this[privateIgnoreAttributeChangesFor].delete(name);\n            const dataProperty = ariaAttributeToDataProperty(name);\n            if (newValue === null) {\n                delete this.dataset[dataProperty];\n            }\n            else {\n                this.dataset[dataProperty] = newValue;\n            }\n            this.requestUpdate(ariaAttributeToDataProperty(name), oldValue);\n        }\n        getAttribute(name) {\n            if (isAriaAttribute(name)) {\n                return super.getAttribute(ariaAttributeToDataAttribute(name));\n            }\n            return super.getAttribute(name);\n        }\n        removeAttribute(name) {\n            super.removeAttribute(name);\n            if (isAriaAttribute(name)) {\n                super.removeAttribute(ariaAttributeToDataAttribute(name));\n                // Since `aria-*` attributes are already removed`, we need to request\n                // an update because `attributeChangedCallback` will not be called.\n                this.requestUpdate();\n            }\n        }\n    }\n    _a = privateIgnoreAttributeChangesFor;\n    setupDelegatesAriaProperties(WithDelegatesAriaElement);\n    return WithDelegatesAriaElement;\n}\n/**\n * Overrides the constructor's native `ARIAMixin` properties to ensure that\n * aria properties reflect the values that were shifted to a data attribute.\n *\n * @param ctor The `ReactiveElement` constructor to patch.\n */\nfunction setupDelegatesAriaProperties(ctor) {\n    for (const ariaProperty of ARIA_PROPERTIES) {\n        // The casing between ariaProperty and the dataProperty may be different.\n        // ex: aria-haspopup -> ariaHasPopup\n        const ariaAttribute = ariaPropertyToAttribute(ariaProperty);\n        // ex: aria-haspopup -> data-aria-haspopup\n        const dataAttribute = ariaAttributeToDataAttribute(ariaAttribute);\n        // ex: aria-haspopup -> dataset.ariaHaspopup\n        const dataProperty = ariaAttributeToDataProperty(ariaAttribute);\n        // Call `ReactiveElement.createProperty()` so that the `aria-*` and `data-*`\n        // attributes are added to the `static observedAttributes` array. This\n        // triggers `attributeChangedCallback` for the delegates aria mixin to\n        // handle.\n        ctor.createProperty(ariaProperty, {\n            attribute: ariaAttribute,\n            noAccessor: true,\n        });\n        ctor.createProperty(Symbol(dataAttribute), {\n            attribute: dataAttribute,\n            noAccessor: true,\n        });\n        // Re-define the `ARIAMixin` properties to handle data attribute shifting.\n        // It is safe to use `Object.defineProperty` here because the properties\n        // are native and not renamed.\n        // tslint:disable-next-line:ban-unsafe-reflection\n        Object.defineProperty(ctor.prototype, ariaProperty, {\n            configurable: true,\n            enumerable: true,\n            get() {\n                return this.dataset[dataProperty] ?? null;\n            },\n            set(value) {\n                const prevValue = this.dataset[dataProperty] ?? null;\n                if (value === prevValue) {\n                    return;\n                }\n                if (value === null) {\n                    delete this.dataset[dataProperty];\n                }\n                else {\n                    this.dataset[dataProperty] = value;\n                }\n                this.requestUpdate(ariaProperty, prevValue);\n            },\n        });\n    }\n}\nfunction ariaAttributeToDataAttribute(ariaAttribute) {\n    // aria-haspopup -> data-aria-haspopup\n    return `data-${ariaAttribute}`;\n}\nfunction ariaAttributeToDataProperty(ariaAttribute) {\n    // aria-haspopup -> dataset.ariaHaspopup\n    return ariaAttribute.replace(/-\\w/, (dashLetter) => dashLetter[1].toUpperCase());\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * A unique symbol used for protected access to an instance's\n * `ElementInternals`.\n *\n * @example\n * ```ts\n * class MyElement extends mixinElementInternals(LitElement) {\n *   constructor() {\n *     super();\n *     this[internals].role = 'button';\n *   }\n * }\n * ```\n */\nexport const internals = Symbol('internals');\n// Private symbols\nconst privateInternals = Symbol('privateInternals');\n/**\n * Mixes in an attached `ElementInternals` instance.\n *\n * This mixin is only needed when other shared code needs access to a\n * component's `ElementInternals`, such as form-associated mixins.\n *\n * @param base The class to mix functionality into.\n * @return The provided class with `WithElementInternals` mixed in.\n */\nexport function mixinElementInternals(base) {\n    class WithElementInternalsElement extends base {\n        get [internals]() {\n            // Create internals in getter so that it can be used in methods called on\n            // construction in `ReactiveElement`, such as `requestUpdate()`.\n            if (!this[privateInternals]) {\n                // Cast needed for closure\n                this[privateInternals] = this.attachInternals();\n            }\n            return this[privateInternals];\n        }\n    }\n    return WithElementInternalsElement;\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { isServer } from 'lit';\nimport { internals, } from '../../labs/behaviors/element-internals.js';\n/**\n * Sets up an element's constructor to enable form submission. The element\n * instance should be form associated and have a `type` property.\n *\n * A click listener is added to each element instance. If the click is not\n * default prevented, it will submit the element's form, if any.\n *\n * @example\n * ```ts\n * class MyElement extends mixinElementInternals(LitElement) {\n *   static {\n *     setupFormSubmitter(MyElement);\n *   }\n *\n *   static formAssociated = true;\n *\n *   type: FormSubmitterType = 'submit';\n * }\n * ```\n *\n * @param ctor The form submitter element's constructor.\n */\nexport function setupFormSubmitter(ctor) {\n    if (isServer) {\n        return;\n    }\n    ctor.addInitializer((instance) => {\n        const submitter = instance;\n        submitter.addEventListener('click', async (event) => {\n            const { type, [internals]: elementInternals } = submitter;\n            const { form } = elementInternals;\n            if (!form || type === 'button') {\n                return;\n            }\n            // Wait a full task for event bubbling to complete.\n            await new Promise((resolve) => {\n                setTimeout(resolve);\n            });\n            if (event.defaultPrevented) {\n                return;\n            }\n            if (type === 'reset') {\n                form.reset();\n                return;\n            }\n            // form.requestSubmit(submitter) does not work with form associated custom\n            // elements. This patches the dispatched submit event to add the correct\n            // `submitter`.\n            // See https://github.com/WICG/webcomponents/issues/814\n            form.addEventListener('submit', (submitEvent) => {\n                Object.defineProperty(submitEvent, 'submitter', {\n                    configurable: true,\n                    enumerable: true,\n                    get: () => submitter,\n                });\n            }, { capture: true, once: true });\n            elementInternals.setFormValue(submitter.value);\n            form.requestSubmit();\n        });\n    });\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * Dispatches a click event to the given element that triggers a native action,\n * but is not composed and therefore is not seen outside the element.\n *\n * This is useful for responding to an external click event on the host element\n * that should trigger an internal action like a button click.\n *\n * Note, a helper is provided because setting this up correctly is a bit tricky.\n * In particular, calling `click` on an element creates a composed event, which\n * is not desirable, and a manually dispatched event must specifically be a\n * `MouseEvent` to trigger a native action.\n *\n * @example\n * hostClickListener = (event: MouseEvent) {\n *   if (isActivationClick(event)) {\n *     this.dispatchActivationClick(this.buttonElement);\n *   }\n * }\n *\n */\nexport function dispatchActivationClick(element) {\n    const event = new MouseEvent('click', { bubbles: true });\n    element.dispatchEvent(event);\n    return event;\n}\n/**\n * Returns true if the click event should trigger an activation behavior. The\n * behavior is defined by the element and is whatever it should do when\n * clicked.\n *\n * Typically when an element needs to handle a click, the click is generated\n * from within the element and an event listener within the element implements\n * the needed behavior; however, it's possible to fire a click directly\n * at the element that the element should handle. This method helps\n * distinguish these \"external\" clicks.\n *\n * An \"external\" click can be triggered in a number of ways: via a click\n * on an associated label for a form  associated element, calling\n * `element.click()`, or calling\n * `element.dispatchEvent(new MouseEvent('click', ...))`.\n *\n * Also works around Firefox issue\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1804576 by squelching\n * events for a microtask after called.\n *\n * @example\n * hostClickListener = (event: MouseEvent) {\n *   if (isActivationClick(event)) {\n *     this.dispatchActivationClick(this.buttonElement);\n *   }\n * }\n *\n */\nexport function isActivationClick(event) {\n    // Event must start at the event target.\n    if (event.currentTarget !== event.target) {\n        return false;\n    }\n    // Event must not be retargeted from shadowRoot.\n    if (event.composedPath()[0] !== event.target) {\n        return false;\n    }\n    // Target must not be disabled; this should only occur for a synthetically\n    // dispatched click.\n    if (event.target.disabled) {\n        return false;\n    }\n    // This is an activation if the event should not be squelched.\n    return !squelchEvent(event);\n}\n// TODO(https://bugzilla.mozilla.org/show_bug.cgi?id=1804576)\n//  Remove when Firefox bug is addressed.\nfunction squelchEvent(event) {\n    const squelched = isSquelchingEvents;\n    if (squelched) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n    }\n    squelchEventsForMicrotask();\n    return squelched;\n}\n// Ignore events for one microtask only.\nlet isSquelchingEvents = false;\nasync function squelchEventsForMicrotask() {\n    isSquelchingEvents = true;\n    // Need to pause for just one microtask.\n    // tslint:disable-next-line\n    await null;\n    isSquelchingEvents = false;\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport '../../focus/md-focus-ring.js';\nimport '../../ripple/ripple.js';\nimport { html, isServer, LitElement, nothing } from 'lit';\nimport { property, query, queryAssignedElements } from 'lit/decorators.js';\nimport { mixinDelegatesAria } from '../../internal/aria/delegate.js';\nimport { setupFormSubmitter, } from '../../internal/controller/form-submitter.js';\nimport { dispatchActivationClick, isActivationClick, } from '../../internal/events/form-label-activation.js';\nimport { internals, mixinElementInternals, } from '../../labs/behaviors/element-internals.js';\n// Separate variable needed for closure.\nconst buttonBaseClass = mixinDelegatesAria(mixinElementInternals(LitElement));\n/**\n * A button component.\n */\nexport class Button extends buttonBaseClass {\n    get name() {\n        return this.getAttribute('name') ?? '';\n    }\n    set name(name) {\n        this.setAttribute('name', name);\n    }\n    /**\n     * The associated form element with which this element's value will submit.\n     */\n    get form() {\n        return this[internals].form;\n    }\n    constructor() {\n        super();\n        /**\n         * Whether or not the button is disabled.\n         */\n        this.disabled = false;\n        /**\n         * Whether or not the button is \"soft-disabled\" (disabled but still\n         * focusable).\n         *\n         * Use this when a button needs increased visibility when disabled. See\n         * https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/#kbd_disabled_controls\n         * for more guidance on when this is needed.\n         */\n        this.softDisabled = false;\n        /**\n         * The URL that the link button points to.\n         */\n        this.href = '';\n        /**\n         * Where to display the linked `href` URL for a link button. Common options\n         * include `_blank` to open in a new tab.\n         */\n        this.target = '';\n        /**\n         * Whether to render the icon at the inline end of the label rather than the\n         * inline start.\n         *\n         * _Note:_ Link buttons cannot have trailing icons.\n         */\n        this.trailingIcon = false;\n        /**\n         * Whether to display the icon or not.\n         */\n        this.hasIcon = false;\n        /**\n         * The default behavior of the button. May be \"button\", \"reset\", or \"submit\"\n         * (default).\n         */\n        this.type = 'submit';\n        /**\n         * The value added to a form with the button's name when the button submits a\n         * form.\n         */\n        this.value = '';\n        if (!isServer) {\n            this.addEventListener('click', this.handleClick.bind(this));\n        }\n    }\n    focus() {\n        this.buttonElement?.focus();\n    }\n    blur() {\n        this.buttonElement?.blur();\n    }\n    render() {\n        // Link buttons may not be disabled\n        const isRippleDisabled = !this.href && (this.disabled || this.softDisabled);\n        const buttonOrLink = this.href ? this.renderLink() : this.renderButton();\n        // TODO(b/310046938): due to a limitation in focus ring/ripple, we can't use\n        // the same ID for different elements, so we change the ID instead.\n        const buttonId = this.href ? 'link' : 'button';\n        return html `\n      ${this.renderElevationOrOutline?.()}\n      <div class=\"background\"></div>\n      <md-focus-ring part=\"focus-ring\" for=${buttonId}></md-focus-ring>\n      <md-ripple\n        part=\"ripple\"\n        for=${buttonId}\n        ?disabled=\"${isRippleDisabled}\"></md-ripple>\n      ${buttonOrLink}\n    `;\n    }\n    renderButton() {\n        // Needed for closure conformance\n        const { ariaLabel, ariaHasPopup, ariaExpanded } = this;\n        return html `<button\n      id=\"button\"\n      class=\"button\"\n      ?disabled=${this.disabled}\n      aria-disabled=${this.softDisabled || nothing}\n      aria-label=\"${ariaLabel || nothing}\"\n      aria-haspopup=\"${ariaHasPopup || nothing}\"\n      aria-expanded=\"${ariaExpanded || nothing}\">\n      ${this.renderContent()}\n    </button>`;\n    }\n    renderLink() {\n        // Needed for closure conformance\n        const { ariaLabel, ariaHasPopup, ariaExpanded } = this;\n        return html `<a\n      id=\"link\"\n      class=\"button\"\n      aria-label=\"${ariaLabel || nothing}\"\n      aria-haspopup=\"${ariaHasPopup || nothing}\"\n      aria-expanded=\"${ariaExpanded || nothing}\"\n      href=${this.href}\n      target=${this.target || nothing}\n      >${this.renderContent()}\n    </a>`;\n    }\n    renderContent() {\n        const icon = html `<slot\n      name=\"icon\"\n      @slotchange=\"${this.handleSlotChange}\"></slot>`;\n        return html `\n      <span class=\"touch\"></span>\n      ${this.trailingIcon ? nothing : icon}\n      <span class=\"label\"><slot></slot></span>\n      ${this.trailingIcon ? icon : nothing}\n    `;\n    }\n    handleClick(event) {\n        // If the button is soft-disabled, we need to explicitly prevent the click\n        // from propagating to other event listeners as well as prevent the default\n        // action.\n        if (!this.href && this.softDisabled) {\n            event.stopImmediatePropagation();\n            event.preventDefault();\n            return;\n        }\n        if (!isActivationClick(event) || !this.buttonElement) {\n            return;\n        }\n        this.focus();\n        dispatchActivationClick(this.buttonElement);\n    }\n    handleSlotChange() {\n        this.hasIcon = this.assignedIcons.length > 0;\n    }\n}\n(() => {\n    setupFormSubmitter(Button);\n})();\n/** @nocollapse */\nButton.formAssociated = true;\n/** @nocollapse */\nButton.shadowRootOptions = {\n    mode: 'open',\n    delegatesFocus: true,\n};\n__decorate([\n    property({ type: Boolean, reflect: true })\n], Button.prototype, \"disabled\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'soft-disabled', reflect: true })\n], Button.prototype, \"softDisabled\", void 0);\n__decorate([\n    property()\n], Button.prototype, \"href\", void 0);\n__decorate([\n    property()\n], Button.prototype, \"target\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'trailing-icon', reflect: true })\n], Button.prototype, \"trailingIcon\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'has-icon', reflect: true })\n], Button.prototype, \"hasIcon\", void 0);\n__decorate([\n    property()\n], Button.prototype, \"type\", void 0);\n__decorate([\n    property({ reflect: true })\n], Button.prototype, \"value\", void 0);\n__decorate([\n    query('.button')\n], Button.prototype, \"buttonElement\", void 0);\n__decorate([\n    queryAssignedElements({ slot: 'icon', flatten: true })\n], Button.prototype, \"assignedIcons\", void 0);\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport '../../elevation/elevation.js';\nimport { html } from 'lit';\nimport { Button } from './button.js';\n/**\n * An elevated button component.\n */\nexport class ElevatedButton extends Button {\n    renderElevationOrOutline() {\n        return html `<md-elevation part=\"elevation\"></md-elevation>`;\n    }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./button/internal/elevated-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{--_container-color: var(--md-elevated-button-container-color, var(--md-sys-color-surface-container-low, #f7f2fa));--_container-elevation: var(--md-elevated-button-container-elevation, 1);--_container-height: var(--md-elevated-button-container-height, 40px);--_container-shadow-color: var(--md-elevated-button-container-shadow-color, var(--md-sys-color-shadow, #000));--_disabled-container-color: var(--md-elevated-button-disabled-container-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-container-elevation: var(--md-elevated-button-disabled-container-elevation, 0);--_disabled-container-opacity: var(--md-elevated-button-disabled-container-opacity, 0.12);--_disabled-label-text-color: var(--md-elevated-button-disabled-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-label-text-opacity: var(--md-elevated-button-disabled-label-text-opacity, 0.38);--_focus-container-elevation: var(--md-elevated-button-focus-container-elevation, 1);--_focus-label-text-color: var(--md-elevated-button-focus-label-text-color, var(--md-sys-color-primary, #6750a4));--_hover-container-elevation: var(--md-elevated-button-hover-container-elevation, 2);--_hover-label-text-color: var(--md-elevated-button-hover-label-text-color, var(--md-sys-color-primary, #6750a4));--_hover-state-layer-color: var(--md-elevated-button-hover-state-layer-color, var(--md-sys-color-primary, #6750a4));--_hover-state-layer-opacity: var(--md-elevated-button-hover-state-layer-opacity, 0.08);--_label-text-color: var(--md-elevated-button-label-text-color, var(--md-sys-color-primary, #6750a4));--_label-text-font: var(--md-elevated-button-label-text-font, var(--md-sys-typescale-label-large-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-elevated-button-label-text-line-height, var(--md-sys-typescale-label-large-line-height, 1.25rem));--_label-text-size: var(--md-elevated-button-label-text-size, var(--md-sys-typescale-label-large-size, 0.875rem));--_label-text-weight: var(--md-elevated-button-label-text-weight, var(--md-sys-typescale-label-large-weight, var(--md-ref-typeface-weight-medium, 500)));--_pressed-container-elevation: var(--md-elevated-button-pressed-container-elevation, 1);--_pressed-label-text-color: var(--md-elevated-button-pressed-label-text-color, var(--md-sys-color-primary, #6750a4));--_pressed-state-layer-color: var(--md-elevated-button-pressed-state-layer-color, var(--md-sys-color-primary, #6750a4));--_pressed-state-layer-opacity: var(--md-elevated-button-pressed-state-layer-opacity, 0.12);--_disabled-icon-color: var(--md-elevated-button-disabled-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-icon-opacity: var(--md-elevated-button-disabled-icon-opacity, 0.38);--_focus-icon-color: var(--md-elevated-button-focus-icon-color, var(--md-sys-color-primary, #6750a4));--_hover-icon-color: var(--md-elevated-button-hover-icon-color, var(--md-sys-color-primary, #6750a4));--_icon-color: var(--md-elevated-button-icon-color, var(--md-sys-color-primary, #6750a4));--_icon-size: var(--md-elevated-button-icon-size, 18px);--_pressed-icon-color: var(--md-elevated-button-pressed-icon-color, var(--md-sys-color-primary, #6750a4));--_container-shape-start-start: var(--md-elevated-button-container-shape-start-start, var(--md-elevated-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-start-end: var(--md-elevated-button-container-shape-start-end, var(--md-elevated-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-end-end: var(--md-elevated-button-container-shape-end-end, var(--md-elevated-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-end-start: var(--md-elevated-button-container-shape-end-start, var(--md-elevated-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_leading-space: var(--md-elevated-button-leading-space, 24px);--_trailing-space: var(--md-elevated-button-trailing-space, 24px);--_with-leading-icon-leading-space: var(--md-elevated-button-with-leading-icon-leading-space, 16px);--_with-leading-icon-trailing-space: var(--md-elevated-button-with-leading-icon-trailing-space, 24px);--_with-trailing-icon-leading-space: var(--md-elevated-button-with-trailing-icon-leading-space, 24px);--_with-trailing-icon-trailing-space: var(--md-elevated-button-with-trailing-icon-trailing-space, 16px)}\n`;\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./button/internal/shared-elevation-styles.css.\nimport { css } from 'lit';\nexport const styles = css `md-elevation{transition-duration:280ms}:host(:is([disabled],[soft-disabled])) md-elevation{transition:none}md-elevation{--md-elevation-level: var(--_container-elevation);--md-elevation-shadow-color: var(--_container-shadow-color)}:host(:focus-within) md-elevation{--md-elevation-level: var(--_focus-container-elevation)}:host(:hover) md-elevation{--md-elevation-level: var(--_hover-container-elevation)}:host(:active) md-elevation{--md-elevation-level: var(--_pressed-container-elevation)}:host(:is([disabled],[soft-disabled])) md-elevation{--md-elevation-level: var(--_disabled-container-elevation)}\n`;\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./button/internal/shared-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{border-start-start-radius:var(--_container-shape-start-start);border-start-end-radius:var(--_container-shape-start-end);border-end-start-radius:var(--_container-shape-end-start);border-end-end-radius:var(--_container-shape-end-end);box-sizing:border-box;cursor:pointer;display:inline-flex;gap:8px;min-height:var(--_container-height);outline:none;padding-block:calc((var(--_container-height) - max(var(--_label-text-line-height),var(--_icon-size)))/2);padding-inline-start:var(--_leading-space);padding-inline-end:var(--_trailing-space);place-content:center;place-items:center;position:relative;font-family:var(--_label-text-font);font-size:var(--_label-text-size);line-height:var(--_label-text-line-height);font-weight:var(--_label-text-weight);text-overflow:ellipsis;text-wrap:nowrap;user-select:none;-webkit-tap-highlight-color:rgba(0,0,0,0);vertical-align:top;--md-ripple-hover-color: var(--_hover-state-layer-color);--md-ripple-pressed-color: var(--_pressed-state-layer-color);--md-ripple-hover-opacity: var(--_hover-state-layer-opacity);--md-ripple-pressed-opacity: var(--_pressed-state-layer-opacity)}md-focus-ring{--md-focus-ring-shape-start-start: var(--_container-shape-start-start);--md-focus-ring-shape-start-end: var(--_container-shape-start-end);--md-focus-ring-shape-end-end: var(--_container-shape-end-end);--md-focus-ring-shape-end-start: var(--_container-shape-end-start)}:host(:is([disabled],[soft-disabled])){cursor:default;pointer-events:none}.button{border-radius:inherit;cursor:inherit;display:inline-flex;align-items:center;justify-content:center;border:none;outline:none;-webkit-appearance:none;vertical-align:middle;background:rgba(0,0,0,0);text-decoration:none;min-width:calc(64px - var(--_leading-space) - var(--_trailing-space));width:100%;z-index:0;height:100%;font:inherit;color:var(--_label-text-color);padding:0;gap:inherit;text-transform:inherit}.button::-moz-focus-inner{padding:0;border:0}:host(:hover) .button{color:var(--_hover-label-text-color)}:host(:focus-within) .button{color:var(--_focus-label-text-color)}:host(:active) .button{color:var(--_pressed-label-text-color)}.background{background-color:var(--_container-color);border-radius:inherit;inset:0;position:absolute}.label{overflow:hidden}:is(.button,.label,.label slot),.label ::slotted(*){text-overflow:inherit}:host(:is([disabled],[soft-disabled])) .label{color:var(--_disabled-label-text-color);opacity:var(--_disabled-label-text-opacity)}:host(:is([disabled],[soft-disabled])) .background{background-color:var(--_disabled-container-color);opacity:var(--_disabled-container-opacity)}@media(forced-colors: active){.background{border:1px solid CanvasText}:host(:is([disabled],[soft-disabled])){--_disabled-icon-color: GrayText;--_disabled-icon-opacity: 1;--_disabled-container-opacity: 1;--_disabled-label-text-color: GrayText;--_disabled-label-text-opacity: 1}}:host([has-icon]:not([trailing-icon])){padding-inline-start:var(--_with-leading-icon-leading-space);padding-inline-end:var(--_with-leading-icon-trailing-space)}:host([has-icon][trailing-icon]){padding-inline-start:var(--_with-trailing-icon-leading-space);padding-inline-end:var(--_with-trailing-icon-trailing-space)}::slotted([slot=icon]){display:inline-flex;position:relative;writing-mode:horizontal-tb;fill:currentColor;flex-shrink:0;color:var(--_icon-color);font-size:var(--_icon-size);inline-size:var(--_icon-size);block-size:var(--_icon-size)}:host(:hover) ::slotted([slot=icon]){color:var(--_hover-icon-color)}:host(:focus-within) ::slotted([slot=icon]){color:var(--_focus-icon-color)}:host(:active) ::slotted([slot=icon]){color:var(--_pressed-icon-color)}:host(:is([disabled],[soft-disabled])) ::slotted([slot=icon]){color:var(--_disabled-icon-color);opacity:var(--_disabled-icon-opacity)}.touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}:host([touch-target=wrapper]){margin:max(0px,(48px - var(--_container-height))/2) 0}:host([touch-target=none]) .touch{display:none}\n`;\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { ElevatedButton } from './internal/elevated-button.js';\nimport { styles as elevatedStyles } from './internal/elevated-styles.js';\nimport { styles as sharedElevationStyles } from './internal/shared-elevation-styles.js';\nimport { styles as sharedStyles } from './internal/shared-styles.js';\n/**\n * @summary Buttons help people take action, such as sending an email, sharing a\n * document, or liking a comment.\n *\n * @description\n * __Emphasis:__ Medium emphasis – For important actions that don’t distract\n * from other onscreen elements.\n *\n * __Rationale:__ Elevated buttons are essentially filled buttons with a lighter\n * background color and a shadow. To prevent shadow creep, only use them when\n * absolutely necessary, such as when the button requires visual separation from\n * a patterned background.\n *\n * __Example usages:__\n * - Reply\n * - View all\n * - Add to cart\n * - Take out of trash\n *\n * @final\n * @suppress {visibility}\n */\nexport let MdElevatedButton = class MdElevatedButton extends ElevatedButton {\n};\nMdElevatedButton.styles = [\n    sharedStyles,\n    sharedElevationStyles,\n    elevatedStyles,\n];\nMdElevatedButton = __decorate([\n    customElement('md-elevated-button')\n], MdElevatedButton);\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport '../../elevation/elevation.js';\nimport { html } from 'lit';\nimport { Button } from './button.js';\n/**\n * A filled button component.\n */\nexport class FilledButton extends Button {\n    renderElevationOrOutline() {\n        return html `<md-elevation part=\"elevation\"></md-elevation>`;\n    }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./button/internal/filled-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{--_container-color: var(--md-filled-button-container-color, var(--md-sys-color-primary, #6750a4));--_container-elevation: var(--md-filled-button-container-elevation, 0);--_container-height: var(--md-filled-button-container-height, 40px);--_container-shadow-color: var(--md-filled-button-container-shadow-color, var(--md-sys-color-shadow, #000));--_disabled-container-color: var(--md-filled-button-disabled-container-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-container-elevation: var(--md-filled-button-disabled-container-elevation, 0);--_disabled-container-opacity: var(--md-filled-button-disabled-container-opacity, 0.12);--_disabled-label-text-color: var(--md-filled-button-disabled-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-label-text-opacity: var(--md-filled-button-disabled-label-text-opacity, 0.38);--_focus-container-elevation: var(--md-filled-button-focus-container-elevation, 0);--_focus-label-text-color: var(--md-filled-button-focus-label-text-color, var(--md-sys-color-on-primary, #fff));--_hover-container-elevation: var(--md-filled-button-hover-container-elevation, 1);--_hover-label-text-color: var(--md-filled-button-hover-label-text-color, var(--md-sys-color-on-primary, #fff));--_hover-state-layer-color: var(--md-filled-button-hover-state-layer-color, var(--md-sys-color-on-primary, #fff));--_hover-state-layer-opacity: var(--md-filled-button-hover-state-layer-opacity, 0.08);--_label-text-color: var(--md-filled-button-label-text-color, var(--md-sys-color-on-primary, #fff));--_label-text-font: var(--md-filled-button-label-text-font, var(--md-sys-typescale-label-large-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-filled-button-label-text-line-height, var(--md-sys-typescale-label-large-line-height, 1.25rem));--_label-text-size: var(--md-filled-button-label-text-size, var(--md-sys-typescale-label-large-size, 0.875rem));--_label-text-weight: var(--md-filled-button-label-text-weight, var(--md-sys-typescale-label-large-weight, var(--md-ref-typeface-weight-medium, 500)));--_pressed-container-elevation: var(--md-filled-button-pressed-container-elevation, 0);--_pressed-label-text-color: var(--md-filled-button-pressed-label-text-color, var(--md-sys-color-on-primary, #fff));--_pressed-state-layer-color: var(--md-filled-button-pressed-state-layer-color, var(--md-sys-color-on-primary, #fff));--_pressed-state-layer-opacity: var(--md-filled-button-pressed-state-layer-opacity, 0.12);--_disabled-icon-color: var(--md-filled-button-disabled-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-icon-opacity: var(--md-filled-button-disabled-icon-opacity, 0.38);--_focus-icon-color: var(--md-filled-button-focus-icon-color, var(--md-sys-color-on-primary, #fff));--_hover-icon-color: var(--md-filled-button-hover-icon-color, var(--md-sys-color-on-primary, #fff));--_icon-color: var(--md-filled-button-icon-color, var(--md-sys-color-on-primary, #fff));--_icon-size: var(--md-filled-button-icon-size, 18px);--_pressed-icon-color: var(--md-filled-button-pressed-icon-color, var(--md-sys-color-on-primary, #fff));--_container-shape-start-start: var(--md-filled-button-container-shape-start-start, var(--md-filled-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-start-end: var(--md-filled-button-container-shape-start-end, var(--md-filled-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-end-end: var(--md-filled-button-container-shape-end-end, var(--md-filled-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-end-start: var(--md-filled-button-container-shape-end-start, var(--md-filled-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_leading-space: var(--md-filled-button-leading-space, 24px);--_trailing-space: var(--md-filled-button-trailing-space, 24px);--_with-leading-icon-leading-space: var(--md-filled-button-with-leading-icon-leading-space, 16px);--_with-leading-icon-trailing-space: var(--md-filled-button-with-leading-icon-trailing-space, 24px);--_with-trailing-icon-leading-space: var(--md-filled-button-with-trailing-icon-leading-space, 24px);--_with-trailing-icon-trailing-space: var(--md-filled-button-with-trailing-icon-trailing-space, 16px)}\n`;\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { FilledButton } from './internal/filled-button.js';\nimport { styles as filledStyles } from './internal/filled-styles.js';\nimport { styles as sharedElevationStyles } from './internal/shared-elevation-styles.js';\nimport { styles as sharedStyles } from './internal/shared-styles.js';\n/**\n * @summary Buttons help people take action, such as sending an email, sharing a\n * document, or liking a comment.\n *\n * @description\n * __Emphasis:__ High emphasis – For the primary, most important, or most common\n * action on a screen\n *\n * __Rationale:__ The filled button’s contrasting surface color makes it the\n * most prominent button after the FAB. It’s used for final or unblocking\n * actions in a flow.\n *\n * __Example usages:__\n * - Save\n * - Confirm\n * - Done\n *\n * @final\n * @suppress {visibility}\n */\nexport let MdFilledButton = class MdFilledButton extends FilledButton {\n};\nMdFilledButton.styles = [\n    sharedStyles,\n    sharedElevationStyles,\n    filledStyles,\n];\nMdFilledButton = __decorate([\n    customElement('md-filled-button')\n], MdFilledButton);\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport '../../elevation/elevation.js';\nimport { html } from 'lit';\nimport { Button } from './button.js';\n/**\n * A filled tonal button component.\n */\nexport class FilledTonalButton extends Button {\n    renderElevationOrOutline() {\n        return html `<md-elevation part=\"elevation\"></md-elevation>`;\n    }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./button/internal/filled-tonal-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{--_container-color: var(--md-filled-tonal-button-container-color, var(--md-sys-color-secondary-container, #e8def8));--_container-elevation: var(--md-filled-tonal-button-container-elevation, 0);--_container-height: var(--md-filled-tonal-button-container-height, 40px);--_container-shadow-color: var(--md-filled-tonal-button-container-shadow-color, var(--md-sys-color-shadow, #000));--_disabled-container-color: var(--md-filled-tonal-button-disabled-container-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-container-elevation: var(--md-filled-tonal-button-disabled-container-elevation, 0);--_disabled-container-opacity: var(--md-filled-tonal-button-disabled-container-opacity, 0.12);--_disabled-label-text-color: var(--md-filled-tonal-button-disabled-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-label-text-opacity: var(--md-filled-tonal-button-disabled-label-text-opacity, 0.38);--_focus-container-elevation: var(--md-filled-tonal-button-focus-container-elevation, 0);--_focus-label-text-color: var(--md-filled-tonal-button-focus-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b));--_hover-container-elevation: var(--md-filled-tonal-button-hover-container-elevation, 1);--_hover-label-text-color: var(--md-filled-tonal-button-hover-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b));--_hover-state-layer-color: var(--md-filled-tonal-button-hover-state-layer-color, var(--md-sys-color-on-secondary-container, #1d192b));--_hover-state-layer-opacity: var(--md-filled-tonal-button-hover-state-layer-opacity, 0.08);--_label-text-color: var(--md-filled-tonal-button-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b));--_label-text-font: var(--md-filled-tonal-button-label-text-font, var(--md-sys-typescale-label-large-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-filled-tonal-button-label-text-line-height, var(--md-sys-typescale-label-large-line-height, 1.25rem));--_label-text-size: var(--md-filled-tonal-button-label-text-size, var(--md-sys-typescale-label-large-size, 0.875rem));--_label-text-weight: var(--md-filled-tonal-button-label-text-weight, var(--md-sys-typescale-label-large-weight, var(--md-ref-typeface-weight-medium, 500)));--_pressed-container-elevation: var(--md-filled-tonal-button-pressed-container-elevation, 0);--_pressed-label-text-color: var(--md-filled-tonal-button-pressed-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b));--_pressed-state-layer-color: var(--md-filled-tonal-button-pressed-state-layer-color, var(--md-sys-color-on-secondary-container, #1d192b));--_pressed-state-layer-opacity: var(--md-filled-tonal-button-pressed-state-layer-opacity, 0.12);--_disabled-icon-color: var(--md-filled-tonal-button-disabled-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-icon-opacity: var(--md-filled-tonal-button-disabled-icon-opacity, 0.38);--_focus-icon-color: var(--md-filled-tonal-button-focus-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_hover-icon-color: var(--md-filled-tonal-button-hover-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_icon-color: var(--md-filled-tonal-button-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_icon-size: var(--md-filled-tonal-button-icon-size, 18px);--_pressed-icon-color: var(--md-filled-tonal-button-pressed-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_container-shape-start-start: var(--md-filled-tonal-button-container-shape-start-start, var(--md-filled-tonal-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-start-end: var(--md-filled-tonal-button-container-shape-start-end, var(--md-filled-tonal-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-end-end: var(--md-filled-tonal-button-container-shape-end-end, var(--md-filled-tonal-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-end-start: var(--md-filled-tonal-button-container-shape-end-start, var(--md-filled-tonal-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_leading-space: var(--md-filled-tonal-button-leading-space, 24px);--_trailing-space: var(--md-filled-tonal-button-trailing-space, 24px);--_with-leading-icon-leading-space: var(--md-filled-tonal-button-with-leading-icon-leading-space, 16px);--_with-leading-icon-trailing-space: var(--md-filled-tonal-button-with-leading-icon-trailing-space, 24px);--_with-trailing-icon-leading-space: var(--md-filled-tonal-button-with-trailing-icon-leading-space, 24px);--_with-trailing-icon-trailing-space: var(--md-filled-tonal-button-with-trailing-icon-trailing-space, 16px)}\n`;\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { FilledTonalButton } from './internal/filled-tonal-button.js';\nimport { styles as tonalStyles } from './internal/filled-tonal-styles.js';\nimport { styles as sharedElevationStyles } from './internal/shared-elevation-styles.js';\nimport { styles as sharedStyles } from './internal/shared-styles.js';\n/**\n * @summary Buttons help people take action, such as sending an email, sharing a\n * document, or liking a comment.\n *\n * @description\n * __Emphasis:__ Medium emphasis – For important actions that don’t distract\n * from other onscreen elements.\n *\n * __Rationale:__ Filled tonal buttons have a lighter background color and\n * darker label color, making them less visually prominent than a regular,\n * filled button. They’re still used for final or unblocking actions in a flow,\n * but do so with less emphasis.\n *\n * __Example usages:__\n * - Save\n * - Confirm\n * - Done\n *\n * @final\n * @suppress {visibility}\n */\nexport let MdFilledTonalButton = class MdFilledTonalButton extends FilledTonalButton {\n};\nMdFilledTonalButton.styles = [\n    sharedStyles,\n    sharedElevationStyles,\n    tonalStyles,\n];\nMdFilledTonalButton = __decorate([\n    customElement('md-filled-tonal-button')\n], MdFilledTonalButton);\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { html } from 'lit';\nimport { Button } from './button.js';\n/**\n * An outlined button component.\n */\nexport class OutlinedButton extends Button {\n    renderElevationOrOutline() {\n        return html `<div class=\"outline\"></div>`;\n    }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./button/internal/outlined-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{--_container-height: var(--md-outlined-button-container-height, 40px);--_disabled-label-text-color: var(--md-outlined-button-disabled-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-label-text-opacity: var(--md-outlined-button-disabled-label-text-opacity, 0.38);--_disabled-outline-color: var(--md-outlined-button-disabled-outline-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-outline-opacity: var(--md-outlined-button-disabled-outline-opacity, 0.12);--_focus-label-text-color: var(--md-outlined-button-focus-label-text-color, var(--md-sys-color-primary, #6750a4));--_hover-label-text-color: var(--md-outlined-button-hover-label-text-color, var(--md-sys-color-primary, #6750a4));--_hover-state-layer-color: var(--md-outlined-button-hover-state-layer-color, var(--md-sys-color-primary, #6750a4));--_hover-state-layer-opacity: var(--md-outlined-button-hover-state-layer-opacity, 0.08);--_label-text-color: var(--md-outlined-button-label-text-color, var(--md-sys-color-primary, #6750a4));--_label-text-font: var(--md-outlined-button-label-text-font, var(--md-sys-typescale-label-large-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-outlined-button-label-text-line-height, var(--md-sys-typescale-label-large-line-height, 1.25rem));--_label-text-size: var(--md-outlined-button-label-text-size, var(--md-sys-typescale-label-large-size, 0.875rem));--_label-text-weight: var(--md-outlined-button-label-text-weight, var(--md-sys-typescale-label-large-weight, var(--md-ref-typeface-weight-medium, 500)));--_outline-color: var(--md-outlined-button-outline-color, var(--md-sys-color-outline, #79747e));--_outline-width: var(--md-outlined-button-outline-width, 1px);--_pressed-label-text-color: var(--md-outlined-button-pressed-label-text-color, var(--md-sys-color-primary, #6750a4));--_pressed-outline-color: var(--md-outlined-button-pressed-outline-color, var(--md-sys-color-outline, #79747e));--_pressed-state-layer-color: var(--md-outlined-button-pressed-state-layer-color, var(--md-sys-color-primary, #6750a4));--_pressed-state-layer-opacity: var(--md-outlined-button-pressed-state-layer-opacity, 0.12);--_disabled-icon-color: var(--md-outlined-button-disabled-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-icon-opacity: var(--md-outlined-button-disabled-icon-opacity, 0.38);--_focus-icon-color: var(--md-outlined-button-focus-icon-color, var(--md-sys-color-primary, #6750a4));--_hover-icon-color: var(--md-outlined-button-hover-icon-color, var(--md-sys-color-primary, #6750a4));--_icon-color: var(--md-outlined-button-icon-color, var(--md-sys-color-primary, #6750a4));--_icon-size: var(--md-outlined-button-icon-size, 18px);--_pressed-icon-color: var(--md-outlined-button-pressed-icon-color, var(--md-sys-color-primary, #6750a4));--_container-shape-start-start: var(--md-outlined-button-container-shape-start-start, var(--md-outlined-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-start-end: var(--md-outlined-button-container-shape-start-end, var(--md-outlined-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-end-end: var(--md-outlined-button-container-shape-end-end, var(--md-outlined-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-end-start: var(--md-outlined-button-container-shape-end-start, var(--md-outlined-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_leading-space: var(--md-outlined-button-leading-space, 24px);--_trailing-space: var(--md-outlined-button-trailing-space, 24px);--_with-leading-icon-leading-space: var(--md-outlined-button-with-leading-icon-leading-space, 16px);--_with-leading-icon-trailing-space: var(--md-outlined-button-with-leading-icon-trailing-space, 24px);--_with-trailing-icon-leading-space: var(--md-outlined-button-with-trailing-icon-leading-space, 24px);--_with-trailing-icon-trailing-space: var(--md-outlined-button-with-trailing-icon-trailing-space, 16px);--_container-color: none;--_disabled-container-color: none;--_disabled-container-opacity: 0}.outline{inset:0;border-style:solid;position:absolute;box-sizing:border-box;border-color:var(--_outline-color);border-start-start-radius:var(--_container-shape-start-start);border-start-end-radius:var(--_container-shape-start-end);border-end-start-radius:var(--_container-shape-end-start);border-end-end-radius:var(--_container-shape-end-end)}:host(:active) .outline{border-color:var(--_pressed-outline-color)}:host(:is([disabled],[soft-disabled])) .outline{border-color:var(--_disabled-outline-color);opacity:var(--_disabled-outline-opacity)}@media(forced-colors: active){:host(:is([disabled],[soft-disabled])) .background{border-color:GrayText}:host(:is([disabled],[soft-disabled])) .outline{opacity:1}}.outline,md-ripple{border-width:var(--_outline-width)}md-ripple{inline-size:calc(100% - 2*var(--_outline-width));block-size:calc(100% - 2*var(--_outline-width));border-style:solid;border-color:rgba(0,0,0,0)}\n`;\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { OutlinedButton } from './internal/outlined-button.js';\nimport { styles as outlinedStyles } from './internal/outlined-styles.js';\nimport { styles as sharedStyles } from './internal/shared-styles.js';\n/**\n * @summary Buttons help people take action, such as sending an email, sharing a\n * document, or liking a comment.\n *\n * @description\n * __Emphasis:__ Medium emphasis – For important actions that don’t distract\n * from other onscreen elements.\n *\n * __Rationale:__ Use an outlined button for actions that need attention but\n * aren’t the primary action, such as “See all” or “Add to cart.” This is also\n * the button to use for giving someone the opportunity to change their mind or\n * escape a flow.\n *\n * __Example usages:__\n * - Reply\n * - View all\n * - Add to cart\n * - Take out of trash\n *\n * @final\n * @suppress {visibility}\n */\nexport let MdOutlinedButton = class MdOutlinedButton extends OutlinedButton {\n};\nMdOutlinedButton.styles = [sharedStyles, outlinedStyles];\nMdOutlinedButton = __decorate([\n    customElement('md-outlined-button')\n], MdOutlinedButton);\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { Button } from './button.js';\n/**\n * A text button component.\n */\nexport class TextButton extends Button {\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./button/internal/text-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{--_container-height: var(--md-text-button-container-height, 40px);--_disabled-label-text-color: var(--md-text-button-disabled-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-label-text-opacity: var(--md-text-button-disabled-label-text-opacity, 0.38);--_focus-label-text-color: var(--md-text-button-focus-label-text-color, var(--md-sys-color-primary, #6750a4));--_hover-label-text-color: var(--md-text-button-hover-label-text-color, var(--md-sys-color-primary, #6750a4));--_hover-state-layer-color: var(--md-text-button-hover-state-layer-color, var(--md-sys-color-primary, #6750a4));--_hover-state-layer-opacity: var(--md-text-button-hover-state-layer-opacity, 0.08);--_label-text-color: var(--md-text-button-label-text-color, var(--md-sys-color-primary, #6750a4));--_label-text-font: var(--md-text-button-label-text-font, var(--md-sys-typescale-label-large-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-text-button-label-text-line-height, var(--md-sys-typescale-label-large-line-height, 1.25rem));--_label-text-size: var(--md-text-button-label-text-size, var(--md-sys-typescale-label-large-size, 0.875rem));--_label-text-weight: var(--md-text-button-label-text-weight, var(--md-sys-typescale-label-large-weight, var(--md-ref-typeface-weight-medium, 500)));--_pressed-label-text-color: var(--md-text-button-pressed-label-text-color, var(--md-sys-color-primary, #6750a4));--_pressed-state-layer-color: var(--md-text-button-pressed-state-layer-color, var(--md-sys-color-primary, #6750a4));--_pressed-state-layer-opacity: var(--md-text-button-pressed-state-layer-opacity, 0.12);--_disabled-icon-color: var(--md-text-button-disabled-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-icon-opacity: var(--md-text-button-disabled-icon-opacity, 0.38);--_focus-icon-color: var(--md-text-button-focus-icon-color, var(--md-sys-color-primary, #6750a4));--_hover-icon-color: var(--md-text-button-hover-icon-color, var(--md-sys-color-primary, #6750a4));--_icon-color: var(--md-text-button-icon-color, var(--md-sys-color-primary, #6750a4));--_icon-size: var(--md-text-button-icon-size, 18px);--_pressed-icon-color: var(--md-text-button-pressed-icon-color, var(--md-sys-color-primary, #6750a4));--_container-shape-start-start: var(--md-text-button-container-shape-start-start, var(--md-text-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-start-end: var(--md-text-button-container-shape-start-end, var(--md-text-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-end-end: var(--md-text-button-container-shape-end-end, var(--md-text-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-end-start: var(--md-text-button-container-shape-end-start, var(--md-text-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_leading-space: var(--md-text-button-leading-space, 12px);--_trailing-space: var(--md-text-button-trailing-space, 12px);--_with-leading-icon-leading-space: var(--md-text-button-with-leading-icon-leading-space, 12px);--_with-leading-icon-trailing-space: var(--md-text-button-with-leading-icon-trailing-space, 16px);--_with-trailing-icon-leading-space: var(--md-text-button-with-trailing-icon-leading-space, 16px);--_with-trailing-icon-trailing-space: var(--md-text-button-with-trailing-icon-trailing-space, 12px);--_container-color: none;--_disabled-container-color: none;--_disabled-container-opacity: 0}\n`;\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { styles as sharedStyles } from './internal/shared-styles.js';\nimport { TextButton } from './internal/text-button.js';\nimport { styles as textStyles } from './internal/text-styles.js';\n/**\n * @summary Buttons help people take action, such as sending an email, sharing a\n * document, or liking a comment.\n *\n * @description\n * __Emphasis:__ Low emphasis – For optional or supplementary actions with the\n * least amount of prominence\n *\n * __Rationale:__ Text buttons have less visual prominence, so should be used\n * for low emphasis actions, such as an alternative option.\n *\n * __Example usages:__\n * - Learn more\n * - View all\n * - Change account\n * - Turn on\n *\n * @final\n * @suppress {visibility}\n */\nexport let MdTextButton = class MdTextButton extends TextButton {\n};\nMdTextButton.styles = [sharedStyles, textStyles];\nMdTextButton = __decorate([\n    customElement('md-text-button')\n], MdTextButton);\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * Re-dispatches an event from the provided element.\n *\n * This function is useful for forwarding non-composed events, such as `change`\n * events.\n *\n * @example\n * class MyInput extends LitElement {\n *   render() {\n *     return html`<input @change=${this.redispatchEvent}>`;\n *   }\n *\n *   protected redispatchEvent(event: Event) {\n *     redispatchEvent(this, event);\n *   }\n * }\n *\n * @param element The element to dispatch the event from.\n * @param event The event to re-dispatch.\n * @return Whether or not the event was dispatched (if cancelable).\n */\nexport function redispatchEvent(element, event) {\n    // For bubbling events in SSR light DOM (or composed), stop their propagation\n    // and dispatch the copy.\n    if (event.bubbles && (!element.shadowRoot || event.composed)) {\n        event.stopPropagation();\n    }\n    const copy = Reflect.construct(event.constructor, [event.type, event]);\n    const dispatched = element.dispatchEvent(copy);\n    if (!dispatched) {\n        event.preventDefault();\n    }\n    return dispatched;\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { isServer } from 'lit';\nimport { internals } from './element-internals.js';\n/**\n * A symbol property used to create a constraint validation `Validator`.\n * Required for all `mixinConstraintValidation()` elements.\n */\nexport const createValidator = Symbol('createValidator');\n/**\n * A symbol property used to return an anchor for constraint validation popups.\n * Required for all `mixinConstraintValidation()` elements.\n */\nexport const getValidityAnchor = Symbol('getValidityAnchor');\n// Private symbol members, used to avoid name clashing.\nconst privateValidator = Symbol('privateValidator');\nconst privateSyncValidity = Symbol('privateSyncValidity');\nconst privateCustomValidationMessage = Symbol('privateCustomValidationMessage');\n/**\n * Mixes in constraint validation APIs for an element.\n *\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/Constraint_validation\n * for more details.\n *\n * Implementations must provide a validator to cache and compute its validity,\n * along with a shadow root element to anchor validation popups to.\n *\n * @example\n * ```ts\n * const baseClass = mixinConstraintValidation(\n *   mixinFormAssociated(mixinElementInternals(LitElement))\n * );\n *\n * class MyCheckbox extends baseClass {\n *   \\@property({type: Boolean}) checked = false;\n *   \\@property({type: Boolean}) required = false;\n *\n *   [createValidator]() {\n *     return new CheckboxValidator(() => this);\n *   }\n *\n *   [getValidityAnchor]() {\n *     return this.renderRoot.querySelector('.root');\n *   }\n * }\n * ```\n *\n * @param base The class to mix functionality into.\n * @return The provided class with `ConstraintValidation` mixed in.\n */\nexport function mixinConstraintValidation(base) {\n    var _a;\n    class ConstraintValidationElement extends base {\n        constructor() {\n            super(...arguments);\n            /**\n             * Needed for Safari, see https://bugs.webkit.org/show_bug.cgi?id=261432\n             * Replace with this[internals].validity.customError when resolved.\n             */\n            this[_a] = '';\n        }\n        get validity() {\n            this[privateSyncValidity]();\n            return this[internals].validity;\n        }\n        get validationMessage() {\n            this[privateSyncValidity]();\n            return this[internals].validationMessage;\n        }\n        get willValidate() {\n            this[privateSyncValidity]();\n            return this[internals].willValidate;\n        }\n        checkValidity() {\n            this[privateSyncValidity]();\n            return this[internals].checkValidity();\n        }\n        reportValidity() {\n            this[privateSyncValidity]();\n            return this[internals].reportValidity();\n        }\n        setCustomValidity(error) {\n            this[privateCustomValidationMessage] = error;\n            this[privateSyncValidity]();\n        }\n        requestUpdate(name, oldValue, options) {\n            super.requestUpdate(name, oldValue, options);\n            this[privateSyncValidity]();\n        }\n        firstUpdated(changed) {\n            super.firstUpdated(changed);\n            // Sync the validity again when the element first renders, since the\n            // validity anchor is now available.\n            //\n            // Elements that `delegatesFocus: true` to an `<input>` will throw an\n            // error in Chrome and Safari when a form tries to submit or call\n            // `form.reportValidity()`:\n            // \"An invalid form control with name='' is not focusable\"\n            //\n            // The validity anchor MUST be provided in `internals.setValidity()` and\n            // MUST be the `<input>` element rendered.\n            //\n            // See https://lit.dev/playground/#gist=6c26e418e0010f7a5aac15005cde8bde\n            // for a reproduction.\n            this[privateSyncValidity]();\n        }\n        [(_a = privateCustomValidationMessage, privateSyncValidity)]() {\n            if (isServer) {\n                return;\n            }\n            if (!this[privateValidator]) {\n                this[privateValidator] = this[createValidator]();\n            }\n            const { validity, validationMessage: nonCustomValidationMessage } = this[privateValidator].getValidity();\n            const customError = !!this[privateCustomValidationMessage];\n            const validationMessage = this[privateCustomValidationMessage] || nonCustomValidationMessage;\n            this[internals].setValidity({ ...validity, customError }, validationMessage, this[getValidityAnchor]() ?? undefined);\n        }\n        [createValidator]() {\n            throw new Error('Implement [createValidator]');\n        }\n        [getValidityAnchor]() {\n            throw new Error('Implement [getValidityAnchor]');\n        }\n    }\n    return ConstraintValidationElement;\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { property } from 'lit/decorators.js';\nimport { internals } from './element-internals.js';\n/**\n * A symbol property to retrieve the form value for an element.\n */\nexport const getFormValue = Symbol('getFormValue');\n/**\n * A symbol property to retrieve the form state for an element.\n */\nexport const getFormState = Symbol('getFormState');\n/**\n * Mixes in form-associated behavior for a class. This allows an element to add\n * values to `<form>` elements.\n *\n * Implementing classes should provide a `[formValue]` to return the current\n * value of the element, as well as reset and restore callbacks.\n *\n * @example\n * ```ts\n * const base = mixinFormAssociated(mixinElementInternals(LitElement));\n *\n * class MyControl extends base {\n *   \\@property()\n *   value = '';\n *\n *   override [getFormValue]() {\n *     return this.value;\n *   }\n *\n *   override formResetCallback() {\n *     const defaultValue = this.getAttribute('value');\n *     this.value = defaultValue;\n *   }\n *\n *   override formStateRestoreCallback(state: string) {\n *     this.value = state;\n *   }\n * }\n * ```\n *\n * Elements may optionally provide a `[formState]` if their values do not\n * represent the state of the component.\n *\n * @example\n * ```ts\n * const base = mixinFormAssociated(mixinElementInternals(LitElement));\n *\n * class MyCheckbox extends base {\n *   \\@property()\n *   value = 'on';\n *\n *   \\@property({type: Boolean})\n *   checked = false;\n *\n *   override [getFormValue]() {\n *     return this.checked ? this.value : null;\n *   }\n *\n *   override [getFormState]() {\n *     return String(this.checked);\n *   }\n *\n *   override formResetCallback() {\n *     const defaultValue = this.hasAttribute('checked');\n *     this.checked = defaultValue;\n *   }\n *\n *   override formStateRestoreCallback(state: string) {\n *     this.checked = Boolean(state);\n *   }\n * }\n * ```\n *\n * IMPORTANT: Requires declares for lit-analyzer\n * @example\n * ```ts\n * const base = mixinFormAssociated(mixinElementInternals(LitElement));\n * class MyControl extends base {\n *   // Writable mixin properties for lit-html binding, needed for lit-analyzer\n *   declare disabled: boolean;\n *   declare name: string;\n * }\n * ```\n *\n * @param base The class to mix functionality into. The base class must use\n *     `mixinElementInternals()`.\n * @return The provided class with `FormAssociated` mixed in.\n */\nexport function mixinFormAssociated(base) {\n    class FormAssociatedElement extends base {\n        get form() {\n            return this[internals].form;\n        }\n        get labels() {\n            return this[internals].labels;\n        }\n        // Use @property for the `name` and `disabled` properties to add them to the\n        // `observedAttributes` array and trigger `attributeChangedCallback()`.\n        //\n        // We don't use Lit's default getter/setter (`noAccessor: true`) because\n        // the attributes need to be updated synchronously to work with synchronous\n        // form APIs, and Lit updates attributes async by default.\n        get name() {\n            return this.getAttribute('name') ?? '';\n        }\n        set name(name) {\n            // Note: setting name to null or empty does not remove the attribute.\n            this.setAttribute('name', name);\n            // We don't need to call `requestUpdate()` since it's called synchronously\n            // in `attributeChangedCallback()`.\n        }\n        get disabled() {\n            return this.hasAttribute('disabled');\n        }\n        set disabled(disabled) {\n            this.toggleAttribute('disabled', disabled);\n            // We don't need to call `requestUpdate()` since it's called synchronously\n            // in `attributeChangedCallback()`.\n        }\n        attributeChangedCallback(name, old, value) {\n            // Manually `requestUpdate()` for `name` and `disabled` when their\n            // attribute or property changes.\n            // The properties update their attributes, so this callback is invoked\n            // immediately when the properties are set. We call `requestUpdate()` here\n            // instead of letting Lit set the properties from the attribute change.\n            // That would cause the properties to re-set the attribute and invoke this\n            // callback again in a loop. This leads to stale state when Lit tries to\n            // determine if a property changed or not.\n            if (name === 'name' || name === 'disabled') {\n                // Disabled's value is only false if the attribute is missing and null.\n                const oldValue = name === 'disabled' ? old !== null : old;\n                // Trigger a lit update when the attribute changes.\n                this.requestUpdate(name, oldValue);\n                return;\n            }\n            super.attributeChangedCallback(name, old, value);\n        }\n        requestUpdate(name, oldValue, options) {\n            super.requestUpdate(name, oldValue, options);\n            // If any properties change, update the form value, which may have changed\n            // as well.\n            // Update the form value synchronously in `requestUpdate()` rather than\n            // `update()` or `updated()`, which are async. This is necessary to ensure\n            // that form data is updated in time for synchronous event listeners.\n            this[internals].setFormValue(this[getFormValue](), this[getFormState]());\n        }\n        [getFormValue]() {\n            // Closure does not allow abstract symbol members, so a default\n            // implementation is needed.\n            throw new Error('Implement [getFormValue]');\n        }\n        [getFormState]() {\n            return this[getFormValue]();\n        }\n        formDisabledCallback(disabled) {\n            this.disabled = disabled;\n        }\n    }\n    /** @nocollapse */\n    FormAssociatedElement.formAssociated = true;\n    __decorate([\n        property({ noAccessor: true })\n    ], FormAssociatedElement.prototype, \"name\", null);\n    __decorate([\n        property({ type: Boolean, noAccessor: true })\n    ], FormAssociatedElement.prototype, \"disabled\", null);\n    return FormAssociatedElement;\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * A class that computes and caches `ValidityStateFlags` for a component with\n * a given `State` interface.\n *\n * Cached performance before computing validity is important since constraint\n * validation must be checked frequently and synchronously when properties\n * change.\n *\n * @template State The expected interface of properties relevant to constraint\n *     validation.\n */\nexport class Validator {\n    /**\n     * Creates a new validator.\n     *\n     * @param getCurrentState A callback that returns the current state of\n     *     constraint validation-related properties.\n     */\n    constructor(getCurrentState) {\n        this.getCurrentState = getCurrentState;\n        /**\n         * The current validity state and message. This is cached and returns if\n         * constraint validation state does not change.\n         */\n        this.currentValidity = {\n            validity: {},\n            validationMessage: '',\n        };\n    }\n    /**\n     * Returns the current `ValidityStateFlags` and validation message for the\n     * validator.\n     *\n     * If the constraint validation state has not changed, this will return a\n     * cached result. This is important since `getValidity()` can be called\n     * frequently in response to synchronous property changes.\n     *\n     * @return The current validity and validation message.\n     */\n    getValidity() {\n        const state = this.getCurrentState();\n        const hasStateChanged = !this.prevState || !this.equals(this.prevState, state);\n        if (!hasStateChanged) {\n            return this.currentValidity;\n        }\n        const { validity, validationMessage } = this.computeValidity(state);\n        this.prevState = this.copy(state);\n        this.currentValidity = {\n            validationMessage,\n            validity: {\n                // Change any `ValidityState` instances into `ValidityStateFlags` since\n                // `ValidityState` cannot be easily `{...spread}`.\n                badInput: validity.badInput,\n                customError: validity.customError,\n                patternMismatch: validity.patternMismatch,\n                rangeOverflow: validity.rangeOverflow,\n                rangeUnderflow: validity.rangeUnderflow,\n                stepMismatch: validity.stepMismatch,\n                tooLong: validity.tooLong,\n                tooShort: validity.tooShort,\n                typeMismatch: validity.typeMismatch,\n                valueMissing: validity.valueMissing,\n            },\n        };\n        return this.currentValidity;\n    }\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { Validator } from './validator.js';\n/**\n * A validator that provides constraint validation that emulates\n * `<input type=\"checkbox\">` validation.\n */\nexport class CheckboxValidator extends Validator {\n    computeValidity(state) {\n        if (!this.checkboxControl) {\n            // Lazily create the platform input\n            this.checkboxControl = document.createElement('input');\n            this.checkboxControl.type = 'checkbox';\n        }\n        this.checkboxControl.checked = state.checked;\n        this.checkboxControl.required = state.required;\n        return {\n            validity: this.checkboxControl.validity,\n            validationMessage: this.checkboxControl.validationMessage,\n        };\n    }\n    equals(prev, next) {\n        return prev.checked === next.checked && prev.required === next.required;\n    }\n    copy({ checked, required }) {\n        return { checked, required };\n    }\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport '../../focus/md-focus-ring.js';\nimport '../../ripple/ripple.js';\nimport { html, isServer, LitElement, nothing } from 'lit';\nimport { property, query, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { mixinDelegatesAria } from '../../internal/aria/delegate.js';\nimport { dispatchActivationClick, isActivationClick, } from '../../internal/events/form-label-activation.js';\nimport { redispatchEvent } from '../../internal/events/redispatch-event.js';\nimport { createValidator, getValidityAnchor, mixinConstraintValidation, } from '../../labs/behaviors/constraint-validation.js';\nimport { mixinElementInternals } from '../../labs/behaviors/element-internals.js';\nimport { getFormState, getFormValue, mixinFormAssociated, } from '../../labs/behaviors/form-associated.js';\nimport { CheckboxValidator } from '../../labs/behaviors/validators/checkbox-validator.js';\n// Separate variable needed for closure.\nconst checkboxBaseClass = mixinDelegatesAria(mixinConstraintValidation(mixinFormAssociated(mixinElementInternals(LitElement))));\n/**\n * A checkbox component.\n *\n *\n * @fires change {Event} The native `change` event on\n * [`<input>`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event)\n * --bubbles\n * @fires input {InputEvent} The native `input` event on\n * [`<input>`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event)\n * --bubbles --composed\n */\nexport class Checkbox extends checkboxBaseClass {\n    constructor() {\n        super();\n        /**\n         * Whether or not the checkbox is selected.\n         */\n        this.checked = false;\n        /**\n         * Whether or not the checkbox is indeterminate.\n         *\n         * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#indeterminate_state_checkboxes\n         */\n        this.indeterminate = false;\n        /**\n         * When true, require the checkbox to be selected when participating in\n         * form submission.\n         *\n         * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#validation\n         */\n        this.required = false;\n        /**\n         * The value of the checkbox that is submitted with a form when selected.\n         *\n         * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#value\n         */\n        this.value = 'on';\n        this.prevChecked = false;\n        this.prevDisabled = false;\n        this.prevIndeterminate = false;\n        if (!isServer) {\n            this.addEventListener('click', (event) => {\n                if (!isActivationClick(event) || !this.input) {\n                    return;\n                }\n                this.focus();\n                dispatchActivationClick(this.input);\n            });\n        }\n    }\n    update(changed) {\n        if (changed.has('checked') ||\n            changed.has('disabled') ||\n            changed.has('indeterminate')) {\n            this.prevChecked = changed.get('checked') ?? this.checked;\n            this.prevDisabled = changed.get('disabled') ?? this.disabled;\n            this.prevIndeterminate =\n                changed.get('indeterminate') ?? this.indeterminate;\n        }\n        super.update(changed);\n    }\n    render() {\n        const prevNone = !this.prevChecked && !this.prevIndeterminate;\n        const prevChecked = this.prevChecked && !this.prevIndeterminate;\n        const prevIndeterminate = this.prevIndeterminate;\n        const isChecked = this.checked && !this.indeterminate;\n        const isIndeterminate = this.indeterminate;\n        const containerClasses = classMap({\n            'disabled': this.disabled,\n            'selected': isChecked || isIndeterminate,\n            'unselected': !isChecked && !isIndeterminate,\n            'checked': isChecked,\n            'indeterminate': isIndeterminate,\n            'prev-unselected': prevNone,\n            'prev-checked': prevChecked,\n            'prev-indeterminate': prevIndeterminate,\n            'prev-disabled': this.prevDisabled,\n        });\n        // Needed for closure conformance\n        const { ariaLabel, ariaInvalid } = this;\n        // Note: <input> needs to be rendered before the <svg> for\n        // form.reportValidity() to work in Chrome.\n        return html `\n      <div class=\"container ${containerClasses}\">\n        <input\n          type=\"checkbox\"\n          id=\"input\"\n          aria-checked=${isIndeterminate ? 'mixed' : nothing}\n          aria-label=${ariaLabel || nothing}\n          aria-invalid=${ariaInvalid || nothing}\n          ?disabled=${this.disabled}\n          ?required=${this.required}\n          .indeterminate=${this.indeterminate}\n          .checked=${this.checked}\n          @input=${this.handleInput}\n          @change=${this.handleChange} />\n\n        <div class=\"outline\"></div>\n        <div class=\"background\"></div>\n        <md-focus-ring part=\"focus-ring\" for=\"input\"></md-focus-ring>\n        <md-ripple for=\"input\" ?disabled=${this.disabled}></md-ripple>\n        <svg class=\"icon\" viewBox=\"0 0 18 18\" aria-hidden=\"true\">\n          <rect class=\"mark short\" />\n          <rect class=\"mark long\" />\n        </svg>\n      </div>\n    `;\n    }\n    handleInput(event) {\n        const target = event.target;\n        this.checked = target.checked;\n        this.indeterminate = target.indeterminate;\n        // <input> 'input' event bubbles and is composed, don't re-dispatch it.\n    }\n    handleChange(event) {\n        // <input> 'change' event is not composed, re-dispatch it.\n        redispatchEvent(this, event);\n    }\n    [getFormValue]() {\n        if (!this.checked || this.indeterminate) {\n            return null;\n        }\n        return this.value;\n    }\n    [getFormState]() {\n        return String(this.checked);\n    }\n    formResetCallback() {\n        // The checked property does not reflect, so the original attribute set by\n        // the user is used to determine the default value.\n        this.checked = this.hasAttribute('checked');\n    }\n    formStateRestoreCallback(state) {\n        this.checked = state === 'true';\n    }\n    [createValidator]() {\n        return new CheckboxValidator(() => this);\n    }\n    [getValidityAnchor]() {\n        return this.input;\n    }\n}\n/** @nocollapse */\nCheckbox.shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n};\n__decorate([\n    property({ type: Boolean })\n], Checkbox.prototype, \"checked\", void 0);\n__decorate([\n    property({ type: Boolean })\n], Checkbox.prototype, \"indeterminate\", void 0);\n__decorate([\n    property({ type: Boolean })\n], Checkbox.prototype, \"required\", void 0);\n__decorate([\n    property()\n], Checkbox.prototype, \"value\", void 0);\n__decorate([\n    state()\n], Checkbox.prototype, \"prevChecked\", void 0);\n__decorate([\n    state()\n], Checkbox.prototype, \"prevDisabled\", void 0);\n__decorate([\n    state()\n], Checkbox.prototype, \"prevIndeterminate\", void 0);\n__decorate([\n    query('input')\n], Checkbox.prototype, \"input\", void 0);\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./checkbox/internal/checkbox-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{border-start-start-radius:var(--md-checkbox-container-shape-start-start, var(--md-checkbox-container-shape, 2px));border-start-end-radius:var(--md-checkbox-container-shape-start-end, var(--md-checkbox-container-shape, 2px));border-end-end-radius:var(--md-checkbox-container-shape-end-end, var(--md-checkbox-container-shape, 2px));border-end-start-radius:var(--md-checkbox-container-shape-end-start, var(--md-checkbox-container-shape, 2px));display:inline-flex;height:var(--md-checkbox-container-size, 18px);position:relative;vertical-align:top;width:var(--md-checkbox-container-size, 18px);-webkit-tap-highlight-color:rgba(0,0,0,0);cursor:pointer}:host([disabled]){cursor:default}:host([touch-target=wrapper]){margin:max(0px,(48px - var(--md-checkbox-container-size, 18px))/2)}md-focus-ring{height:44px;inset:unset;width:44px}input{appearance:none;height:48px;margin:0;opacity:0;outline:none;position:absolute;width:48px;z-index:1;cursor:inherit}:host([touch-target=none]) input{height:100%;width:100%}.container{border-radius:inherit;display:flex;height:100%;place-content:center;place-items:center;position:relative;width:100%}.outline,.background,.icon{inset:0;position:absolute}.outline,.background{border-radius:inherit}.outline{border-color:var(--md-checkbox-outline-color, var(--md-sys-color-on-surface-variant, #49454f));border-style:solid;border-width:var(--md-checkbox-outline-width, 2px);box-sizing:border-box}.background{background-color:var(--md-checkbox-selected-container-color, var(--md-sys-color-primary, #6750a4))}.background,.icon{opacity:0;transition-duration:150ms,50ms;transition-property:transform,opacity;transition-timing-function:cubic-bezier(0.3, 0, 0.8, 0.15),linear;transform:scale(0.6)}:where(.selected) :is(.background,.icon){opacity:1;transition-duration:350ms,50ms;transition-timing-function:cubic-bezier(0.05, 0.7, 0.1, 1),linear;transform:scale(1)}md-ripple{border-radius:var(--md-checkbox-state-layer-shape, var(--md-sys-shape-corner-full, 9999px));height:var(--md-checkbox-state-layer-size, 40px);inset:unset;width:var(--md-checkbox-state-layer-size, 40px);--md-ripple-hover-color: var(--md-checkbox-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--md-ripple-hover-opacity: var(--md-checkbox-hover-state-layer-opacity, 0.08);--md-ripple-pressed-color: var(--md-checkbox-pressed-state-layer-color, var(--md-sys-color-primary, #6750a4));--md-ripple-pressed-opacity: var(--md-checkbox-pressed-state-layer-opacity, 0.12)}.selected md-ripple{--md-ripple-hover-color: var(--md-checkbox-selected-hover-state-layer-color, var(--md-sys-color-primary, #6750a4));--md-ripple-hover-opacity: var(--md-checkbox-selected-hover-state-layer-opacity, 0.08);--md-ripple-pressed-color: var(--md-checkbox-selected-pressed-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--md-ripple-pressed-opacity: var(--md-checkbox-selected-pressed-state-layer-opacity, 0.12)}.icon{fill:var(--md-checkbox-selected-icon-color, var(--md-sys-color-on-primary, #fff));height:var(--md-checkbox-icon-size, 18px);width:var(--md-checkbox-icon-size, 18px)}.mark.short{height:2px;transition-property:transform,height;width:2px}.mark.long{height:2px;transition-property:transform,width;width:10px}.mark{animation-duration:150ms;animation-timing-function:cubic-bezier(0.3, 0, 0.8, 0.15);transition-duration:150ms;transition-timing-function:cubic-bezier(0.3, 0, 0.8, 0.15)}.selected .mark{animation-duration:350ms;animation-timing-function:cubic-bezier(0.05, 0.7, 0.1, 1);transition-duration:350ms;transition-timing-function:cubic-bezier(0.05, 0.7, 0.1, 1)}.checked .mark,.prev-checked.unselected .mark{transform:scaleY(-1) translate(7px, -14px) rotate(45deg)}.checked .mark.short,.prev-checked.unselected .mark.short{height:5.6568542495px}.checked .mark.long,.prev-checked.unselected .mark.long{width:11.313708499px}.indeterminate .mark,.prev-indeterminate.unselected .mark{transform:scaleY(-1) translate(4px, -10px) rotate(0deg)}.prev-unselected .mark{transition-property:none}.prev-unselected.checked .mark.long{animation-name:prev-unselected-to-checked}@keyframes prev-unselected-to-checked{from{width:0}}:where(:hover) .outline{border-color:var(--md-checkbox-hover-outline-color, var(--md-sys-color-on-surface, #1d1b20));border-width:var(--md-checkbox-hover-outline-width, 2px)}:where(:hover) .background{background:var(--md-checkbox-selected-hover-container-color, var(--md-sys-color-primary, #6750a4))}:where(:hover) .icon{fill:var(--md-checkbox-selected-hover-icon-color, var(--md-sys-color-on-primary, #fff))}:where(:focus-within) .outline{border-color:var(--md-checkbox-focus-outline-color, var(--md-sys-color-on-surface, #1d1b20));border-width:var(--md-checkbox-focus-outline-width, 2px)}:where(:focus-within) .background{background:var(--md-checkbox-selected-focus-container-color, var(--md-sys-color-primary, #6750a4))}:where(:focus-within) .icon{fill:var(--md-checkbox-selected-focus-icon-color, var(--md-sys-color-on-primary, #fff))}:where(:active) .outline{border-color:var(--md-checkbox-pressed-outline-color, var(--md-sys-color-on-surface, #1d1b20));border-width:var(--md-checkbox-pressed-outline-width, 2px)}:where(:active) .background{background:var(--md-checkbox-selected-pressed-container-color, var(--md-sys-color-primary, #6750a4))}:where(:active) .icon{fill:var(--md-checkbox-selected-pressed-icon-color, var(--md-sys-color-on-primary, #fff))}:where(.disabled,.prev-disabled) :is(.background,.icon,.mark){animation-duration:0s;transition-duration:0s}:where(.disabled) .outline{border-color:var(--md-checkbox-disabled-outline-color, var(--md-sys-color-on-surface, #1d1b20));border-width:var(--md-checkbox-disabled-outline-width, 2px);opacity:var(--md-checkbox-disabled-container-opacity, 0.38)}:where(.selected.disabled) .outline{visibility:hidden}:where(.selected.disabled) .background{background:var(--md-checkbox-selected-disabled-container-color, var(--md-sys-color-on-surface, #1d1b20));opacity:var(--md-checkbox-selected-disabled-container-opacity, 0.38)}:where(.disabled) .icon{fill:var(--md-checkbox-selected-disabled-icon-color, var(--md-sys-color-surface, #fef7ff))}@media(forced-colors: active){.background{background-color:CanvasText}.selected.disabled .background{background-color:GrayText;opacity:1}.outline{border-color:CanvasText}.disabled .outline{border-color:GrayText;opacity:1}.icon{fill:Canvas}}\n`;\n", "/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { Checkbox } from './internal/checkbox.js';\nimport { styles } from './internal/checkbox-styles.js';\n/**\n * @summary Checkboxes allow users to select one or more items from a set.\n * Checkboxes can turn an option on or off.\n *\n * @description\n * Use checkboxes to:\n * - Select one or more options from a list\n * - Present a list containing sub-selections\n * - Turn an item on or off in a desktop environment\n *\n * @final\n * @suppress {visibility}\n */\nexport let MdCheckbox = class MdCheckbox extends Checkbox {\n};\nMdCheckbox.styles = [styles];\nMdCheckbox = __decorate([\n    customElement('md-checkbox')\n], MdCheckbox);\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport '../../focus/md-focus-ring.js';\nimport '../../ripple/ripple.js';\nimport { html, isServer, LitElement } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { mixinDelegatesAria } from '../../internal/aria/delegate.js';\n// Separate variable needed for closure.\nconst chipBaseClass = mixinDelegatesAria(LitElement);\n/**\n * A chip component.\n *\n * @fires update-focus {Event} Dispatched when `disabled` is toggled. --bubbles\n */\nexport class Chip extends chipBaseClass {\n    /**\n     * Whether or not the primary ripple is disabled (defaults to `disabled`).\n     * Some chip actions such as links cannot be disabled.\n     */\n    get rippleDisabled() {\n        return this.disabled || this.softDisabled;\n    }\n    constructor() {\n        super();\n        /**\n         * Whether or not the chip is disabled.\n         *\n         * Disabled chips are not focusable, unless `always-focusable` is set.\n         */\n        this.disabled = false;\n        /**\n         * Whether or not the chip is \"soft-disabled\" (disabled but still\n         * focusable).\n         *\n         * Use this when a chip needs increased visibility when disabled. See\n         * https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/#kbd_disabled_controls\n         * for more guidance on when this is needed.\n         */\n        this.softDisabled = false;\n        /**\n         * When true, allow disabled chips to be focused with arrow keys.\n         *\n         * Add this when a chip needs increased visibility when disabled. See\n         * https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/#kbd_disabled_controls\n         * for more guidance on when this is needed.\n         *\n         * @deprecated Use `softDisabled` instead of `alwaysFocusable` + `disabled`.\n         */\n        this.alwaysFocusable = false;\n        // TODO(b/350810013): remove the label property.\n        /**\n         * The label of the chip.\n         *\n         * @deprecated Set text as content of the chip instead.\n         */\n        this.label = '';\n        /**\n         * Only needed for SSR.\n         *\n         * Add this attribute when a chip has a `slot=\"icon\"` to avoid a Flash Of\n         * Unstyled Content.\n         */\n        this.hasIcon = false;\n        if (!isServer) {\n            this.addEventListener('click', this.handleClick.bind(this));\n        }\n    }\n    focus(options) {\n        if (this.disabled && !this.alwaysFocusable) {\n            return;\n        }\n        super.focus(options);\n    }\n    render() {\n        return html `\n      <div class=\"container ${classMap(this.getContainerClasses())}\">\n        ${this.renderContainerContent()}\n      </div>\n    `;\n    }\n    updated(changed) {\n        if (changed.has('disabled') && changed.get('disabled') !== undefined) {\n            this.dispatchEvent(new Event('update-focus', { bubbles: true }));\n        }\n    }\n    getContainerClasses() {\n        return {\n            'disabled': this.disabled || this.softDisabled,\n            'has-icon': this.hasIcon,\n        };\n    }\n    renderContainerContent() {\n        return html `\n      ${this.renderOutline()}\n      <md-focus-ring part=\"focus-ring\" for=${this.primaryId}></md-focus-ring>\n      <md-ripple\n        for=${this.primaryId}\n        ?disabled=${this.rippleDisabled}></md-ripple>\n      ${this.renderPrimaryAction(this.renderPrimaryContent())}\n    `;\n    }\n    renderOutline() {\n        return html `<span class=\"outline\"></span>`;\n    }\n    renderLeadingIcon() {\n        return html `<slot name=\"icon\" @slotchange=${this.handleIconChange}></slot>`;\n    }\n    renderPrimaryContent() {\n        return html `\n      <span class=\"leading icon\" aria-hidden=\"true\">\n        ${this.renderLeadingIcon()}\n      </span>\n      <span class=\"label\">\n        <span class=\"label-text\" id=\"label\">\n          ${this.label ? this.label : html `<slot></slot>`}\n        </span>\n      </span>\n      <span class=\"touch\"></span>\n    `;\n    }\n    handleIconChange(event) {\n        const slot = event.target;\n        this.hasIcon = slot.assignedElements({ flatten: true }).length > 0;\n    }\n    handleClick(event) {\n        // If the chip is soft-disabled or disabled + always-focusable, we need to\n        // explicitly prevent the click from propagating to other event listeners\n        // as well as prevent the default action.\n        if (this.softDisabled || (this.disabled && this.alwaysFocusable)) {\n            event.stopImmediatePropagation();\n            event.preventDefault();\n            return;\n        }\n    }\n}\n/** @nocollapse */\nChip.shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n};\n__decorate([\n    property({ type: Boolean, reflect: true })\n], Chip.prototype, \"disabled\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'soft-disabled', reflect: true })\n], Chip.prototype, \"softDisabled\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'always-focusable' })\n], Chip.prototype, \"alwaysFocusable\", void 0);\n__decorate([\n    property()\n], Chip.prototype, \"label\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true, attribute: 'has-icon' })\n], Chip.prototype, \"hasIcon\", void 0);\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport '../../elevation/elevation.js';\nimport { html, nothing } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { Chip } from './chip.js';\n/**\n * An assist chip component.\n */\nexport class AssistChip extends Chip {\n    constructor() {\n        super(...arguments);\n        this.elevated = false;\n        this.href = '';\n        this.target = '';\n    }\n    get primaryId() {\n        return this.href ? 'link' : 'button';\n    }\n    get rippleDisabled() {\n        // Link chips cannot be disabled\n        return !this.href && (this.disabled || this.softDisabled);\n    }\n    getContainerClasses() {\n        return {\n            ...super.getContainerClasses(),\n            // Link chips cannot be disabled\n            disabled: !this.href && (this.disabled || this.softDisabled),\n            elevated: this.elevated,\n            link: !!this.href,\n        };\n    }\n    renderPrimaryAction(content) {\n        const { ariaLabel } = this;\n        if (this.href) {\n            return html `\n        <a\n          class=\"primary action\"\n          id=\"link\"\n          aria-label=${ariaLabel || nothing}\n          href=${this.href}\n          target=${this.target || nothing}\n          >${content}</a\n        >\n      `;\n        }\n        return html `\n      <button\n        class=\"primary action\"\n        id=\"button\"\n        aria-label=${ariaLabel || nothing}\n        aria-disabled=${this.softDisabled || nothing}\n        ?disabled=${this.disabled && !this.alwaysFocusable}\n        type=\"button\"\n        >${content}</button\n      >\n    `;\n    }\n    renderOutline() {\n        if (this.elevated) {\n            return html `<md-elevation part=\"elevation\"></md-elevation>`;\n        }\n        return super.renderOutline();\n    }\n}\n__decorate([\n    property({ type: Boolean })\n], AssistChip.prototype, \"elevated\", void 0);\n__decorate([\n    property()\n], AssistChip.prototype, \"href\", void 0);\n__decorate([\n    property()\n], AssistChip.prototype, \"target\", void 0);\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./chips/internal/assist-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{--_container-height: var(--md-assist-chip-container-height, 32px);--_disabled-label-text-color: var(--md-assist-chip-disabled-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-label-text-opacity: var(--md-assist-chip-disabled-label-text-opacity, 0.38);--_elevated-container-color: var(--md-assist-chip-elevated-container-color, var(--md-sys-color-surface-container-low, #f7f2fa));--_elevated-container-elevation: var(--md-assist-chip-elevated-container-elevation, 1);--_elevated-container-shadow-color: var(--md-assist-chip-elevated-container-shadow-color, var(--md-sys-color-shadow, #000));--_elevated-disabled-container-color: var(--md-assist-chip-elevated-disabled-container-color, var(--md-sys-color-on-surface, #1d1b20));--_elevated-disabled-container-elevation: var(--md-assist-chip-elevated-disabled-container-elevation, 0);--_elevated-disabled-container-opacity: var(--md-assist-chip-elevated-disabled-container-opacity, 0.12);--_elevated-focus-container-elevation: var(--md-assist-chip-elevated-focus-container-elevation, 1);--_elevated-hover-container-elevation: var(--md-assist-chip-elevated-hover-container-elevation, 2);--_elevated-pressed-container-elevation: var(--md-assist-chip-elevated-pressed-container-elevation, 1);--_focus-label-text-color: var(--md-assist-chip-focus-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-label-text-color: var(--md-assist-chip-hover-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-state-layer-color: var(--md-assist-chip-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-state-layer-opacity: var(--md-assist-chip-hover-state-layer-opacity, 0.08);--_label-text-color: var(--md-assist-chip-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_label-text-font: var(--md-assist-chip-label-text-font, var(--md-sys-typescale-label-large-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-assist-chip-label-text-line-height, var(--md-sys-typescale-label-large-line-height, 1.25rem));--_label-text-size: var(--md-assist-chip-label-text-size, var(--md-sys-typescale-label-large-size, 0.875rem));--_label-text-weight: var(--md-assist-chip-label-text-weight, var(--md-sys-typescale-label-large-weight, var(--md-ref-typeface-weight-medium, 500)));--_pressed-label-text-color: var(--md-assist-chip-pressed-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_pressed-state-layer-color: var(--md-assist-chip-pressed-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_pressed-state-layer-opacity: var(--md-assist-chip-pressed-state-layer-opacity, 0.12);--_disabled-outline-color: var(--md-assist-chip-disabled-outline-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-outline-opacity: var(--md-assist-chip-disabled-outline-opacity, 0.12);--_focus-outline-color: var(--md-assist-chip-focus-outline-color, var(--md-sys-color-on-surface, #1d1b20));--_outline-color: var(--md-assist-chip-outline-color, var(--md-sys-color-outline, #79747e));--_outline-width: var(--md-assist-chip-outline-width, 1px);--_disabled-leading-icon-color: var(--md-assist-chip-disabled-leading-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-leading-icon-opacity: var(--md-assist-chip-disabled-leading-icon-opacity, 0.38);--_focus-leading-icon-color: var(--md-assist-chip-focus-leading-icon-color, var(--md-sys-color-primary, #6750a4));--_hover-leading-icon-color: var(--md-assist-chip-hover-leading-icon-color, var(--md-sys-color-primary, #6750a4));--_leading-icon-color: var(--md-assist-chip-leading-icon-color, var(--md-sys-color-primary, #6750a4));--_icon-size: var(--md-assist-chip-icon-size, 18px);--_pressed-leading-icon-color: var(--md-assist-chip-pressed-leading-icon-color, var(--md-sys-color-primary, #6750a4));--_container-shape-start-start: var(--md-assist-chip-container-shape-start-start, var(--md-assist-chip-container-shape, var(--md-sys-shape-corner-small, 8px)));--_container-shape-start-end: var(--md-assist-chip-container-shape-start-end, var(--md-assist-chip-container-shape, var(--md-sys-shape-corner-small, 8px)));--_container-shape-end-end: var(--md-assist-chip-container-shape-end-end, var(--md-assist-chip-container-shape, var(--md-sys-shape-corner-small, 8px)));--_container-shape-end-start: var(--md-assist-chip-container-shape-end-start, var(--md-assist-chip-container-shape, var(--md-sys-shape-corner-small, 8px)));--_leading-space: var(--md-assist-chip-leading-space, 16px);--_trailing-space: var(--md-assist-chip-trailing-space, 16px);--_icon-label-space: var(--md-assist-chip-icon-label-space, 8px);--_with-leading-icon-leading-space: var(--md-assist-chip-with-leading-icon-leading-space, 8px)}@media(forced-colors: active){.link .outline{border-color:ActiveText}}\n`;\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./chips/internal/elevated-styles.css.\nimport { css } from 'lit';\nexport const styles = css `.elevated{--md-elevation-level: var(--_elevated-container-elevation);--md-elevation-shadow-color: var(--_elevated-container-shadow-color)}.elevated::before{background:var(--_elevated-container-color)}.elevated:hover{--md-elevation-level: var(--_elevated-hover-container-elevation)}.elevated:focus-within{--md-elevation-level: var(--_elevated-focus-container-elevation)}.elevated:active{--md-elevation-level: var(--_elevated-pressed-container-elevation)}.elevated.disabled{--md-elevation-level: var(--_elevated-disabled-container-elevation)}.elevated.disabled::before{background:var(--_elevated-disabled-container-color);opacity:var(--_elevated-disabled-container-opacity)}@media(forced-colors: active){.elevated md-elevation{border:1px solid CanvasText}.elevated.disabled md-elevation{border-color:GrayText}}\n`;\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./chips/internal/shared-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{border-start-start-radius:var(--_container-shape-start-start);border-start-end-radius:var(--_container-shape-start-end);border-end-start-radius:var(--_container-shape-end-start);border-end-end-radius:var(--_container-shape-end-end);display:inline-flex;height:var(--_container-height);cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);--md-ripple-hover-color: var(--_hover-state-layer-color);--md-ripple-hover-opacity: var(--_hover-state-layer-opacity);--md-ripple-pressed-color: var(--_pressed-state-layer-color);--md-ripple-pressed-opacity: var(--_pressed-state-layer-opacity)}:host(:is([disabled],[soft-disabled])){pointer-events:none}:host([touch-target=wrapper]){margin:max(0px,(48px - var(--_container-height))/2) 0}md-focus-ring{--md-focus-ring-shape-start-start: var(--_container-shape-start-start);--md-focus-ring-shape-start-end: var(--_container-shape-start-end);--md-focus-ring-shape-end-end: var(--_container-shape-end-end);--md-focus-ring-shape-end-start: var(--_container-shape-end-start)}.container{border-radius:inherit;box-sizing:border-box;display:flex;height:100%;position:relative;width:100%}.container::before{border-radius:inherit;content:\"\";inset:0;pointer-events:none;position:absolute}.container:not(.disabled){cursor:pointer}.container.disabled{pointer-events:none}.cell{display:flex}.action{align-items:baseline;appearance:none;background:none;border:none;border-radius:inherit;display:flex;outline:none;padding:0;position:relative;text-decoration:none}.primary.action{min-width:0;padding-inline-start:var(--_leading-space);padding-inline-end:var(--_trailing-space)}.has-icon .primary.action{padding-inline-start:var(--_with-leading-icon-leading-space)}.touch{height:48px;inset:50% 0 0;position:absolute;transform:translateY(-50%);width:100%}:host([touch-target=none]) .touch{display:none}.outline{border:var(--_outline-width) solid var(--_outline-color);border-radius:inherit;inset:0;pointer-events:none;position:absolute}:where(:focus) .outline{border-color:var(--_focus-outline-color)}:where(.disabled) .outline{border-color:var(--_disabled-outline-color);opacity:var(--_disabled-outline-opacity)}md-ripple{border-radius:inherit}.label,.icon,.touch{z-index:1}.label{align-items:center;color:var(--_label-text-color);display:flex;font-family:var(--_label-text-font);font-size:var(--_label-text-size);font-weight:var(--_label-text-weight);height:100%;line-height:var(--_label-text-line-height);overflow:hidden;user-select:none}.label-text{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}:where(:hover) .label{color:var(--_hover-label-text-color)}:where(:focus) .label{color:var(--_focus-label-text-color)}:where(:active) .label{color:var(--_pressed-label-text-color)}:where(.disabled) .label{color:var(--_disabled-label-text-color);opacity:var(--_disabled-label-text-opacity)}.icon{align-self:center;display:flex;fill:currentColor;position:relative}.icon ::slotted(:first-child){font-size:var(--_icon-size);height:var(--_icon-size);width:var(--_icon-size)}.leading.icon{color:var(--_leading-icon-color)}.leading.icon ::slotted(*),.leading.icon svg{margin-inline-end:var(--_icon-label-space)}:where(:hover) .leading.icon{color:var(--_hover-leading-icon-color)}:where(:focus) .leading.icon{color:var(--_focus-leading-icon-color)}:where(:active) .leading.icon{color:var(--_pressed-leading-icon-color)}:where(.disabled) .leading.icon{color:var(--_disabled-leading-icon-color);opacity:var(--_disabled-leading-icon-opacity)}@media(forced-colors: active){:where(.disabled) :is(.label,.outline,.leading.icon){color:GrayText;opacity:1}}a,button{text-transform:inherit}a,button:not(:disabled,[aria-disabled=true]){cursor:inherit}\n`;\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { AssistChip } from './internal/assist-chip.js';\nimport { styles } from './internal/assist-styles.js';\nimport { styles as elevatedStyles } from './internal/elevated-styles.js';\nimport { styles as sharedStyles } from './internal/shared-styles.js';\n/**\n * TODO(b/243982145): add docs\n *\n * @final\n * @suppress {visibility}\n */\nexport let MdAssistChip = class MdAssistChip extends AssistChip {\n};\nMdAssistChip.styles = [sharedStyles, elevatedStyles, styles];\nMdAssistChip = __decorate([\n    customElement('md-assist-chip')\n], MdAssistChip);\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { html, isServer, LitElement } from 'lit';\nimport { queryAssignedElements } from 'lit/decorators.js';\nimport { Chip } from './chip.js';\n/**\n * A chip set component.\n */\nexport class ChipSet extends LitElement {\n    get chips() {\n        return this.childElements.filter((child) => child instanceof Chip);\n    }\n    constructor() {\n        super();\n        this.internals = \n        // Cast needed for closure\n        this.attachInternals();\n        if (!isServer) {\n            this.addEventListener('focusin', this.updateTabIndices.bind(this));\n            this.addEventListener('update-focus', this.updateTabIndices.bind(this));\n            this.addEventListener('keydown', this.handleKeyDown.bind(this));\n            this.internals.role = 'toolbar';\n        }\n    }\n    render() {\n        return html `<slot @slotchange=${this.updateTabIndices}></slot>`;\n    }\n    handleKeyDown(event) {\n        const isLeft = event.key === 'ArrowLeft';\n        const isRight = event.key === 'ArrowRight';\n        const isHome = event.key === 'Home';\n        const isEnd = event.key === 'End';\n        // Ignore non-navigation keys\n        if (!isLeft && !isRight && !isHome && !isEnd) {\n            return;\n        }\n        const { chips } = this;\n        // Don't try to select another chip if there aren't any.\n        if (chips.length < 2) {\n            return;\n        }\n        // Prevent default interactions, such as scrolling.\n        event.preventDefault();\n        if (isHome || isEnd) {\n            const index = isHome ? 0 : chips.length - 1;\n            chips[index].focus({ trailing: isEnd });\n            this.updateTabIndices();\n            return;\n        }\n        // Check if moving forwards or backwards\n        const isRtl = getComputedStyle(this).direction === 'rtl';\n        const forwards = isRtl ? isLeft : isRight;\n        const focusedChip = chips.find((chip) => chip.matches(':focus-within'));\n        if (!focusedChip) {\n            // If there is not already a chip focused, select the first or last chip\n            // based on the direction we're traveling.\n            const nextChip = forwards ? chips[0] : chips[chips.length - 1];\n            nextChip.focus({ trailing: !forwards });\n            this.updateTabIndices();\n            return;\n        }\n        const currentIndex = chips.indexOf(focusedChip);\n        let nextIndex = forwards ? currentIndex + 1 : currentIndex - 1;\n        // Search for the next sibling that is not disabled to select.\n        // If we return to the host index, there is nothing to select.\n        while (nextIndex !== currentIndex) {\n            if (nextIndex >= chips.length) {\n                // Return to start if moving past the last item.\n                nextIndex = 0;\n            }\n            else if (nextIndex < 0) {\n                // Go to end if moving before the first item.\n                nextIndex = chips.length - 1;\n            }\n            // Check if the next sibling is disabled. If so,\n            // move the index and continue searching.\n            //\n            // Some toolbar items may be focusable when disabled for increased\n            // visibility.\n            const nextChip = chips[nextIndex];\n            if (nextChip.disabled && !nextChip.alwaysFocusable) {\n                if (forwards) {\n                    nextIndex++;\n                }\n                else {\n                    nextIndex--;\n                }\n                continue;\n            }\n            nextChip.focus({ trailing: !forwards });\n            this.updateTabIndices();\n            break;\n        }\n    }\n    updateTabIndices() {\n        // The chip that should be focusable is either the chip that currently has\n        // focus or the first chip that can be focused.\n        const { chips } = this;\n        let chipToFocus;\n        for (const chip of chips) {\n            const isChipFocusable = chip.alwaysFocusable || !chip.disabled;\n            const chipIsFocused = chip.matches(':focus-within');\n            if (chipIsFocused && isChipFocusable) {\n                // Found the first chip that is actively focused. This overrides the\n                // first focusable chip found.\n                chipToFocus = chip;\n                continue;\n            }\n            if (isChipFocusable && !chipToFocus) {\n                chipToFocus = chip;\n            }\n            // Disable non-focused chips. If we disable all of them, we'll grant focus\n            // to the first focusable child that was found.\n            chip.tabIndex = -1;\n        }\n        if (chipToFocus) {\n            chipToFocus.tabIndex = 0;\n        }\n    }\n}\n__decorate([\n    queryAssignedElements()\n], ChipSet.prototype, \"childElements\", void 0);\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./chips/internal/chip-set-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{display:flex;flex-wrap:wrap;gap:8px}\n`;\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { ChipSet } from './internal/chip-set.js';\nimport { styles } from './internal/chip-set-styles.js';\n/**\n * TODO(b/243982145): add docs\n *\n * @final\n * @suppress {visibility}\n */\nexport let MdChipSet = class MdChipSet extends ChipSet {\n};\nMdChipSet.styles = [styles];\nMdChipSet = __decorate([\n    customElement('md-chip-set')\n], MdChipSet);\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { html, isServer } from 'lit';\nimport { Chip } from './chip.js';\nconst ARIA_LABEL_REMOVE = 'aria-label-remove';\n/**\n * A chip component with multiple actions.\n */\nexport class MultiActionChip extends Chip {\n    get ariaLabelRemove() {\n        if (this.hasAttribute(ARIA_LABEL_REMOVE)) {\n            return this.getAttribute(ARIA_LABEL_REMOVE);\n        }\n        const { ariaLabel } = this;\n        // TODO(b/350810013): remove `this.label` when label property is removed.\n        if (ariaLabel || this.label) {\n            return `Remove ${ariaLabel || this.label}`;\n        }\n        return null;\n    }\n    set ariaLabelRemove(ariaLabel) {\n        const prev = this.ariaLabelRemove;\n        if (ariaLabel === prev) {\n            return;\n        }\n        if (ariaLabel === null) {\n            this.removeAttribute(ARIA_LABEL_REMOVE);\n        }\n        else {\n            this.setAttribute(ARIA_LABEL_REMOVE, ariaLabel);\n        }\n        this.requestUpdate();\n    }\n    constructor() {\n        super();\n        this.handleTrailingActionFocus = this.handleTrailingActionFocus.bind(this);\n        if (!isServer) {\n            this.addEventListener('keydown', this.handleKeyDown.bind(this));\n        }\n    }\n    focus(options) {\n        const isFocusable = this.alwaysFocusable || !this.disabled;\n        if (isFocusable && options?.trailing && this.trailingAction) {\n            this.trailingAction.focus(options);\n            return;\n        }\n        super.focus(options);\n    }\n    renderContainerContent() {\n        return html `\n      ${super.renderContainerContent()}\n      ${this.renderTrailingAction(this.handleTrailingActionFocus)}\n    `;\n    }\n    handleKeyDown(event) {\n        const isLeft = event.key === 'ArrowLeft';\n        const isRight = event.key === 'ArrowRight';\n        // Ignore non-navigation keys.\n        if (!isLeft && !isRight) {\n            return;\n        }\n        if (!this.primaryAction || !this.trailingAction) {\n            // Does not have multiple actions.\n            return;\n        }\n        // Check if moving forwards or backwards\n        const isRtl = getComputedStyle(this).direction === 'rtl';\n        const forwards = isRtl ? isLeft : isRight;\n        const isPrimaryFocused = this.primaryAction?.matches(':focus-within');\n        const isTrailingFocused = this.trailingAction?.matches(':focus-within');\n        if ((forwards && isTrailingFocused) || (!forwards && isPrimaryFocused)) {\n            // Moving outside of the chip, it will be handled by the chip set.\n            return;\n        }\n        // Prevent default interactions, such as scrolling.\n        event.preventDefault();\n        // Don't let the chip set handle this navigation event.\n        event.stopPropagation();\n        const actionToFocus = forwards ? this.trailingAction : this.primaryAction;\n        actionToFocus.focus();\n    }\n    handleTrailingActionFocus() {\n        const { primaryAction, trailingAction } = this;\n        if (!primaryAction || !trailingAction) {\n            return;\n        }\n        // Temporarily turn off the primary action's focusability. This allows\n        // shift+tab from the trailing action to move to the previous chip rather\n        // than the primary action in the same chip.\n        primaryAction.tabIndex = -1;\n        trailingAction.addEventListener('focusout', () => {\n            primaryAction.tabIndex = 0;\n        }, { once: true });\n    }\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport '../../focus/md-focus-ring.js';\nimport '../../ripple/ripple.js';\nimport { html, nothing } from 'lit';\n/** @protected */\nexport function renderRemoveButton({ ariaLabel, disabled, focusListener, tabbable = false, }) {\n    // When an aria-label is not provided, we use two spans with aria-labelledby\n    // to create the \"Remove <textContent>\" label for the remove button. The first\n    // is this #remove-label span, the second is the chip's #label slot span.\n    return html `\n    <span id=\"remove-label\" hidden aria-hidden=\"true\">Remove</span>\n    <button\n      class=\"trailing action\"\n      aria-label=${ariaLabel || nothing}\n      aria-labelledby=${!ariaLabel ? 'remove-label label' : nothing}\n      tabindex=${!tabbable ? -1 : nothing}\n      @click=${handleRemoveClick}\n      @focus=${focusListener}>\n      <md-focus-ring part=\"trailing-focus-ring\"></md-focus-ring>\n      <md-ripple ?disabled=${disabled}></md-ripple>\n      <span class=\"trailing icon\" aria-hidden=\"true\">\n        <slot name=\"remove-trailing-icon\">\n          <svg viewBox=\"0 96 960 960\">\n            <path\n              d=\"m249 849-42-42 231-231-231-231 42-42 231 231 231-231 42 42-231 231 231 231-42 42-231-231-231 231Z\" />\n          </svg>\n        </slot>\n      </span>\n      <span class=\"touch\"></span>\n    </button>\n  `;\n}\nfunction handleRemoveClick(event) {\n    if (this.disabled || this.softDisabled) {\n        return;\n    }\n    event.stopPropagation();\n    const preventDefault = !this.dispatchEvent(new Event('remove', { cancelable: true }));\n    if (preventDefault) {\n        return;\n    }\n    this.remove();\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport '../../elevation/elevation.js';\nimport { html, nothing } from 'lit';\nimport { property, query } from 'lit/decorators.js';\nimport { redispatchEvent } from '../../internal/events/redispatch-event.js';\nimport { MultiActionChip } from './multi-action-chip.js';\nimport { renderRemoveButton } from './trailing-icons.js';\n/**\n * A filter chip component.\n *\n * @fires remove {Event} Dispatched when the remove button is clicked.\n */\nexport class FilterChip extends MultiActionChip {\n    constructor() {\n        super(...arguments);\n        this.elevated = false;\n        this.removable = false;\n        this.selected = false;\n        /**\n         * Only needed for SSR.\n         *\n         * Add this attribute when a filter chip has a `slot=\"selected-icon\"` to avoid\n         * a Flash Of Unstyled Content.\n         */\n        this.hasSelectedIcon = false;\n    }\n    get primaryId() {\n        return 'button';\n    }\n    getContainerClasses() {\n        return {\n            ...super.getContainerClasses(),\n            elevated: this.elevated,\n            selected: this.selected,\n            'has-trailing': this.removable,\n            'has-icon': this.hasIcon || this.selected,\n        };\n    }\n    renderPrimaryAction(content) {\n        const { ariaLabel } = this;\n        return html `\n      <button\n        class=\"primary action\"\n        id=\"button\"\n        aria-label=${ariaLabel || nothing}\n        aria-pressed=${this.selected}\n        aria-disabled=${this.softDisabled || nothing}\n        ?disabled=${this.disabled && !this.alwaysFocusable}\n        @click=${this.handleClickOnChild}\n        >${content}</button\n      >\n    `;\n    }\n    renderLeadingIcon() {\n        if (!this.selected) {\n            return super.renderLeadingIcon();\n        }\n        return html `\n      <slot name=\"selected-icon\">\n        <svg class=\"checkmark\" viewBox=\"0 0 18 18\" aria-hidden=\"true\">\n          <path\n            d=\"M6.75012 12.1274L3.62262 8.99988L2.55762 10.0574L6.75012 14.2499L15.7501 5.24988L14.6926 4.19238L6.75012 12.1274Z\" />\n        </svg>\n      </slot>\n    `;\n    }\n    renderTrailingAction(focusListener) {\n        if (this.removable) {\n            return renderRemoveButton({\n                focusListener,\n                ariaLabel: this.ariaLabelRemove,\n                disabled: this.disabled || this.softDisabled,\n            });\n        }\n        return nothing;\n    }\n    renderOutline() {\n        if (this.elevated) {\n            return html `<md-elevation part=\"elevation\"></md-elevation>`;\n        }\n        return super.renderOutline();\n    }\n    handleClickOnChild(event) {\n        if (this.disabled || this.softDisabled) {\n            return;\n        }\n        // Store prevValue to revert in case `chip.selected` is changed during an\n        // event listener.\n        const prevValue = this.selected;\n        this.selected = !this.selected;\n        const preventDefault = !redispatchEvent(this, event);\n        if (preventDefault) {\n            // We should not do `this.selected = !this.selected`, since a client\n            // click listener could change its value. Instead, always revert to the\n            // original value.\n            this.selected = prevValue;\n            return;\n        }\n    }\n}\n__decorate([\n    property({ type: Boolean })\n], FilterChip.prototype, \"elevated\", void 0);\n__decorate([\n    property({ type: Boolean })\n], FilterChip.prototype, \"removable\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], FilterChip.prototype, \"selected\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true, attribute: 'has-selected-icon' })\n], FilterChip.prototype, \"hasSelectedIcon\", void 0);\n__decorate([\n    query('.primary.action')\n], FilterChip.prototype, \"primaryAction\", void 0);\n__decorate([\n    query('.trailing.action')\n], FilterChip.prototype, \"trailingAction\", void 0);\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./chips/internal/filter-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{--_container-height: var(--md-filter-chip-container-height, 32px);--_disabled-label-text-color: var(--md-filter-chip-disabled-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-label-text-opacity: var(--md-filter-chip-disabled-label-text-opacity, 0.38);--_elevated-container-elevation: var(--md-filter-chip-elevated-container-elevation, 1);--_elevated-container-shadow-color: var(--md-filter-chip-elevated-container-shadow-color, var(--md-sys-color-shadow, #000));--_elevated-disabled-container-color: var(--md-filter-chip-elevated-disabled-container-color, var(--md-sys-color-on-surface, #1d1b20));--_elevated-disabled-container-elevation: var(--md-filter-chip-elevated-disabled-container-elevation, 0);--_elevated-disabled-container-opacity: var(--md-filter-chip-elevated-disabled-container-opacity, 0.12);--_elevated-focus-container-elevation: var(--md-filter-chip-elevated-focus-container-elevation, 1);--_elevated-hover-container-elevation: var(--md-filter-chip-elevated-hover-container-elevation, 2);--_elevated-pressed-container-elevation: var(--md-filter-chip-elevated-pressed-container-elevation, 1);--_elevated-selected-container-color: var(--md-filter-chip-elevated-selected-container-color, var(--md-sys-color-secondary-container, #e8def8));--_label-text-font: var(--md-filter-chip-label-text-font, var(--md-sys-typescale-label-large-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-filter-chip-label-text-line-height, var(--md-sys-typescale-label-large-line-height, 1.25rem));--_label-text-size: var(--md-filter-chip-label-text-size, var(--md-sys-typescale-label-large-size, 0.875rem));--_label-text-weight: var(--md-filter-chip-label-text-weight, var(--md-sys-typescale-label-large-weight, var(--md-ref-typeface-weight-medium, 500)));--_selected-focus-label-text-color: var(--md-filter-chip-selected-focus-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-hover-label-text-color: var(--md-filter-chip-selected-hover-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-hover-state-layer-color: var(--md-filter-chip-selected-hover-state-layer-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-hover-state-layer-opacity: var(--md-filter-chip-selected-hover-state-layer-opacity, 0.08);--_selected-label-text-color: var(--md-filter-chip-selected-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-pressed-label-text-color: var(--md-filter-chip-selected-pressed-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-pressed-state-layer-color: var(--md-filter-chip-selected-pressed-state-layer-color, var(--md-sys-color-on-surface-variant, #49454f));--_selected-pressed-state-layer-opacity: var(--md-filter-chip-selected-pressed-state-layer-opacity, 0.12);--_elevated-container-color: var(--md-filter-chip-elevated-container-color, var(--md-sys-color-surface-container-low, #f7f2fa));--_disabled-outline-color: var(--md-filter-chip-disabled-outline-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-outline-opacity: var(--md-filter-chip-disabled-outline-opacity, 0.12);--_disabled-selected-container-color: var(--md-filter-chip-disabled-selected-container-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-selected-container-opacity: var(--md-filter-chip-disabled-selected-container-opacity, 0.12);--_focus-outline-color: var(--md-filter-chip-focus-outline-color, var(--md-sys-color-on-surface-variant, #49454f));--_outline-color: var(--md-filter-chip-outline-color, var(--md-sys-color-outline, #79747e));--_outline-width: var(--md-filter-chip-outline-width, 1px);--_selected-container-color: var(--md-filter-chip-selected-container-color, var(--md-sys-color-secondary-container, #e8def8));--_selected-outline-width: var(--md-filter-chip-selected-outline-width, 0px);--_focus-label-text-color: var(--md-filter-chip-focus-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-label-text-color: var(--md-filter-chip-hover-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-state-layer-color: var(--md-filter-chip-hover-state-layer-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-state-layer-opacity: var(--md-filter-chip-hover-state-layer-opacity, 0.08);--_label-text-color: var(--md-filter-chip-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_pressed-label-text-color: var(--md-filter-chip-pressed-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_pressed-state-layer-color: var(--md-filter-chip-pressed-state-layer-color, var(--md-sys-color-on-secondary-container, #1d192b));--_pressed-state-layer-opacity: var(--md-filter-chip-pressed-state-layer-opacity, 0.12);--_icon-size: var(--md-filter-chip-icon-size, 18px);--_disabled-leading-icon-color: var(--md-filter-chip-disabled-leading-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-leading-icon-opacity: var(--md-filter-chip-disabled-leading-icon-opacity, 0.38);--_selected-focus-leading-icon-color: var(--md-filter-chip-selected-focus-leading-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-hover-leading-icon-color: var(--md-filter-chip-selected-hover-leading-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-leading-icon-color: var(--md-filter-chip-selected-leading-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-pressed-leading-icon-color: var(--md-filter-chip-selected-pressed-leading-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_focus-leading-icon-color: var(--md-filter-chip-focus-leading-icon-color, var(--md-sys-color-primary, #6750a4));--_hover-leading-icon-color: var(--md-filter-chip-hover-leading-icon-color, var(--md-sys-color-primary, #6750a4));--_leading-icon-color: var(--md-filter-chip-leading-icon-color, var(--md-sys-color-primary, #6750a4));--_pressed-leading-icon-color: var(--md-filter-chip-pressed-leading-icon-color, var(--md-sys-color-primary, #6750a4));--_disabled-trailing-icon-color: var(--md-filter-chip-disabled-trailing-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-trailing-icon-opacity: var(--md-filter-chip-disabled-trailing-icon-opacity, 0.38);--_selected-focus-trailing-icon-color: var(--md-filter-chip-selected-focus-trailing-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-hover-trailing-icon-color: var(--md-filter-chip-selected-hover-trailing-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-pressed-trailing-icon-color: var(--md-filter-chip-selected-pressed-trailing-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-trailing-icon-color: var(--md-filter-chip-selected-trailing-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_focus-trailing-icon-color: var(--md-filter-chip-focus-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-trailing-icon-color: var(--md-filter-chip-hover-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_pressed-trailing-icon-color: var(--md-filter-chip-pressed-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_trailing-icon-color: var(--md-filter-chip-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_container-shape-start-start: var(--md-filter-chip-container-shape-start-start, var(--md-filter-chip-container-shape, var(--md-sys-shape-corner-small, 8px)));--_container-shape-start-end: var(--md-filter-chip-container-shape-start-end, var(--md-filter-chip-container-shape, var(--md-sys-shape-corner-small, 8px)));--_container-shape-end-end: var(--md-filter-chip-container-shape-end-end, var(--md-filter-chip-container-shape, var(--md-sys-shape-corner-small, 8px)));--_container-shape-end-start: var(--md-filter-chip-container-shape-end-start, var(--md-filter-chip-container-shape, var(--md-sys-shape-corner-small, 8px)));--_leading-space: var(--md-filter-chip-leading-space, 16px);--_trailing-space: var(--md-filter-chip-trailing-space, 16px);--_icon-label-space: var(--md-filter-chip-icon-label-space, 8px);--_with-leading-icon-leading-space: var(--md-filter-chip-with-leading-icon-leading-space, 8px);--_with-trailing-icon-trailing-space: var(--md-filter-chip-with-trailing-icon-trailing-space, 8px)}.selected.elevated::before{background:var(--_elevated-selected-container-color)}.checkmark{height:var(--_icon-size);width:var(--_icon-size)}.disabled .checkmark{opacity:var(--_disabled-leading-icon-opacity)}@media(forced-colors: active){.disabled .checkmark{opacity:1}}\n`;\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./chips/internal/selectable-styles.css.\nimport { css } from 'lit';\nexport const styles = css `.selected{--md-ripple-hover-color: var(--_selected-hover-state-layer-color);--md-ripple-hover-opacity: var(--_selected-hover-state-layer-opacity);--md-ripple-pressed-color: var(--_selected-pressed-state-layer-color);--md-ripple-pressed-opacity: var(--_selected-pressed-state-layer-opacity)}:where(.selected)::before{background:var(--_selected-container-color)}:where(.selected) .outline{border-width:var(--_selected-outline-width)}:where(.selected.disabled)::before{background:var(--_disabled-selected-container-color);opacity:var(--_disabled-selected-container-opacity)}:where(.selected) .label{color:var(--_selected-label-text-color)}:where(.selected:hover) .label{color:var(--_selected-hover-label-text-color)}:where(.selected:focus) .label{color:var(--_selected-focus-label-text-color)}:where(.selected:active) .label{color:var(--_selected-pressed-label-text-color)}:where(.selected) .leading.icon{color:var(--_selected-leading-icon-color)}:where(.selected:hover) .leading.icon{color:var(--_selected-hover-leading-icon-color)}:where(.selected:focus) .leading.icon{color:var(--_selected-focus-leading-icon-color)}:where(.selected:active) .leading.icon{color:var(--_selected-pressed-leading-icon-color)}@media(forced-colors: active){:where(.selected:not(.elevated))::before{border:1px solid CanvasText}:where(.selected) .outline{border-width:1px}}\n`;\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./chips/internal/trailing-icon-styles.css.\nimport { css } from 'lit';\nexport const styles = css `.trailing.action{align-items:center;justify-content:center;padding-inline-start:var(--_icon-label-space);padding-inline-end:var(--_with-trailing-icon-trailing-space)}.trailing.action :is(md-ripple,md-focus-ring){border-radius:50%;height:calc(1.3333333333*var(--_icon-size));width:calc(1.3333333333*var(--_icon-size))}.trailing.action md-focus-ring{inset:unset}.has-trailing .primary.action{padding-inline-end:0}.trailing.icon{color:var(--_trailing-icon-color);height:var(--_icon-size);width:var(--_icon-size)}:where(:hover) .trailing.icon{color:var(--_hover-trailing-icon-color)}:where(:focus) .trailing.icon{color:var(--_focus-trailing-icon-color)}:where(:active) .trailing.icon{color:var(--_pressed-trailing-icon-color)}:where(.disabled) .trailing.icon{color:var(--_disabled-trailing-icon-color);opacity:var(--_disabled-trailing-icon-opacity)}:where(.selected) .trailing.icon{color:var(--_selected-trailing-icon-color)}:where(.selected:hover) .trailing.icon{color:var(--_selected-hover-trailing-icon-color)}:where(.selected:focus) .trailing.icon{color:var(--_selected-focus-trailing-icon-color)}:where(.selected:active) .trailing.icon{color:var(--_selected-pressed-trailing-icon-color)}@media(forced-colors: active){.trailing.icon{color:ButtonText}:where(.disabled) .trailing.icon{color:GrayText;opacity:1}}\n`;\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { styles as elevatedStyles } from './internal/elevated-styles.js';\nimport { FilterChip } from './internal/filter-chip.js';\nimport { styles } from './internal/filter-styles.js';\nimport { styles as selectableStyles } from './internal/selectable-styles.js';\nimport { styles as sharedStyles } from './internal/shared-styles.js';\nimport { styles as trailingIconStyles } from './internal/trailing-icon-styles.js';\n/**\n * TODO(b/243982145): add docs\n *\n * @final\n * @suppress {visibility}\n */\nexport let MdFilterChip = class MdFilterChip extends FilterChip {\n};\nMdFilterChip.styles = [\n    sharedStyles,\n    elevatedStyles,\n    trailingIconStyles,\n    selectableStyles,\n    styles,\n];\nMdFilterChip = __decorate([\n    customElement('md-filter-chip')\n], MdFilterChip);\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { html, nothing } from 'lit';\nimport { property, query } from 'lit/decorators.js';\nimport { MultiActionChip } from './multi-action-chip.js';\nimport { renderRemoveButton } from './trailing-icons.js';\n/**\n * An input chip component.\n *\n * @fires remove {Event} Dispatched when the remove button is clicked.\n */\nexport class InputChip extends MultiActionChip {\n    constructor() {\n        super(...arguments);\n        this.avatar = false;\n        this.href = '';\n        this.target = '';\n        this.removeOnly = false;\n        this.selected = false;\n    }\n    get primaryId() {\n        if (this.href) {\n            return 'link';\n        }\n        if (this.removeOnly) {\n            return '';\n        }\n        return 'button';\n    }\n    get rippleDisabled() {\n        // Link chips cannot be disabled\n        return !this.href && (this.disabled || this.softDisabled);\n    }\n    get primaryAction() {\n        // Don't use @query() since a remove-only input chip still has a span that\n        // has \"primary action\" classes.\n        if (this.removeOnly) {\n            return null;\n        }\n        return this.renderRoot.querySelector('.primary.action');\n    }\n    getContainerClasses() {\n        return {\n            ...super.getContainerClasses(),\n            avatar: this.avatar,\n            // Link chips cannot be disabled\n            disabled: !this.href && (this.disabled || this.softDisabled),\n            link: !!this.href,\n            selected: this.selected,\n            'has-trailing': true,\n        };\n    }\n    renderPrimaryAction(content) {\n        const { ariaLabel } = this;\n        if (this.href) {\n            return html `\n        <a\n          class=\"primary action\"\n          id=\"link\"\n          aria-label=${ariaLabel || nothing}\n          href=${this.href}\n          target=${this.target || nothing}\n          >${content}</a\n        >\n      `;\n        }\n        if (this.removeOnly) {\n            return html `\n        <span class=\"primary action\" aria-label=${ariaLabel || nothing}>\n          ${content}\n        </span>\n      `;\n        }\n        return html `\n      <button\n        class=\"primary action\"\n        id=\"button\"\n        aria-label=${ariaLabel || nothing}\n        aria-disabled=${this.softDisabled || nothing}\n        ?disabled=${this.disabled && !this.alwaysFocusable}\n        type=\"button\"\n        >${content}</button\n      >\n    `;\n    }\n    renderTrailingAction(focusListener) {\n        return renderRemoveButton({\n            focusListener,\n            ariaLabel: this.ariaLabelRemove,\n            disabled: !this.href && (this.disabled || this.softDisabled),\n            tabbable: this.removeOnly,\n        });\n    }\n}\n__decorate([\n    property({ type: Boolean })\n], InputChip.prototype, \"avatar\", void 0);\n__decorate([\n    property()\n], InputChip.prototype, \"href\", void 0);\n__decorate([\n    property()\n], InputChip.prototype, \"target\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'remove-only' })\n], InputChip.prototype, \"removeOnly\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], InputChip.prototype, \"selected\", void 0);\n__decorate([\n    query('.trailing.action')\n], InputChip.prototype, \"trailingAction\", void 0);\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./chips/internal/input-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{--_container-height: var(--md-input-chip-container-height, 32px);--_disabled-label-text-color: var(--md-input-chip-disabled-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-label-text-opacity: var(--md-input-chip-disabled-label-text-opacity, 0.38);--_disabled-selected-container-color: var(--md-input-chip-disabled-selected-container-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-selected-container-opacity: var(--md-input-chip-disabled-selected-container-opacity, 0.12);--_label-text-font: var(--md-input-chip-label-text-font, var(--md-sys-typescale-label-large-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-input-chip-label-text-line-height, var(--md-sys-typescale-label-large-line-height, 1.25rem));--_label-text-size: var(--md-input-chip-label-text-size, var(--md-sys-typescale-label-large-size, 0.875rem));--_label-text-weight: var(--md-input-chip-label-text-weight, var(--md-sys-typescale-label-large-weight, var(--md-ref-typeface-weight-medium, 500)));--_selected-container-color: var(--md-input-chip-selected-container-color, var(--md-sys-color-secondary-container, #e8def8));--_selected-focus-label-text-color: var(--md-input-chip-selected-focus-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-hover-label-text-color: var(--md-input-chip-selected-hover-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-hover-state-layer-color: var(--md-input-chip-selected-hover-state-layer-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-hover-state-layer-opacity: var(--md-input-chip-selected-hover-state-layer-opacity, 0.08);--_selected-label-text-color: var(--md-input-chip-selected-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-outline-width: var(--md-input-chip-selected-outline-width, 0px);--_selected-pressed-label-text-color: var(--md-input-chip-selected-pressed-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-pressed-state-layer-color: var(--md-input-chip-selected-pressed-state-layer-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-pressed-state-layer-opacity: var(--md-input-chip-selected-pressed-state-layer-opacity, 0.12);--_disabled-outline-color: var(--md-input-chip-disabled-outline-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-outline-opacity: var(--md-input-chip-disabled-outline-opacity, 0.12);--_focus-label-text-color: var(--md-input-chip-focus-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_focus-outline-color: var(--md-input-chip-focus-outline-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-label-text-color: var(--md-input-chip-hover-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-state-layer-color: var(--md-input-chip-hover-state-layer-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-state-layer-opacity: var(--md-input-chip-hover-state-layer-opacity, 0.08);--_label-text-color: var(--md-input-chip-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_outline-color: var(--md-input-chip-outline-color, var(--md-sys-color-outline, #79747e));--_outline-width: var(--md-input-chip-outline-width, 1px);--_pressed-label-text-color: var(--md-input-chip-pressed-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_pressed-state-layer-color: var(--md-input-chip-pressed-state-layer-color, var(--md-sys-color-on-surface-variant, #49454f));--_pressed-state-layer-opacity: var(--md-input-chip-pressed-state-layer-opacity, 0.12);--_avatar-shape: var(--md-input-chip-avatar-shape, var(--md-sys-shape-corner-full, 9999px));--_avatar-size: var(--md-input-chip-avatar-size, 24px);--_disabled-avatar-opacity: var(--md-input-chip-disabled-avatar-opacity, 0.38);--_disabled-leading-icon-color: var(--md-input-chip-disabled-leading-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-leading-icon-opacity: var(--md-input-chip-disabled-leading-icon-opacity, 0.38);--_icon-size: var(--md-input-chip-icon-size, 18px);--_selected-focus-leading-icon-color: var(--md-input-chip-selected-focus-leading-icon-color, var(--md-sys-color-primary, #6750a4));--_selected-hover-leading-icon-color: var(--md-input-chip-selected-hover-leading-icon-color, var(--md-sys-color-primary, #6750a4));--_selected-leading-icon-color: var(--md-input-chip-selected-leading-icon-color, var(--md-sys-color-primary, #6750a4));--_selected-pressed-leading-icon-color: var(--md-input-chip-selected-pressed-leading-icon-color, var(--md-sys-color-primary, #6750a4));--_focus-leading-icon-color: var(--md-input-chip-focus-leading-icon-color, var(--md-sys-color-primary, #6750a4));--_hover-leading-icon-color: var(--md-input-chip-hover-leading-icon-color, var(--md-sys-color-primary, #6750a4));--_leading-icon-color: var(--md-input-chip-leading-icon-color, var(--md-sys-color-primary, #6750a4));--_pressed-leading-icon-color: var(--md-input-chip-pressed-leading-icon-color, var(--md-sys-color-primary, #6750a4));--_disabled-trailing-icon-color: var(--md-input-chip-disabled-trailing-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-trailing-icon-opacity: var(--md-input-chip-disabled-trailing-icon-opacity, 0.38);--_selected-focus-trailing-icon-color: var(--md-input-chip-selected-focus-trailing-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-hover-trailing-icon-color: var(--md-input-chip-selected-hover-trailing-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-pressed-trailing-icon-color: var(--md-input-chip-selected-pressed-trailing-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_selected-trailing-icon-color: var(--md-input-chip-selected-trailing-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_focus-trailing-icon-color: var(--md-input-chip-focus-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-trailing-icon-color: var(--md-input-chip-hover-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_pressed-trailing-icon-color: var(--md-input-chip-pressed-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_trailing-icon-color: var(--md-input-chip-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_container-shape-start-start: var(--md-input-chip-container-shape-start-start, var(--md-input-chip-container-shape, var(--md-sys-shape-corner-small, 8px)));--_container-shape-start-end: var(--md-input-chip-container-shape-start-end, var(--md-input-chip-container-shape, var(--md-sys-shape-corner-small, 8px)));--_container-shape-end-end: var(--md-input-chip-container-shape-end-end, var(--md-input-chip-container-shape, var(--md-sys-shape-corner-small, 8px)));--_container-shape-end-start: var(--md-input-chip-container-shape-end-start, var(--md-input-chip-container-shape, var(--md-sys-shape-corner-small, 8px)));--_leading-space: var(--md-input-chip-leading-space, 16px);--_trailing-space: var(--md-input-chip-trailing-space, 16px);--_icon-label-space: var(--md-input-chip-icon-label-space, 8px);--_with-leading-icon-leading-space: var(--md-input-chip-with-leading-icon-leading-space, 8px);--_with-trailing-icon-trailing-space: var(--md-input-chip-with-trailing-icon-trailing-space, 8px)}:host([avatar]){--_container-shape-start-start: var( --md-input-chip-container-shape-start-start, var(--md-input-chip-container-shape, calc(var(--_container-height) / 2)) );--_container-shape-start-end: var( --md-input-chip-container-shape-start-end, var(--md-input-chip-container-shape, calc(var(--_container-height) / 2)) );--_container-shape-end-end: var( --md-input-chip-container-shape-end-end, var(--md-input-chip-container-shape, calc(var(--_container-height) / 2)) );--_container-shape-end-start: var( --md-input-chip-container-shape-end-start, var(--md-input-chip-container-shape, calc(var(--_container-height) / 2)) )}.avatar .primary.action{padding-inline-start:4px}.avatar .leading.icon ::slotted(:first-child){border-radius:var(--_avatar-shape);height:var(--_avatar-size);width:var(--_avatar-size)}.disabled.avatar .leading.icon{opacity:var(--_disabled-avatar-opacity)}@media(forced-colors: active){.link .outline{border-color:ActiveText}.disabled.avatar .leading.icon{opacity:1}}\n`;\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { InputChip } from './internal/input-chip.js';\nimport { styles } from './internal/input-styles.js';\nimport { styles as selectableStyles } from './internal/selectable-styles.js';\nimport { styles as sharedStyles } from './internal/shared-styles.js';\nimport { styles as trailingIconStyles } from './internal/trailing-icon-styles.js';\n/**\n * TODO(b/243982145): add docs\n *\n * @final\n * @suppress {visibility}\n */\nexport let MdInputChip = class MdInputChip extends InputChip {\n};\nMdInputChip.styles = [\n    sharedStyles,\n    trailingIconStyles,\n    selectableStyles,\n    styles,\n];\nMdInputChip = __decorate([\n    customElement('md-input-chip')\n], MdInputChip);\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { AssistChip } from './assist-chip.js';\n/**\n * A suggestion chip component.\n */\nexport class SuggestionChip extends AssistChip {\n}\n// Note: assist and suggestion chips are functionally identical with different\n// tokens.\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./chips/internal/suggestion-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{--_container-height: var(--md-suggestion-chip-container-height, 32px);--_disabled-label-text-color: var(--md-suggestion-chip-disabled-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-label-text-opacity: var(--md-suggestion-chip-disabled-label-text-opacity, 0.38);--_elevated-container-color: var(--md-suggestion-chip-elevated-container-color, var(--md-sys-color-surface-container-low, #f7f2fa));--_elevated-container-elevation: var(--md-suggestion-chip-elevated-container-elevation, 1);--_elevated-container-shadow-color: var(--md-suggestion-chip-elevated-container-shadow-color, var(--md-sys-color-shadow, #000));--_elevated-disabled-container-color: var(--md-suggestion-chip-elevated-disabled-container-color, var(--md-sys-color-on-surface, #1d1b20));--_elevated-disabled-container-elevation: var(--md-suggestion-chip-elevated-disabled-container-elevation, 0);--_elevated-disabled-container-opacity: var(--md-suggestion-chip-elevated-disabled-container-opacity, 0.12);--_elevated-focus-container-elevation: var(--md-suggestion-chip-elevated-focus-container-elevation, 1);--_elevated-hover-container-elevation: var(--md-suggestion-chip-elevated-hover-container-elevation, 2);--_elevated-pressed-container-elevation: var(--md-suggestion-chip-elevated-pressed-container-elevation, 1);--_focus-label-text-color: var(--md-suggestion-chip-focus-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-label-text-color: var(--md-suggestion-chip-hover-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-state-layer-color: var(--md-suggestion-chip-hover-state-layer-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-state-layer-opacity: var(--md-suggestion-chip-hover-state-layer-opacity, 0.08);--_label-text-color: var(--md-suggestion-chip-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_label-text-font: var(--md-suggestion-chip-label-text-font, var(--md-sys-typescale-label-large-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-suggestion-chip-label-text-line-height, var(--md-sys-typescale-label-large-line-height, 1.25rem));--_label-text-size: var(--md-suggestion-chip-label-text-size, var(--md-sys-typescale-label-large-size, 0.875rem));--_label-text-weight: var(--md-suggestion-chip-label-text-weight, var(--md-sys-typescale-label-large-weight, var(--md-ref-typeface-weight-medium, 500)));--_pressed-label-text-color: var(--md-suggestion-chip-pressed-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_pressed-state-layer-color: var(--md-suggestion-chip-pressed-state-layer-color, var(--md-sys-color-on-surface-variant, #49454f));--_pressed-state-layer-opacity: var(--md-suggestion-chip-pressed-state-layer-opacity, 0.12);--_disabled-outline-color: var(--md-suggestion-chip-disabled-outline-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-outline-opacity: var(--md-suggestion-chip-disabled-outline-opacity, 0.12);--_focus-outline-color: var(--md-suggestion-chip-focus-outline-color, var(--md-sys-color-on-surface-variant, #49454f));--_outline-color: var(--md-suggestion-chip-outline-color, var(--md-sys-color-outline, #79747e));--_outline-width: var(--md-suggestion-chip-outline-width, 1px);--_disabled-leading-icon-color: var(--md-suggestion-chip-disabled-leading-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-leading-icon-opacity: var(--md-suggestion-chip-disabled-leading-icon-opacity, 0.38);--_focus-leading-icon-color: var(--md-suggestion-chip-focus-leading-icon-color, var(--md-sys-color-primary, #6750a4));--_hover-leading-icon-color: var(--md-suggestion-chip-hover-leading-icon-color, var(--md-sys-color-primary, #6750a4));--_leading-icon-color: var(--md-suggestion-chip-leading-icon-color, var(--md-sys-color-primary, #6750a4));--_pressed-leading-icon-color: var(--md-suggestion-chip-pressed-leading-icon-color, var(--md-sys-color-primary, #6750a4));--_icon-size: var(--md-suggestion-chip-icon-size, 18px);--_container-shape-start-start: var(--md-suggestion-chip-container-shape-start-start, var(--md-suggestion-chip-container-shape, var(--md-sys-shape-corner-small, 8px)));--_container-shape-start-end: var(--md-suggestion-chip-container-shape-start-end, var(--md-suggestion-chip-container-shape, var(--md-sys-shape-corner-small, 8px)));--_container-shape-end-end: var(--md-suggestion-chip-container-shape-end-end, var(--md-suggestion-chip-container-shape, var(--md-sys-shape-corner-small, 8px)));--_container-shape-end-start: var(--md-suggestion-chip-container-shape-end-start, var(--md-suggestion-chip-container-shape, var(--md-sys-shape-corner-small, 8px)));--_leading-space: var(--md-suggestion-chip-leading-space, 16px);--_trailing-space: var(--md-suggestion-chip-trailing-space, 16px);--_icon-label-space: var(--md-suggestion-chip-icon-label-space, 8px);--_with-leading-icon-leading-space: var(--md-suggestion-chip-with-leading-icon-leading-space, 8px)}@media(forced-colors: active){.link .outline{border-color:ActiveText}}\n`;\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { styles as elevatedStyles } from './internal/elevated-styles.js';\nimport { styles as sharedStyles } from './internal/shared-styles.js';\nimport { SuggestionChip } from './internal/suggestion-chip.js';\nimport { styles } from './internal/suggestion-styles.js';\n/**\n * TODO(b/243982145): add docs\n *\n * @final\n * @suppress {visibility}\n */\nexport let MdSuggestionChip = class MdSuggestionChip extends SuggestionChip {\n};\nMdSuggestionChip.styles = [sharedStyles, elevatedStyles, styles];\nMdSuggestionChip = __decorate([\n    customElement('md-suggestion-chip')\n], MdSuggestionChip);\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { LitElement } from 'lit';\nimport { property } from 'lit/decorators.js';\n/**\n * A divider component.\n */\nexport class Divider extends LitElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * Indents the divider with equal padding on both sides.\n         */\n        this.inset = false;\n        /**\n         * Indents the divider with padding on the leading side.\n         */\n        this.insetStart = false;\n        /**\n         * Indents the divider with padding on the trailing side.\n         */\n        this.insetEnd = false;\n    }\n}\n__decorate([\n    property({ type: Boolean, reflect: true })\n], Divider.prototype, \"inset\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true, attribute: 'inset-start' })\n], Divider.prototype, \"insetStart\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true, attribute: 'inset-end' })\n], Divider.prototype, \"insetEnd\", void 0);\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./divider/internal/divider-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{box-sizing:border-box;color:var(--md-divider-color, var(--md-sys-color-outline-variant, #cac4d0));display:flex;height:var(--md-divider-thickness, 1px);width:100%}:host([inset]),:host([inset-start]){padding-inline-start:16px}:host([inset]),:host([inset-end]){padding-inline-end:16px}:host::before{background:currentColor;content:\"\";height:100%;width:100%}@media(forced-colors: active){:host::before{background:CanvasText}}\n`;\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { Divider } from './internal/divider.js';\nimport { styles } from './internal/divider-styles.js';\n/**\n * @summary A divider is a thin line that groups content in lists and\n * containers.\n *\n * @description Dividers can reinforce tapability, such as when used to separate\n * list items or define tappable regions in an accordion.\n *\n * @final\n * @suppress {visibility}\n */\nexport let MdDivider = class MdDivider extends Divider {\n};\nMdDivider.styles = [styles];\nMdDivider = __decorate([\n    customElement('md-divider')\n], MdDivider);\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { EASING } from '../../internal/motion/animation.js';\n/**\n * The default dialog open animation.\n */\nexport const DIALOG_DEFAULT_OPEN_ANIMATION = {\n    dialog: [\n        [\n            // Dialog slide down\n            [{ 'transform': 'translateY(-50px)' }, { 'transform': 'translateY(0)' }],\n            { duration: 500, easing: EASING.EMPHASIZED },\n        ],\n    ],\n    scrim: [\n        [\n            // Scrim fade in\n            [{ 'opacity': 0 }, { 'opacity': 0.32 }],\n            { duration: 500, easing: 'linear' },\n        ],\n    ],\n    container: [\n        [\n            // Container fade in\n            [{ 'opacity': 0 }, { 'opacity': 1 }],\n            { duration: 50, easing: 'linear', pseudoElement: '::before' },\n        ],\n        [\n            // Container grow\n            // Note: current spec says to grow from 0dp->100% and shrink from\n            // 100%->35%. We change this to 35%->100% to simplify the animation that\n            // is supposed to clip content as it grows. From 0dp it's possible to see\n            // text/actions appear before the container has fully grown.\n            [{ 'height': '35%' }, { 'height': '100%' }],\n            { duration: 500, easing: EASING.EMPHASIZED, pseudoElement: '::before' },\n        ],\n    ],\n    headline: [\n        [\n            // Headline fade in\n            [{ 'opacity': 0 }, { 'opacity': 0, offset: 0.2 }, { 'opacity': 1 }],\n            { duration: 250, easing: 'linear', fill: 'forwards' },\n        ],\n    ],\n    content: [\n        [\n            // Content fade in\n            [{ 'opacity': 0 }, { 'opacity': 0, offset: 0.2 }, { 'opacity': 1 }],\n            { duration: 250, easing: 'linear', fill: 'forwards' },\n        ],\n    ],\n    actions: [\n        [\n            // Actions fade in\n            [{ 'opacity': 0 }, { 'opacity': 0, offset: 0.5 }, { 'opacity': 1 }],\n            { duration: 300, easing: 'linear', fill: 'forwards' },\n        ],\n    ],\n};\n/**\n * The default dialog close animation.\n */\nexport const DIALOG_DEFAULT_CLOSE_ANIMATION = {\n    dialog: [\n        [\n            // Dialog slide up\n            [{ 'transform': 'translateY(0)' }, { 'transform': 'translateY(-50px)' }],\n            { duration: 150, easing: EASING.EMPHASIZED_ACCELERATE },\n        ],\n    ],\n    scrim: [\n        [\n            // Scrim fade out\n            [{ 'opacity': 0.32 }, { 'opacity': 0 }],\n            { duration: 150, easing: 'linear' },\n        ],\n    ],\n    container: [\n        [\n            // Container shrink\n            [{ 'height': '100%' }, { 'height': '35%' }],\n            {\n                duration: 150,\n                easing: EASING.EMPHASIZED_ACCELERATE,\n                pseudoElement: '::before',\n            },\n        ],\n        [\n            // Container fade out\n            [{ 'opacity': '1' }, { 'opacity': '0' }],\n            { delay: 100, duration: 50, easing: 'linear', pseudoElement: '::before' },\n        ],\n    ],\n    headline: [\n        [\n            // Headline fade out\n            [{ 'opacity': 1 }, { 'opacity': 0 }],\n            { duration: 100, easing: 'linear', fill: 'forwards' },\n        ],\n    ],\n    content: [\n        [\n            // Content fade out\n            [{ 'opacity': 1 }, { 'opacity': 0 }],\n            { duration: 100, easing: 'linear', fill: 'forwards' },\n        ],\n    ],\n    actions: [\n        [\n            // Actions fade out\n            [{ 'opacity': 1 }, { 'opacity': 0 }],\n            { duration: 100, easing: 'linear', fill: 'forwards' },\n        ],\n    ],\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport '../../divider/divider.js';\nimport { html, isServer, LitElement, nothing } from 'lit';\nimport { property, query, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { mixinDelegatesAria } from '../../internal/aria/delegate.js';\nimport { redispatchEvent } from '../../internal/events/redispatch-event.js';\nimport { DIALOG_DEFAULT_CLOSE_ANIMATION, DIALOG_DEFAULT_OPEN_ANIMATION, } from './animations.js';\n// Separate variable needed for closure.\nconst dialogBaseClass = mixinDelegatesAria(LitElement);\n/**\n * A dialog component.\n *\n * @fires open {Event} Dispatched when the dialog is opening before any animations.\n * @fires opened {Event} Dispatched when the dialog has opened after any animations.\n * @fires close {Event} Dispatched when the dialog is closing before any animations.\n * @fires closed {Event} Dispatched when the dialog has closed after any animations.\n * @fires cancel {Event} Dispatched when the dialog has been canceled by clicking\n * on the scrim or pressing Escape.\n */\nexport class Dialog extends dialogBaseClass {\n    // We do not use `delegatesFocus: true` due to a Chromium bug with\n    // selecting text.\n    // See https://bugs.chromium.org/p/chromium/issues/detail?id=950357\n    /**\n     * Opens the dialog when set to `true` and closes it when set to `false`.\n     */\n    get open() {\n        return this.isOpen;\n    }\n    set open(open) {\n        if (open === this.isOpen) {\n            return;\n        }\n        this.isOpen = open;\n        if (open) {\n            this.setAttribute('open', '');\n            this.show();\n        }\n        else {\n            this.removeAttribute('open');\n            this.close();\n        }\n    }\n    constructor() {\n        super();\n        /**\n         * Skips the opening and closing animations.\n         */\n        this.quick = false;\n        /**\n         * Gets or sets the dialog's return value, usually to indicate which button\n         * a user pressed to close it.\n         *\n         * https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement/returnValue\n         */\n        this.returnValue = '';\n        /**\n         * Disables focus trapping, which by default keeps keyboard Tab navigation\n         * within the dialog.\n         *\n         * When disabled, after focusing the last element of a dialog, pressing Tab\n         * again will release focus from the window back to the browser (such as the\n         * URL bar).\n         *\n         * Focus trapping is recommended for accessibility, and should not typically\n         * be disabled. Only turn this off if the use case of a dialog is more\n         * accessible without focus trapping.\n         */\n        this.noFocusTrap = false;\n        /**\n         * Gets the opening animation for a dialog. Set to a new function to customize\n         * the animation.\n         */\n        this.getOpenAnimation = () => DIALOG_DEFAULT_OPEN_ANIMATION;\n        /**\n         * Gets the closing animation for a dialog. Set to a new function to customize\n         * the animation.\n         */\n        this.getCloseAnimation = () => DIALOG_DEFAULT_CLOSE_ANIMATION;\n        this.isOpen = false;\n        this.isOpening = false;\n        this.isConnectedPromise = this.getIsConnectedPromise();\n        this.isAtScrollTop = false;\n        this.isAtScrollBottom = false;\n        this.nextClickIsFromContent = false;\n        // Dialogs should not be SSR'd while open, so we can just use runtime checks.\n        this.hasHeadline = false;\n        this.hasActions = false;\n        this.hasIcon = false;\n        // See https://bugs.chromium.org/p/chromium/issues/detail?id=1512224\n        // Chrome v120 has a bug where escape keys do not trigger cancels. If we get\n        // a dialog \"close\" event that is triggered without a \"cancel\" after an escape\n        // keydown, then we need to manually trigger our closing logic.\n        //\n        // This bug occurs when pressing escape to close a dialog without first\n        // interacting with the dialog's content.\n        //\n        // Cleanup tracking:\n        // https://github.com/material-components/material-web/issues/5330\n        // This can be removed when full CloseWatcher support added and the above bug\n        // in Chromium is fixed to fire 'cancel' with one escape press and close with\n        // multiple.\n        this.escapePressedWithoutCancel = false;\n        // This TreeWalker is used to walk through a dialog's children to find\n        // focusable elements. TreeWalker is faster than `querySelectorAll('*')`.\n        // We check for isServer because there isn't a \"document\" during an SSR\n        // run.\n        this.treewalker = isServer\n            ? null\n            : document.createTreeWalker(this, NodeFilter.SHOW_ELEMENT);\n        if (!isServer) {\n            this.addEventListener('submit', this.handleSubmit);\n        }\n    }\n    /**\n     * Opens the dialog and fires a cancelable `open` event. After a dialog's\n     * animation, an `opened` event is fired.\n     *\n     * Add an `autofocus` attribute to a child of the dialog that should\n     * receive focus after opening.\n     *\n     * @return A Promise that resolves after the animation is finished and the\n     *     `opened` event was fired.\n     */\n    async show() {\n        this.isOpening = true;\n        // Dialogs can be opened before being attached to the DOM, so we need to\n        // wait until we're connected before calling `showModal()`.\n        await this.isConnectedPromise;\n        await this.updateComplete;\n        const dialog = this.dialog;\n        // Check if already opened or if `dialog.close()` was called while awaiting.\n        if (dialog.open || !this.isOpening) {\n            this.isOpening = false;\n            return;\n        }\n        const preventOpen = !this.dispatchEvent(new Event('open', { cancelable: true }));\n        if (preventOpen) {\n            this.open = false;\n            this.isOpening = false;\n            return;\n        }\n        // All Material dialogs are modal.\n        dialog.showModal();\n        this.open = true;\n        // Reset scroll position if re-opening a dialog with the same content.\n        if (this.scroller) {\n            this.scroller.scrollTop = 0;\n        }\n        // Native modal dialogs ignore autofocus and instead force focus to the\n        // first focusable child. Override this behavior if there is a child with\n        // an autofocus attribute.\n        this.querySelector('[autofocus]')?.focus();\n        await this.animateDialog(this.getOpenAnimation());\n        this.dispatchEvent(new Event('opened'));\n        this.isOpening = false;\n    }\n    /**\n     * Closes the dialog and fires a cancelable `close` event. After a dialog's\n     * animation, a `closed` event is fired.\n     *\n     * @param returnValue A return value usually indicating which button was used\n     *     to close a dialog. If a dialog is canceled by clicking the scrim or\n     *     pressing Escape, it will not change the return value after closing.\n     * @return A Promise that resolves after the animation is finished and the\n     *     `closed` event was fired.\n     */\n    async close(returnValue = this.returnValue) {\n        this.isOpening = false;\n        if (!this.isConnected) {\n            // Disconnected dialogs do not fire close events or animate.\n            this.open = false;\n            return;\n        }\n        await this.updateComplete;\n        const dialog = this.dialog;\n        // Check if already closed or if `dialog.show()` was called while awaiting.\n        if (!dialog.open || this.isOpening) {\n            this.open = false;\n            return;\n        }\n        const prevReturnValue = this.returnValue;\n        this.returnValue = returnValue;\n        const preventClose = !this.dispatchEvent(new Event('close', { cancelable: true }));\n        if (preventClose) {\n            this.returnValue = prevReturnValue;\n            return;\n        }\n        await this.animateDialog(this.getCloseAnimation());\n        dialog.close(returnValue);\n        this.open = false;\n        this.dispatchEvent(new Event('closed'));\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        this.isConnectedPromiseResolve();\n    }\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        this.isConnectedPromise = this.getIsConnectedPromise();\n    }\n    render() {\n        const scrollable = this.open && !(this.isAtScrollTop && this.isAtScrollBottom);\n        const classes = {\n            'has-headline': this.hasHeadline,\n            'has-actions': this.hasActions,\n            'has-icon': this.hasIcon,\n            'scrollable': scrollable,\n            'show-top-divider': scrollable && !this.isAtScrollTop,\n            'show-bottom-divider': scrollable && !this.isAtScrollBottom,\n        };\n        // The focus trap sentinels are only added after the dialog opens, since\n        // dialog.showModal() will try to autofocus them, even with tabindex=\"-1\".\n        const showFocusTrap = this.open && !this.noFocusTrap;\n        const focusTrap = html `\n      <div\n        class=\"focus-trap\"\n        tabindex=\"0\"\n        aria-hidden=\"true\"\n        @focus=${this.handleFocusTrapFocus}></div>\n    `;\n        const { ariaLabel } = this;\n        return html `\n      <div class=\"scrim\"></div>\n      <dialog\n        class=${classMap(classes)}\n        aria-label=${ariaLabel || nothing}\n        aria-labelledby=${this.hasHeadline ? 'headline' : nothing}\n        role=${this.type === 'alert' ? 'alertdialog' : nothing}\n        @cancel=${this.handleCancel}\n        @click=${this.handleDialogClick}\n        @close=${this.handleClose}\n        @keydown=${this.handleKeydown}\n        .returnValue=${this.returnValue || nothing}>\n        ${showFocusTrap ? focusTrap : nothing}\n        <div class=\"container\" @click=${this.handleContentClick}>\n          <div class=\"headline\">\n            <div class=\"icon\" aria-hidden=\"true\">\n              <slot name=\"icon\" @slotchange=${this.handleIconChange}></slot>\n            </div>\n            <h2 id=\"headline\" aria-hidden=${!this.hasHeadline || nothing}>\n              <slot\n                name=\"headline\"\n                @slotchange=${this.handleHeadlineChange}></slot>\n            </h2>\n            <md-divider></md-divider>\n          </div>\n          <div class=\"scroller\">\n            <div class=\"content\">\n              <div class=\"top anchor\"></div>\n              <slot name=\"content\"></slot>\n              <div class=\"bottom anchor\"></div>\n            </div>\n          </div>\n          <div class=\"actions\">\n            <md-divider></md-divider>\n            <slot name=\"actions\" @slotchange=${this.handleActionsChange}></slot>\n          </div>\n        </div>\n        ${showFocusTrap ? focusTrap : nothing}\n      </dialog>\n    `;\n    }\n    firstUpdated() {\n        this.intersectionObserver = new IntersectionObserver((entries) => {\n            for (const entry of entries) {\n                this.handleAnchorIntersection(entry);\n            }\n        }, { root: this.scroller });\n        this.intersectionObserver.observe(this.topAnchor);\n        this.intersectionObserver.observe(this.bottomAnchor);\n    }\n    handleDialogClick() {\n        if (this.nextClickIsFromContent) {\n            // Avoid doing a layout calculation below if we know the click came from\n            // content.\n            this.nextClickIsFromContent = false;\n            return;\n        }\n        // Click originated on the backdrop. Native `<dialog>`s will not cancel,\n        // but Material dialogs do.\n        const preventDefault = !this.dispatchEvent(new Event('cancel', { cancelable: true }));\n        if (preventDefault) {\n            return;\n        }\n        this.close();\n    }\n    handleContentClick() {\n        this.nextClickIsFromContent = true;\n    }\n    handleSubmit(event) {\n        const form = event.target;\n        const { submitter } = event;\n        if (form.method !== 'dialog' || !submitter) {\n            return;\n        }\n        // Close reason is the submitter's value attribute, or the dialog's\n        // `returnValue` if there is no attribute.\n        this.close(submitter.getAttribute('value') ?? this.returnValue);\n    }\n    handleCancel(event) {\n        if (event.target !== this.dialog) {\n            // Ignore any cancel events dispatched by content.\n            return;\n        }\n        this.escapePressedWithoutCancel = false;\n        const preventDefault = !redispatchEvent(this, event);\n        // We always prevent default on the original dialog event since we'll\n        // animate closing it before it actually closes.\n        event.preventDefault();\n        if (preventDefault) {\n            return;\n        }\n        this.close();\n    }\n    handleClose() {\n        if (!this.escapePressedWithoutCancel) {\n            return;\n        }\n        this.escapePressedWithoutCancel = false;\n        this.dialog?.dispatchEvent(new Event('cancel', { cancelable: true }));\n    }\n    handleKeydown(event) {\n        if (event.key !== 'Escape') {\n            return;\n        }\n        // An escape key was pressed. If a \"close\" event fires next without a\n        // \"cancel\" event first, then we know we're in the Chrome v120 bug.\n        this.escapePressedWithoutCancel = true;\n        // Wait a full task for the cancel/close event listeners to fire, then\n        // reset the flag.\n        setTimeout(() => {\n            this.escapePressedWithoutCancel = false;\n        });\n    }\n    async animateDialog(animation) {\n        // Always cancel the previous animations. Animations can include `fill`\n        // modes that need to be cleared when `quick` is toggled. If not, content\n        // that faded out will remain hidden when a `quick` dialog re-opens after\n        // previously opening and closing without `quick`.\n        this.cancelAnimations?.abort();\n        this.cancelAnimations = new AbortController();\n        if (this.quick) {\n            return;\n        }\n        const { dialog, scrim, container, headline, content, actions } = this;\n        if (!dialog || !scrim || !container || !headline || !content || !actions) {\n            return;\n        }\n        const { container: containerAnimate, dialog: dialogAnimate, scrim: scrimAnimate, headline: headlineAnimate, content: contentAnimate, actions: actionsAnimate, } = animation;\n        const elementAndAnimation = [\n            [dialog, dialogAnimate ?? []],\n            [scrim, scrimAnimate ?? []],\n            [container, containerAnimate ?? []],\n            [headline, headlineAnimate ?? []],\n            [content, contentAnimate ?? []],\n            [actions, actionsAnimate ?? []],\n        ];\n        const animations = [];\n        for (const [element, animation] of elementAndAnimation) {\n            for (const animateArgs of animation) {\n                const animation = element.animate(...animateArgs);\n                this.cancelAnimations.signal.addEventListener('abort', () => {\n                    animation.cancel();\n                });\n                animations.push(animation);\n            }\n        }\n        await Promise.all(animations.map((animation) => animation.finished.catch(() => {\n            // Ignore intentional AbortErrors when calling `animation.cancel()`.\n        })));\n    }\n    handleHeadlineChange(event) {\n        const slot = event.target;\n        this.hasHeadline = slot.assignedElements().length > 0;\n    }\n    handleActionsChange(event) {\n        const slot = event.target;\n        this.hasActions = slot.assignedElements().length > 0;\n    }\n    handleIconChange(event) {\n        const slot = event.target;\n        this.hasIcon = slot.assignedElements().length > 0;\n    }\n    handleAnchorIntersection(entry) {\n        const { target, isIntersecting } = entry;\n        if (target === this.topAnchor) {\n            this.isAtScrollTop = isIntersecting;\n        }\n        if (target === this.bottomAnchor) {\n            this.isAtScrollBottom = isIntersecting;\n        }\n    }\n    getIsConnectedPromise() {\n        return new Promise((resolve) => {\n            this.isConnectedPromiseResolve = resolve;\n        });\n    }\n    handleFocusTrapFocus(event) {\n        const [firstFocusableChild, lastFocusableChild] = this.getFirstAndLastFocusableChildren();\n        if (!firstFocusableChild || !lastFocusableChild) {\n            // When a dialog does not have focusable children, the dialog itself\n            // receives focus.\n            this.dialog?.focus();\n            return;\n        }\n        // To determine which child to focus, we need to know which focus trap\n        // received focus...\n        const isFirstFocusTrap = event.target === this.firstFocusTrap;\n        const isLastFocusTrap = !isFirstFocusTrap;\n        // ...and where the focus came from (what was previously focused).\n        const focusCameFromFirstChild = event.relatedTarget === firstFocusableChild;\n        const focusCameFromLastChild = event.relatedTarget === lastFocusableChild;\n        // Although this is a focus trap, focus can come from outside the trap.\n        // This can happen when elements are programmatically `focus()`'d. It also\n        // happens when focus leaves and returns to the window, such as clicking on\n        // the browser's URL bar and pressing Tab, or switching focus between\n        // iframes.\n        const focusCameFromOutsideDialog = !focusCameFromFirstChild && !focusCameFromLastChild;\n        // Focus the dialog's first child when we reach the end of the dialog and\n        // focus is moving forward. Or, when focus is moving forwards into the\n        // dialog from outside of the window.\n        const shouldFocusFirstChild = (isLastFocusTrap && focusCameFromLastChild) ||\n            (isFirstFocusTrap && focusCameFromOutsideDialog);\n        if (shouldFocusFirstChild) {\n            firstFocusableChild.focus();\n            return;\n        }\n        // Focus the dialog's last child when we reach the beginning of the dialog\n        // and focus is moving backward. Or, when focus is moving backwards into the\n        // dialog from outside of the window.\n        const shouldFocusLastChild = (isFirstFocusTrap && focusCameFromFirstChild) ||\n            (isLastFocusTrap && focusCameFromOutsideDialog);\n        if (shouldFocusLastChild) {\n            lastFocusableChild.focus();\n            return;\n        }\n        // The booleans above are verbose for readability, but code executation\n        // won't actually reach here.\n    }\n    getFirstAndLastFocusableChildren() {\n        if (!this.treewalker) {\n            return [null, null];\n        }\n        let firstFocusableChild = null;\n        let lastFocusableChild = null;\n        // Reset the current node back to the root host element.\n        this.treewalker.currentNode = this.treewalker.root;\n        while (this.treewalker.nextNode()) {\n            // Cast as Element since the TreeWalker filter only accepts Elements.\n            const nextChild = this.treewalker.currentNode;\n            if (!isFocusable(nextChild)) {\n                continue;\n            }\n            if (!firstFocusableChild) {\n                firstFocusableChild = nextChild;\n            }\n            lastFocusableChild = nextChild;\n        }\n        // We set lastFocusableChild immediately after finding a\n        // firstFocusableChild, which means the pair is either both null or both\n        // non-null. Cast since TypeScript does not recognize this.\n        return [firstFocusableChild, lastFocusableChild];\n    }\n}\n__decorate([\n    property({ type: Boolean })\n], Dialog.prototype, \"open\", null);\n__decorate([\n    property({ type: Boolean })\n], Dialog.prototype, \"quick\", void 0);\n__decorate([\n    property({ attribute: false })\n], Dialog.prototype, \"returnValue\", void 0);\n__decorate([\n    property()\n], Dialog.prototype, \"type\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'no-focus-trap' })\n], Dialog.prototype, \"noFocusTrap\", void 0);\n__decorate([\n    query('dialog')\n], Dialog.prototype, \"dialog\", void 0);\n__decorate([\n    query('.scrim')\n], Dialog.prototype, \"scrim\", void 0);\n__decorate([\n    query('.container')\n], Dialog.prototype, \"container\", void 0);\n__decorate([\n    query('.headline')\n], Dialog.prototype, \"headline\", void 0);\n__decorate([\n    query('.content')\n], Dialog.prototype, \"content\", void 0);\n__decorate([\n    query('.actions')\n], Dialog.prototype, \"actions\", void 0);\n__decorate([\n    state()\n], Dialog.prototype, \"isAtScrollTop\", void 0);\n__decorate([\n    state()\n], Dialog.prototype, \"isAtScrollBottom\", void 0);\n__decorate([\n    query('.scroller')\n], Dialog.prototype, \"scroller\", void 0);\n__decorate([\n    query('.top.anchor')\n], Dialog.prototype, \"topAnchor\", void 0);\n__decorate([\n    query('.bottom.anchor')\n], Dialog.prototype, \"bottomAnchor\", void 0);\n__decorate([\n    query('.focus-trap')\n], Dialog.prototype, \"firstFocusTrap\", void 0);\n__decorate([\n    state()\n], Dialog.prototype, \"hasHeadline\", void 0);\n__decorate([\n    state()\n], Dialog.prototype, \"hasActions\", void 0);\n__decorate([\n    state()\n], Dialog.prototype, \"hasIcon\", void 0);\nfunction isFocusable(element) {\n    // Check if the element is a known built-in focusable element:\n    // - <a> and <area> with `href` attributes.\n    // - Form controls that are not disabled.\n    // - `contenteditable` elements.\n    // - Anything with a non-negative `tabindex`.\n    const knownFocusableElements = ':is(button,input,select,textarea,object,:is(a,area)[href],[tabindex],[contenteditable=true])';\n    const notDisabled = ':not(:disabled,[disabled])';\n    const notNegativeTabIndex = ':not([tabindex^=\"-\"])';\n    if (element.matches(knownFocusableElements + notDisabled + notNegativeTabIndex)) {\n        return true;\n    }\n    const isCustomElement = element.localName.includes('-');\n    if (!isCustomElement) {\n        return false;\n    }\n    // If a custom element does not have a tabindex, it may still be focusable\n    // if it delegates focus with a shadow root. We also need to check again if\n    // the custom element is a disabled form control.\n    if (!element.matches(notDisabled)) {\n        return false;\n    }\n    return element.shadowRoot?.delegatesFocus ?? false;\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./dialog/internal/dialog-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{border-start-start-radius:var(--md-dialog-container-shape-start-start, var(--md-dialog-container-shape, var(--md-sys-shape-corner-extra-large, 28px)));border-start-end-radius:var(--md-dialog-container-shape-start-end, var(--md-dialog-container-shape, var(--md-sys-shape-corner-extra-large, 28px)));border-end-end-radius:var(--md-dialog-container-shape-end-end, var(--md-dialog-container-shape, var(--md-sys-shape-corner-extra-large, 28px)));border-end-start-radius:var(--md-dialog-container-shape-end-start, var(--md-dialog-container-shape, var(--md-sys-shape-corner-extra-large, 28px)));display:contents;margin:auto;max-height:min(560px,100% - 48px);max-width:min(560px,100% - 48px);min-height:140px;min-width:280px;position:fixed;height:fit-content;width:fit-content}dialog{background:rgba(0,0,0,0);border:none;border-radius:inherit;flex-direction:column;height:inherit;margin:inherit;max-height:inherit;max-width:inherit;min-height:inherit;min-width:inherit;outline:none;overflow:visible;padding:0;width:inherit}dialog[open]{display:flex}::backdrop{background:none}.scrim{background:var(--md-sys-color-scrim, #000);display:none;inset:0;opacity:32%;pointer-events:none;position:fixed;z-index:1}:host([open]) .scrim{display:flex}h2{all:unset;align-self:stretch}.headline{align-items:center;color:var(--md-dialog-headline-color, var(--md-sys-color-on-surface, #1d1b20));display:flex;flex-direction:column;font-family:var(--md-dialog-headline-font, var(--md-sys-typescale-headline-small-font, var(--md-ref-typeface-brand, Roboto)));font-size:var(--md-dialog-headline-size, var(--md-sys-typescale-headline-small-size, 1.5rem));line-height:var(--md-dialog-headline-line-height, var(--md-sys-typescale-headline-small-line-height, 2rem));font-weight:var(--md-dialog-headline-weight, var(--md-sys-typescale-headline-small-weight, var(--md-ref-typeface-weight-regular, 400)));position:relative}slot[name=headline]::slotted(*){align-items:center;align-self:stretch;box-sizing:border-box;display:flex;gap:8px;padding:24px 24px 0}.icon{display:flex}slot[name=icon]::slotted(*){color:var(--md-dialog-icon-color, var(--md-sys-color-secondary, #625b71));fill:currentColor;font-size:var(--md-dialog-icon-size, 24px);margin-top:24px;height:var(--md-dialog-icon-size, 24px);width:var(--md-dialog-icon-size, 24px)}.has-icon slot[name=headline]::slotted(*){justify-content:center;padding-top:16px}.scrollable slot[name=headline]::slotted(*){padding-bottom:16px}.scrollable.has-headline slot[name=content]::slotted(*){padding-top:8px}.container{border-radius:inherit;display:flex;flex-direction:column;flex-grow:1;overflow:hidden;position:relative;transform-origin:top}.container::before{background:var(--md-dialog-container-color, var(--md-sys-color-surface-container-high, #ece6f0));border-radius:inherit;content:\"\";inset:0;position:absolute}.scroller{display:flex;flex:1;flex-direction:column;overflow:hidden;z-index:1}.scrollable .scroller{overflow-y:scroll}.content{color:var(--md-dialog-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));font-family:var(--md-dialog-supporting-text-font, var(--md-sys-typescale-body-medium-font, var(--md-ref-typeface-plain, Roboto)));font-size:var(--md-dialog-supporting-text-size, var(--md-sys-typescale-body-medium-size, 0.875rem));line-height:var(--md-dialog-supporting-text-line-height, var(--md-sys-typescale-body-medium-line-height, 1.25rem));flex:1;font-weight:var(--md-dialog-supporting-text-weight, var(--md-sys-typescale-body-medium-weight, var(--md-ref-typeface-weight-regular, 400)));height:min-content;position:relative}slot[name=content]::slotted(*){box-sizing:border-box;padding:24px}.anchor{position:absolute}.top.anchor{top:0}.bottom.anchor{bottom:0}.actions{position:relative}slot[name=actions]::slotted(*){box-sizing:border-box;display:flex;gap:8px;justify-content:flex-end;padding:16px 24px 24px}.has-actions slot[name=content]::slotted(*){padding-bottom:8px}md-divider{display:none;position:absolute}.has-headline.show-top-divider .headline md-divider,.has-actions.show-bottom-divider .actions md-divider{display:flex}.headline md-divider{bottom:0}.actions md-divider{top:0}@media(forced-colors: active){dialog{outline:2px solid WindowText}}\n`;\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { Dialog } from './internal/dialog.js';\nimport { styles } from './internal/dialog-styles.js';\n/**\n * @summary Dialogs can require an action, communicate information, or help\n * users accomplish a task. There are two types of dialogs: basic and\n * full-screen.\n *\n * @description\n * A dialog is a modal window that appears in front of app content to provide\n * critical information or ask for a decision. Dialogs disable all app\n * functionality when they appear, and remain on screen until confirmed,\n * dismissed, or a required action has been taken.\n *\n * Dialogs are purposefully interruptive, so they should be used sparingly.\n * A less disruptive alternative is to use a menu, which provides options\n * without interrupting a user’s experience.\n *\n * On mobile devices only, complex dialogs should be displayed fullscreen.\n *\n * __Example usages:__\n * - Common use cases for basic dialogs include alerts, quick selection, and\n * confirmation.\n * - More complex dialogs may contain actions that require a series of tasks\n * to complete. One example is creating a calendar entry with the event title,\n * date, location, and time.\n *\n * @final\n * @suppress {visibility}\n */\nexport let MdDialog = class MdDialog extends Dialog {\n};\nMdDialog.styles = [styles];\nMdDialog = __decorate([\n    customElement('md-dialog')\n], MdDialog);\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport '../../elevation/elevation.js';\nimport '../../focus/md-focus-ring.js';\nimport '../../ripple/ripple.js';\nimport { html, LitElement, nothing } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { mixinDelegatesAria } from '../../internal/aria/delegate.js';\n// Separate variable needed for closure.\nconst fabBaseClass = mixinDelegatesAria(LitElement);\n// tslint:disable-next-line:enforce-comments-on-exported-symbols\nexport class SharedFab extends fabBaseClass {\n    constructor() {\n        super(...arguments);\n        /**\n         * The size of the FAB.\n         *\n         * NOTE: Branded FABs cannot be sized to `small`, and Extended FABs do not\n         * have different sizes.\n         */\n        this.size = 'medium';\n        /**\n         * The text to display on the FAB.\n         */\n        this.label = '';\n        /**\n         * Lowers the FAB's elevation.\n         */\n        this.lowered = false;\n    }\n    render() {\n        // Needed for closure conformance\n        const { ariaLabel } = this;\n        return html `\n      <button\n        class=\"fab ${classMap(this.getRenderClasses())}\"\n        aria-label=${ariaLabel || nothing}>\n        <md-elevation part=\"elevation\"></md-elevation>\n        <md-focus-ring part=\"focus-ring\"></md-focus-ring>\n        <md-ripple class=\"ripple\"></md-ripple>\n        ${this.renderTouchTarget()} ${this.renderIcon()} ${this.renderLabel()}\n      </button>\n    `;\n    }\n    getRenderClasses() {\n        const isExtended = !!this.label;\n        return {\n            'lowered': this.lowered,\n            'small': this.size === 'small' && !isExtended,\n            'large': this.size === 'large' && !isExtended,\n            'extended': isExtended,\n        };\n    }\n    renderTouchTarget() {\n        return html `<div class=\"touch-target\"></div>`;\n    }\n    renderLabel() {\n        return this.label ? html `<span class=\"label\">${this.label}</span>` : '';\n    }\n    renderIcon() {\n        const { ariaLabel } = this;\n        return html `<span class=\"icon\">\n      <slot\n        name=\"icon\"\n        aria-hidden=${ariaLabel || this.label\n            ? 'true'\n            : nothing}>\n        <span></span>\n      </slot>\n    </span>`;\n    }\n}\n/** @nocollapse */\nSharedFab.shadowRootOptions = {\n    mode: 'open',\n    delegatesFocus: true,\n};\n__decorate([\n    property({ reflect: true })\n], SharedFab.prototype, \"size\", void 0);\n__decorate([\n    property()\n], SharedFab.prototype, \"label\", void 0);\n__decorate([\n    property({ type: Boolean })\n], SharedFab.prototype, \"lowered\", void 0);\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { property } from 'lit/decorators.js';\nimport { SharedFab } from './shared.js';\n// tslint:disable-next-line:enforce-comments-on-exported-symbols\nexport class Fab extends SharedFab {\n    constructor() {\n        super(...arguments);\n        /**\n         * The FAB color variant to render.\n         */\n        this.variant = 'surface';\n    }\n    getRenderClasses() {\n        return {\n            ...super.getRenderClasses(),\n            'primary': this.variant === 'primary',\n            'secondary': this.variant === 'secondary',\n            'tertiary': this.variant === 'tertiary',\n        };\n    }\n}\n__decorate([\n    property()\n], Fab.prototype, \"variant\", void 0);\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./fab/internal/fab-branded-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{--_container-color: var(--md-fab-branded-container-color, var(--md-sys-color-surface-container-high, #ece6f0));--_container-elevation: var(--md-fab-branded-container-elevation, 3);--_container-height: var(--md-fab-branded-container-height, 56px);--_container-shadow-color: var(--md-fab-branded-container-shadow-color, var(--md-sys-color-shadow, #000));--_container-width: var(--md-fab-branded-container-width, 56px);--_focus-container-elevation: var(--md-fab-branded-focus-container-elevation, 3);--_hover-container-elevation: var(--md-fab-branded-hover-container-elevation, 4);--_hover-state-layer-color: var(--md-fab-branded-hover-state-layer-color, var(--md-sys-color-primary, #6750a4));--_hover-state-layer-opacity: var(--md-fab-branded-hover-state-layer-opacity, 0.08);--_icon-size: var(--md-fab-branded-icon-size, 36px);--_lowered-container-color: var(--md-fab-branded-lowered-container-color, var(--md-sys-color-surface-container-low, #f7f2fa));--_lowered-container-elevation: var(--md-fab-branded-lowered-container-elevation, 1);--_lowered-focus-container-elevation: var(--md-fab-branded-lowered-focus-container-elevation, 1);--_lowered-hover-container-elevation: var(--md-fab-branded-lowered-hover-container-elevation, 2);--_lowered-pressed-container-elevation: var(--md-fab-branded-lowered-pressed-container-elevation, 1);--_pressed-container-elevation: var(--md-fab-branded-pressed-container-elevation, 3);--_pressed-state-layer-color: var(--md-fab-branded-pressed-state-layer-color, var(--md-sys-color-primary, #6750a4));--_pressed-state-layer-opacity: var(--md-fab-branded-pressed-state-layer-opacity, 0.12);--_focus-label-text-color: var(--md-fab-branded-focus-label-text-color, var(--md-sys-color-primary, #6750a4));--_hover-label-text-color: var(--md-fab-branded-hover-label-text-color, var(--md-sys-color-primary, #6750a4));--_label-text-color: var(--md-fab-branded-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_label-text-font: var(--md-fab-branded-label-text-font, var(--md-sys-typescale-label-large-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-size: var(--md-fab-branded-label-text-size, var(--md-sys-typescale-label-large-size, 0.875rem));--_label-text-line-height: var(--md-fab-branded-label-text-line-height, var(--md-sys-typescale-label-large-line-height, 1.25rem));--_label-text-weight: var(--md-fab-branded-label-text-weight, var(--md-sys-typescale-label-large-weight, var(--md-ref-typeface-weight-medium, 500)));--_large-container-height: var(--md-fab-branded-large-container-height, 96px);--_large-container-width: var(--md-fab-branded-large-container-width, 96px);--_large-icon-size: var(--md-fab-branded-large-icon-size, 48px);--_pressed-label-text-color: var(--md-fab-branded-pressed-label-text-color, var(--md-sys-color-primary, #6750a4));--_container-shape-start-start: var(--md-fab-branded-container-shape-start-start, var(--md-fab-branded-container-shape, var(--md-sys-shape-corner-large, 16px)));--_container-shape-start-end: var(--md-fab-branded-container-shape-start-end, var(--md-fab-branded-container-shape, var(--md-sys-shape-corner-large, 16px)));--_container-shape-end-end: var(--md-fab-branded-container-shape-end-end, var(--md-fab-branded-container-shape, var(--md-sys-shape-corner-large, 16px)));--_container-shape-end-start: var(--md-fab-branded-container-shape-end-start, var(--md-fab-branded-container-shape, var(--md-sys-shape-corner-large, 16px)));--_large-container-shape-start-start: var(--md-fab-branded-large-container-shape-start-start, var(--md-fab-branded-large-container-shape, var(--md-sys-shape-corner-extra-large, 28px)));--_large-container-shape-start-end: var(--md-fab-branded-large-container-shape-start-end, var(--md-fab-branded-large-container-shape, var(--md-sys-shape-corner-extra-large, 28px)));--_large-container-shape-end-end: var(--md-fab-branded-large-container-shape-end-end, var(--md-fab-branded-large-container-shape, var(--md-sys-shape-corner-extra-large, 28px)));--_large-container-shape-end-start: var(--md-fab-branded-large-container-shape-end-start, var(--md-fab-branded-large-container-shape, var(--md-sys-shape-corner-extra-large, 28px)))}\n`;\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./fab/internal/forced-colors-styles.css.\nimport { css } from 'lit';\nexport const styles = css `@media(forced-colors: active){.fab{border:1px solid ButtonText}.fab.extended{padding-inline-start:15px;padding-inline-end:19px}md-focus-ring{--md-focus-ring-outward-offset: 3px}}\n`;\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./fab/internal/shared-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{--md-ripple-hover-opacity: var(--_hover-state-layer-opacity);--md-ripple-pressed-opacity: var(--_pressed-state-layer-opacity);display:inline-flex;-webkit-tap-highlight-color:rgba(0,0,0,0)}:host([size=medium][touch-target=wrapper]){margin:max(0px,48px - var(--_container-height))}:host([size=large][touch-target=wrapper]){margin:max(0px,48px - var(--_large-container-height))}.fab,.icon,.icon ::slotted(*){display:flex}.fab{align-items:center;justify-content:center;vertical-align:middle;padding:0;position:relative;height:var(--_container-height);transition-property:background-color;border-width:0px;outline:none;z-index:0;text-transform:inherit;--md-elevation-level: var(--_container-elevation);--md-elevation-shadow-color: var(--_container-shadow-color);background-color:var(--_container-color);--md-ripple-hover-color: var(--_hover-state-layer-color);--md-ripple-pressed-color: var(--_pressed-state-layer-color)}.fab.extended{width:inherit;box-sizing:border-box;padding-inline-start:16px;padding-inline-end:20px}.fab:not(.extended){width:var(--_container-width)}.fab.large{width:var(--_large-container-width);height:var(--_large-container-height)}.fab.large .icon ::slotted(*){width:var(--_large-icon-size);height:var(--_large-icon-size);font-size:var(--_large-icon-size)}.fab.large,.fab.large .ripple{border-start-start-radius:var(--_large-container-shape-start-start);border-start-end-radius:var(--_large-container-shape-start-end);border-end-start-radius:var(--_large-container-shape-end-start);border-end-end-radius:var(--_large-container-shape-end-end)}.fab.large md-focus-ring{--md-focus-ring-shape-start-start: var(--_large-container-shape-start-start);--md-focus-ring-shape-start-end: var(--_large-container-shape-start-end);--md-focus-ring-shape-end-end: var(--_large-container-shape-end-end);--md-focus-ring-shape-end-start: var(--_large-container-shape-end-start)}.fab:focus{--md-elevation-level: var(--_focus-container-elevation)}.fab:hover{--md-elevation-level: var(--_hover-container-elevation)}.fab:active{--md-elevation-level: var(--_pressed-container-elevation)}.fab.lowered{background-color:var(--_lowered-container-color);--md-elevation-level: var(--_lowered-container-elevation)}.fab.lowered:focus{--md-elevation-level: var(--_lowered-focus-container-elevation)}.fab.lowered:hover{--md-elevation-level: var(--_lowered-hover-container-elevation)}.fab.lowered:active{--md-elevation-level: var(--_lowered-pressed-container-elevation)}.fab .label{color:var(--_label-text-color)}.fab:hover .fab .label{color:var(--_hover-label-text-color)}.fab:focus .fab .label{color:var(--_focus-label-text-color)}.fab:active .fab .label{color:var(--_pressed-label-text-color)}.label{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;font-family:var(--_label-text-font);font-size:var(--_label-text-size);line-height:var(--_label-text-line-height);font-weight:var(--_label-text-weight)}.fab.extended .icon ::slotted(*){margin-inline-end:12px}.ripple{overflow:hidden}.ripple,md-elevation{z-index:-1}.touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}:host([touch-target=none]) .touch-target{display:none}md-elevation,.fab{transition-duration:280ms;transition-timing-function:cubic-bezier(0.2, 0, 0, 1)}.fab,.ripple{border-start-start-radius:var(--_container-shape-start-start);border-start-end-radius:var(--_container-shape-start-end);border-end-start-radius:var(--_container-shape-end-start);border-end-end-radius:var(--_container-shape-end-end)}md-focus-ring{--md-focus-ring-shape-start-start: var(--_container-shape-start-start);--md-focus-ring-shape-start-end: var(--_container-shape-start-end);--md-focus-ring-shape-end-end: var(--_container-shape-end-end);--md-focus-ring-shape-end-start: var(--_container-shape-end-start)}.icon ::slotted(*){width:var(--_icon-size);height:var(--_icon-size);font-size:var(--_icon-size)}\n`;\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { Fab } from './internal/fab.js';\nimport { styles } from './internal/fab-branded-styles.js';\nimport { styles as forcedColors } from './internal/forced-colors-styles.js';\nimport { styles as sharedStyles } from './internal/shared-styles.js';\n/**\n * @summary Floating action buttons (FABs) help people take primary actions.\n * They’re used to represent the most important action on a screen, such as\n * Create or Reply.\n *\n * @description\n * __Emphasis:__ High emphasis – For the primary, most important, or most common\n * action on a screen\n *\n * __Rationale:__ The FAB remains the default component for a screen’s primary\n * action. It comes in three sizes: small FAB, FAB, and large FAB. The extended\n * FAB’s wider format and text label give it more visual prominence than a  FAB.\n * It’s often used on larger screens where a FAB would seem too small. Branded\n * FABs are used to specifically call attention to branded logo icons.\n *\n * __Example usages:__\n * - FAB\n *   - Create\n *   - Compose\n * - Extended FAB\n *   - Create\n *   - Compose\n *   - New Thread\n *   - New File\n *\n * @final\n * @suppress {visibility}\n */\nexport let MdBrandedFab = class MdBrandedFab extends Fab {\n    getRenderClasses() {\n        return {\n            ...super.getRenderClasses(),\n            'primary': false,\n            'secondary': false,\n            'tertiary': false,\n            'small': false,\n        };\n    }\n};\nMdBrandedFab.styles = [\n    sharedStyles,\n    styles,\n    forcedColors,\n];\nMdBrandedFab = __decorate([\n    customElement('md-branded-fab')\n], MdBrandedFab);\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./fab/internal/fab-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{--_container-color: var(--md-fab-container-color, var(--md-sys-color-surface-container-high, #ece6f0));--_container-elevation: var(--md-fab-container-elevation, 3);--_container-height: var(--md-fab-container-height, 56px);--_container-shadow-color: var(--md-fab-container-shadow-color, var(--md-sys-color-shadow, #000));--_container-width: var(--md-fab-container-width, 56px);--_focus-container-elevation: var(--md-fab-focus-container-elevation, 3);--_focus-icon-color: var(--md-fab-focus-icon-color, var(--md-sys-color-primary, #6750a4));--_hover-container-elevation: var(--md-fab-hover-container-elevation, 4);--_hover-icon-color: var(--md-fab-hover-icon-color, var(--md-sys-color-primary, #6750a4));--_hover-state-layer-color: var(--md-fab-hover-state-layer-color, var(--md-sys-color-primary, #6750a4));--_hover-state-layer-opacity: var(--md-fab-hover-state-layer-opacity, 0.08);--_icon-color: var(--md-fab-icon-color, var(--md-sys-color-primary, #6750a4));--_icon-size: var(--md-fab-icon-size, 24px);--_lowered-container-color: var(--md-fab-lowered-container-color, var(--md-sys-color-surface-container-low, #f7f2fa));--_lowered-container-elevation: var(--md-fab-lowered-container-elevation, 1);--_lowered-focus-container-elevation: var(--md-fab-lowered-focus-container-elevation, 1);--_lowered-hover-container-elevation: var(--md-fab-lowered-hover-container-elevation, 2);--_lowered-pressed-container-elevation: var(--md-fab-lowered-pressed-container-elevation, 1);--_pressed-container-elevation: var(--md-fab-pressed-container-elevation, 3);--_pressed-icon-color: var(--md-fab-pressed-icon-color, var(--md-sys-color-primary, #6750a4));--_pressed-state-layer-color: var(--md-fab-pressed-state-layer-color, var(--md-sys-color-primary, #6750a4));--_pressed-state-layer-opacity: var(--md-fab-pressed-state-layer-opacity, 0.12);--_focus-label-text-color: var(--md-fab-focus-label-text-color, var(--md-sys-color-primary, #6750a4));--_hover-label-text-color: var(--md-fab-hover-label-text-color, var(--md-sys-color-primary, #6750a4));--_label-text-color: var(--md-fab-label-text-color, var(--md-sys-color-primary, #6750a4));--_label-text-font: var(--md-fab-label-text-font, var(--md-sys-typescale-label-large-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-fab-label-text-line-height, var(--md-sys-typescale-label-large-line-height, 1.25rem));--_label-text-size: var(--md-fab-label-text-size, var(--md-sys-typescale-label-large-size, 0.875rem));--_label-text-weight: var(--md-fab-label-text-weight, var(--md-sys-typescale-label-large-weight, var(--md-ref-typeface-weight-medium, 500)));--_large-container-height: var(--md-fab-large-container-height, 96px);--_large-container-width: var(--md-fab-large-container-width, 96px);--_large-icon-size: var(--md-fab-large-icon-size, 36px);--_pressed-label-text-color: var(--md-fab-pressed-label-text-color, var(--md-sys-color-primary, #6750a4));--_primary-container-color: var(--md-fab-primary-container-color, var(--md-sys-color-primary-container, #eaddff));--_primary-focus-icon-color: var(--md-fab-primary-focus-icon-color, var(--md-sys-color-on-primary-container, #21005d));--_primary-focus-label-text-color: var(--md-fab-primary-focus-label-text-color, var(--md-sys-color-on-primary-container, #21005d));--_primary-hover-icon-color: var(--md-fab-primary-hover-icon-color, var(--md-sys-color-on-primary-container, #21005d));--_primary-hover-label-text-color: var(--md-fab-primary-hover-label-text-color, var(--md-sys-color-on-primary-container, #21005d));--_primary-hover-state-layer-color: var(--md-fab-primary-hover-state-layer-color, var(--md-sys-color-on-primary-container, #21005d));--_primary-icon-color: var(--md-fab-primary-icon-color, var(--md-sys-color-on-primary-container, #21005d));--_primary-label-text-color: var(--md-fab-primary-label-text-color, var(--md-sys-color-on-primary-container, #21005d));--_primary-pressed-icon-color: var(--md-fab-primary-pressed-icon-color, var(--md-sys-color-on-primary-container, #21005d));--_primary-pressed-label-text-color: var(--md-fab-primary-pressed-label-text-color, var(--md-sys-color-on-primary-container, #21005d));--_primary-pressed-state-layer-color: var(--md-fab-primary-pressed-state-layer-color, var(--md-sys-color-on-primary-container, #21005d));--_secondary-container-color: var(--md-fab-secondary-container-color, var(--md-sys-color-secondary-container, #e8def8));--_secondary-focus-icon-color: var(--md-fab-secondary-focus-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_secondary-focus-label-text-color: var(--md-fab-secondary-focus-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b));--_secondary-hover-icon-color: var(--md-fab-secondary-hover-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_secondary-hover-label-text-color: var(--md-fab-secondary-hover-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b));--_secondary-hover-state-layer-color: var(--md-fab-secondary-hover-state-layer-color, var(--md-sys-color-on-secondary-container, #1d192b));--_secondary-icon-color: var(--md-fab-secondary-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_secondary-label-text-color: var(--md-fab-secondary-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b));--_secondary-pressed-icon-color: var(--md-fab-secondary-pressed-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_secondary-pressed-label-text-color: var(--md-fab-secondary-pressed-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b));--_secondary-pressed-state-layer-color: var(--md-fab-secondary-pressed-state-layer-color, var(--md-sys-color-on-secondary-container, #1d192b));--_small-container-height: var(--md-fab-small-container-height, 40px);--_small-container-width: var(--md-fab-small-container-width, 40px);--_small-icon-size: var(--md-fab-small-icon-size, 24px);--_tertiary-container-color: var(--md-fab-tertiary-container-color, var(--md-sys-color-tertiary-container, #ffd8e4));--_tertiary-focus-icon-color: var(--md-fab-tertiary-focus-icon-color, var(--md-sys-color-on-tertiary-container, #31111d));--_tertiary-focus-label-text-color: var(--md-fab-tertiary-focus-label-text-color, var(--md-sys-color-on-tertiary-container, #31111d));--_tertiary-hover-icon-color: var(--md-fab-tertiary-hover-icon-color, var(--md-sys-color-on-tertiary-container, #31111d));--_tertiary-hover-label-text-color: var(--md-fab-tertiary-hover-label-text-color, var(--md-sys-color-on-tertiary-container, #31111d));--_tertiary-hover-state-layer-color: var(--md-fab-tertiary-hover-state-layer-color, var(--md-sys-color-on-tertiary-container, #31111d));--_tertiary-icon-color: var(--md-fab-tertiary-icon-color, var(--md-sys-color-on-tertiary-container, #31111d));--_tertiary-label-text-color: var(--md-fab-tertiary-label-text-color, var(--md-sys-color-on-tertiary-container, #31111d));--_tertiary-pressed-icon-color: var(--md-fab-tertiary-pressed-icon-color, var(--md-sys-color-on-tertiary-container, #31111d));--_tertiary-pressed-label-text-color: var(--md-fab-tertiary-pressed-label-text-color, var(--md-sys-color-on-tertiary-container, #31111d));--_tertiary-pressed-state-layer-color: var(--md-fab-tertiary-pressed-state-layer-color, var(--md-sys-color-on-tertiary-container, #31111d));--_container-shape-start-start: var(--md-fab-container-shape-start-start, var(--md-fab-container-shape, var(--md-sys-shape-corner-large, 16px)));--_container-shape-start-end: var(--md-fab-container-shape-start-end, var(--md-fab-container-shape, var(--md-sys-shape-corner-large, 16px)));--_container-shape-end-end: var(--md-fab-container-shape-end-end, var(--md-fab-container-shape, var(--md-sys-shape-corner-large, 16px)));--_container-shape-end-start: var(--md-fab-container-shape-end-start, var(--md-fab-container-shape, var(--md-sys-shape-corner-large, 16px)));--_large-container-shape-start-start: var(--md-fab-large-container-shape-start-start, var(--md-fab-large-container-shape, var(--md-sys-shape-corner-extra-large, 28px)));--_large-container-shape-start-end: var(--md-fab-large-container-shape-start-end, var(--md-fab-large-container-shape, var(--md-sys-shape-corner-extra-large, 28px)));--_large-container-shape-end-end: var(--md-fab-large-container-shape-end-end, var(--md-fab-large-container-shape, var(--md-sys-shape-corner-extra-large, 28px)));--_large-container-shape-end-start: var(--md-fab-large-container-shape-end-start, var(--md-fab-large-container-shape, var(--md-sys-shape-corner-extra-large, 28px)));--_small-container-shape-start-start: var(--md-fab-small-container-shape-start-start, var(--md-fab-small-container-shape, var(--md-sys-shape-corner-medium, 12px)));--_small-container-shape-start-end: var(--md-fab-small-container-shape-start-end, var(--md-fab-small-container-shape, var(--md-sys-shape-corner-medium, 12px)));--_small-container-shape-end-end: var(--md-fab-small-container-shape-end-end, var(--md-fab-small-container-shape, var(--md-sys-shape-corner-medium, 12px)));--_small-container-shape-end-start: var(--md-fab-small-container-shape-end-start, var(--md-fab-small-container-shape, var(--md-sys-shape-corner-medium, 12px)));cursor:pointer}:host([size=small][touch-target=wrapper]){margin:max(0px,48px - var(--_small-container-height))}.fab{cursor:inherit}.fab .icon ::slotted(*){color:var(--_icon-color)}.fab:focus{color:var(--_focus-icon-color)}.fab:hover{color:var(--_hover-icon-color)}.fab:active{color:var(--_pressed-icon-color)}.fab.primary{background-color:var(--_primary-container-color);--md-ripple-hover-color: var(--_primary-hover-state-layer-color);--md-ripple-pressed-color: var(--_primary-pressed-state-layer-color)}.fab.primary .icon ::slotted(*){color:var(--_primary-icon-color)}.fab.primary:focus{color:var(--_primary-focus-icon-color)}.fab.primary:hover{color:var(--_primary-hover-icon-color)}.fab.primary:active{color:var(--_primary-pressed-icon-color)}.fab.primary .label{color:var(--_primary-label-text-color)}.fab:hover .fab.primary .label{color:var(--_primary-hover-label-text-color)}.fab:focus .fab.primary .label{color:var(--_primary-focus-label-text-color)}.fab:active .fab.primary .label{color:var(--_primary-pressed-label-text-color)}.fab.secondary{background-color:var(--_secondary-container-color);--md-ripple-hover-color: var(--_secondary-hover-state-layer-color);--md-ripple-pressed-color: var(--_secondary-pressed-state-layer-color)}.fab.secondary .icon ::slotted(*){color:var(--_secondary-icon-color)}.fab.secondary:focus{color:var(--_secondary-focus-icon-color)}.fab.secondary:hover{color:var(--_secondary-hover-icon-color)}.fab.secondary:active{color:var(--_secondary-pressed-icon-color)}.fab.secondary .label{color:var(--_secondary-label-text-color)}.fab:hover .fab.secondary .label{color:var(--_secondary-hover-label-text-color)}.fab:focus .fab.secondary .label{color:var(--_secondary-focus-label-text-color)}.fab:active .fab.secondary .label{color:var(--_secondary-pressed-label-text-color)}.fab.tertiary{background-color:var(--_tertiary-container-color);--md-ripple-hover-color: var(--_tertiary-hover-state-layer-color);--md-ripple-pressed-color: var(--_tertiary-pressed-state-layer-color)}.fab.tertiary .icon ::slotted(*){color:var(--_tertiary-icon-color)}.fab.tertiary:focus{color:var(--_tertiary-focus-icon-color)}.fab.tertiary:hover{color:var(--_tertiary-hover-icon-color)}.fab.tertiary:active{color:var(--_tertiary-pressed-icon-color)}.fab.tertiary .label{color:var(--_tertiary-label-text-color)}.fab:hover .fab.tertiary .label{color:var(--_tertiary-hover-label-text-color)}.fab:focus .fab.tertiary .label{color:var(--_tertiary-focus-label-text-color)}.fab:active .fab.tertiary .label{color:var(--_tertiary-pressed-label-text-color)}.fab.extended slot span{padding-inline-start:4px}.fab.small{width:var(--_small-container-width);height:var(--_small-container-height)}.fab.small .icon ::slotted(*){width:var(--_small-icon-size);height:var(--_small-icon-size);font-size:var(--_small-icon-size)}.fab.small,.fab.small .ripple{border-start-start-radius:var(--_small-container-shape-start-start);border-start-end-radius:var(--_small-container-shape-start-end);border-end-start-radius:var(--_small-container-shape-end-start);border-end-end-radius:var(--_small-container-shape-end-end)}.fab.small md-focus-ring{--md-focus-ring-shape-start-start: var(--_small-container-shape-start-start);--md-focus-ring-shape-start-end: var(--_small-container-shape-start-end);--md-focus-ring-shape-end-end: var(--_small-container-shape-end-end);--md-focus-ring-shape-end-start: var(--_small-container-shape-end-start)}\n`;\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { Fab } from './internal/fab.js';\nimport { styles } from './internal/fab-styles.js';\nimport { styles as forcedColors } from './internal/forced-colors-styles.js';\nimport { styles as sharedStyles } from './internal/shared-styles.js';\n/**\n * @summary Floating action buttons (FABs) help people take primary actions.\n * They’re used to represent the most important action on a screen, such as\n * Create or Reply.\n *\n * @description\n * __Emphasis:__ High emphasis – For the primary, most important, or most common\n * action on a screen\n *\n * __Rationale:__ The FAB remains the default component for a screen’s primary\n * action. It comes in three sizes: small FAB, FAB, and large FAB. The extended\n * FAB’s wider format and text label give it more visual prominence than a  FAB.\n * It’s often used on larger screens where a FAB would seem too small.\n *\n * __Example usages:__\n * - FAB\n *   - Create\n *   - Compose\n * - Extended FAB\n *   - Create\n *   - Compose\n *   - New Thread\n *   - New File\n *\n * @final\n * @suppress {visibility}\n */\nexport let MdFab = class MdFab extends Fab {\n};\nMdFab.styles = [sharedStyles, styles, forcedColors];\nMdFab = __decorate([\n    customElement('md-fab')\n], MdFab);\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { html, LitElement, nothing, render, } from 'lit';\nimport { property, query, queryAssignedElements, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { EASING } from '../../internal/motion/animation.js';\n/**\n * A field component.\n */\nexport class Field extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.disabled = false;\n        this.error = false;\n        this.focused = false;\n        this.label = '';\n        this.noAsterisk = false;\n        this.populated = false;\n        this.required = false;\n        this.resizable = false;\n        this.supportingText = '';\n        this.errorText = '';\n        this.count = -1;\n        this.max = -1;\n        /**\n         * Whether or not the field has leading content.\n         */\n        this.hasStart = false;\n        /**\n         * Whether or not the field has trailing content.\n         */\n        this.hasEnd = false;\n        this.isAnimating = false;\n        /**\n         * When set to true, the error text's `role=\"alert\"` will be removed, then\n         * re-added after an animation frame. This will re-announce an error message\n         * to screen readers.\n         */\n        this.refreshErrorAlert = false;\n        this.disableTransitions = false;\n    }\n    get counterText() {\n        // Count and max are typed as number, but can be set to null when Lit removes\n        // their attributes. These getters coerce back to a number for calculations.\n        const countAsNumber = this.count ?? -1;\n        const maxAsNumber = this.max ?? -1;\n        // Counter does not show if count is negative, or max is negative or 0.\n        if (countAsNumber < 0 || maxAsNumber <= 0) {\n            return '';\n        }\n        return `${countAsNumber} / ${maxAsNumber}`;\n    }\n    get supportingOrErrorText() {\n        return this.error && this.errorText ? this.errorText : this.supportingText;\n    }\n    /**\n     * Re-announces the field's error supporting text to screen readers.\n     *\n     * Error text announces to screen readers anytime it is visible and changes.\n     * Use the method to re-announce the message when the text has not changed,\n     * but announcement is still needed (such as for `reportValidity()`).\n     */\n    reannounceError() {\n        this.refreshErrorAlert = true;\n    }\n    update(props) {\n        // Client-side property updates\n        const isDisabledChanging = props.has('disabled') && props.get('disabled') !== undefined;\n        if (isDisabledChanging) {\n            this.disableTransitions = true;\n        }\n        // When disabling, remove focus styles if focused.\n        if (this.disabled && this.focused) {\n            props.set('focused', true);\n            this.focused = false;\n        }\n        // Animate if focused or populated change.\n        this.animateLabelIfNeeded({\n            wasFocused: props.get('focused'),\n            wasPopulated: props.get('populated'),\n        });\n        super.update(props);\n    }\n    render() {\n        const floatingLabel = this.renderLabel(/*isFloating*/ true);\n        const restingLabel = this.renderLabel(/*isFloating*/ false);\n        const outline = this.renderOutline?.(floatingLabel);\n        const classes = {\n            'disabled': this.disabled,\n            'disable-transitions': this.disableTransitions,\n            'error': this.error && !this.disabled,\n            'focused': this.focused,\n            'with-start': this.hasStart,\n            'with-end': this.hasEnd,\n            'populated': this.populated,\n            'resizable': this.resizable,\n            'required': this.required,\n            'no-label': !this.label,\n        };\n        return html `\n      <div class=\"field ${classMap(classes)}\">\n        <div class=\"container-overflow\">\n          ${this.renderBackground?.()}\n          <slot name=\"container\"></slot>\n          ${this.renderStateLayer?.()} ${this.renderIndicator?.()} ${outline}\n          <div class=\"container\">\n            <div class=\"start\">\n              <slot name=\"start\"></slot>\n            </div>\n            <div class=\"middle\">\n              <div class=\"label-wrapper\">\n                ${restingLabel} ${outline ? nothing : floatingLabel}\n              </div>\n              <div class=\"content\">\n                <slot></slot>\n              </div>\n            </div>\n            <div class=\"end\">\n              <slot name=\"end\"></slot>\n            </div>\n          </div>\n        </div>\n        ${this.renderSupportingText()}\n      </div>\n    `;\n    }\n    updated(changed) {\n        if (changed.has('supportingText') ||\n            changed.has('errorText') ||\n            changed.has('count') ||\n            changed.has('max')) {\n            this.updateSlottedAriaDescribedBy();\n        }\n        if (this.refreshErrorAlert) {\n            // The past render cycle removed the role=\"alert\" from the error message.\n            // Re-add it after an animation frame to re-announce the error.\n            requestAnimationFrame(() => {\n                this.refreshErrorAlert = false;\n            });\n        }\n        if (this.disableTransitions) {\n            requestAnimationFrame(() => {\n                this.disableTransitions = false;\n            });\n        }\n    }\n    renderSupportingText() {\n        const { supportingOrErrorText, counterText } = this;\n        if (!supportingOrErrorText && !counterText) {\n            return nothing;\n        }\n        // Always render the supporting text span so that our `space-around`\n        // container puts the counter at the end.\n        const start = html `<span>${supportingOrErrorText}</span>`;\n        // Conditionally render counter so we don't render the extra `gap`.\n        // TODO(b/244473435): add aria-label and announcements\n        const end = counterText\n            ? html `<span class=\"counter\">${counterText}</span>`\n            : nothing;\n        // Announce if there is an error and error text visible.\n        // If refreshErrorAlert is true, do not announce. This will remove the\n        // role=\"alert\" attribute. Another render cycle will happen after an\n        // animation frame to re-add the role.\n        const shouldErrorAnnounce = this.error && this.errorText && !this.refreshErrorAlert;\n        const role = shouldErrorAnnounce ? 'alert' : nothing;\n        return html `\n      <div class=\"supporting-text\" role=${role}>${start}${end}</div>\n      <slot\n        name=\"aria-describedby\"\n        @slotchange=${this.updateSlottedAriaDescribedBy}></slot>\n    `;\n    }\n    updateSlottedAriaDescribedBy() {\n        for (const element of this.slottedAriaDescribedBy) {\n            render(html `${this.supportingOrErrorText} ${this.counterText}`, element);\n            element.setAttribute('hidden', '');\n        }\n    }\n    renderLabel(isFloating) {\n        if (!this.label) {\n            return nothing;\n        }\n        let visible;\n        if (isFloating) {\n            // Floating label is visible when focused/populated or when animating.\n            visible = this.focused || this.populated || this.isAnimating;\n        }\n        else {\n            // Resting label is visible when unfocused. It is never visible while\n            // animating.\n            visible = !this.focused && !this.populated && !this.isAnimating;\n        }\n        const classes = {\n            'hidden': !visible,\n            'floating': isFloating,\n            'resting': !isFloating,\n        };\n        // Add '*' if a label is present and the field is required\n        const labelText = `${this.label}${this.required && !this.noAsterisk ? '*' : ''}`;\n        return html `\n      <span class=\"label ${classMap(classes)}\" aria-hidden=${!visible}\n        >${labelText}</span\n      >\n    `;\n    }\n    animateLabelIfNeeded({ wasFocused, wasPopulated, }) {\n        if (!this.label) {\n            return;\n        }\n        wasFocused ??= this.focused;\n        wasPopulated ??= this.populated;\n        const wasFloating = wasFocused || wasPopulated;\n        const shouldBeFloating = this.focused || this.populated;\n        if (wasFloating === shouldBeFloating) {\n            return;\n        }\n        this.isAnimating = true;\n        this.labelAnimation?.cancel();\n        // Only one label is visible at a time for clearer text rendering.\n        // The floating label is visible and used during animation. At the end of\n        // the animation, it will either remain visible (if floating) or hide and\n        // the resting label will be shown.\n        //\n        // We don't use forward filling because if the dimensions of the text field\n        // change (leading icon removed, density changes, etc), then the animation\n        // will be inaccurate.\n        //\n        // Re-calculating the animation each time will prevent any visual glitches\n        // from appearing.\n        // TODO(b/241113345): use animation tokens\n        this.labelAnimation = this.floatingLabelEl?.animate(this.getLabelKeyframes(), { duration: 150, easing: EASING.STANDARD });\n        this.labelAnimation?.addEventListener('finish', () => {\n            // At the end of the animation, update the visible label.\n            this.isAnimating = false;\n        });\n    }\n    getLabelKeyframes() {\n        const { floatingLabelEl, restingLabelEl } = this;\n        if (!floatingLabelEl || !restingLabelEl) {\n            return [];\n        }\n        const { x: floatingX, y: floatingY, height: floatingHeight, } = floatingLabelEl.getBoundingClientRect();\n        const { x: restingX, y: restingY, height: restingHeight, } = restingLabelEl.getBoundingClientRect();\n        const floatingScrollWidth = floatingLabelEl.scrollWidth;\n        const restingScrollWidth = restingLabelEl.scrollWidth;\n        // Scale by width ratio instead of font size since letter-spacing will scale\n        // incorrectly. Using the width we can better approximate the adjusted\n        // scale and compensate for tracking and overflow.\n        // (use scrollWidth instead of width to account for clipped labels)\n        const scale = restingScrollWidth / floatingScrollWidth;\n        const xDelta = restingX - floatingX;\n        // The line-height of the resting and floating label are different. When\n        // we move the floating label down to the resting label's position, it won't\n        // exactly match because of this. We need to adjust by half of what the\n        // final scaled floating label's height will be.\n        const yDelta = restingY -\n            floatingY +\n            Math.round((restingHeight - floatingHeight * scale) / 2);\n        // Create the two transforms: floating to resting (using the calculations\n        // above), and resting to floating (re-setting the transform to initial\n        // values).\n        const restTransform = `translateX(${xDelta}px) translateY(${yDelta}px) scale(${scale})`;\n        const floatTransform = `translateX(0) translateY(0) scale(1)`;\n        // Constrain the floating labels width to a scaled percentage of the\n        // resting label's width. This will prevent long clipped labels from\n        // overflowing the container.\n        const restingClientWidth = restingLabelEl.clientWidth;\n        const isRestingClipped = restingScrollWidth > restingClientWidth;\n        const width = isRestingClipped ? `${restingClientWidth / scale}px` : '';\n        if (this.focused || this.populated) {\n            return [\n                { transform: restTransform, width },\n                { transform: floatTransform, width },\n            ];\n        }\n        return [\n            { transform: floatTransform, width },\n            { transform: restTransform, width },\n        ];\n    }\n    getSurfacePositionClientRect() {\n        return this.containerEl.getBoundingClientRect();\n    }\n}\n__decorate([\n    property({ type: Boolean })\n], Field.prototype, \"disabled\", void 0);\n__decorate([\n    property({ type: Boolean })\n], Field.prototype, \"error\", void 0);\n__decorate([\n    property({ type: Boolean })\n], Field.prototype, \"focused\", void 0);\n__decorate([\n    property()\n], Field.prototype, \"label\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'no-asterisk' })\n], Field.prototype, \"noAsterisk\", void 0);\n__decorate([\n    property({ type: Boolean })\n], Field.prototype, \"populated\", void 0);\n__decorate([\n    property({ type: Boolean })\n], Field.prototype, \"required\", void 0);\n__decorate([\n    property({ type: Boolean })\n], Field.prototype, \"resizable\", void 0);\n__decorate([\n    property({ attribute: 'supporting-text' })\n], Field.prototype, \"supportingText\", void 0);\n__decorate([\n    property({ attribute: 'error-text' })\n], Field.prototype, \"errorText\", void 0);\n__decorate([\n    property({ type: Number })\n], Field.prototype, \"count\", void 0);\n__decorate([\n    property({ type: Number })\n], Field.prototype, \"max\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'has-start' })\n], Field.prototype, \"hasStart\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'has-end' })\n], Field.prototype, \"hasEnd\", void 0);\n__decorate([\n    queryAssignedElements({ slot: 'aria-describedby' })\n], Field.prototype, \"slottedAriaDescribedBy\", void 0);\n__decorate([\n    state()\n], Field.prototype, \"isAnimating\", void 0);\n__decorate([\n    state()\n], Field.prototype, \"refreshErrorAlert\", void 0);\n__decorate([\n    state()\n], Field.prototype, \"disableTransitions\", void 0);\n__decorate([\n    query('.label.floating')\n], Field.prototype, \"floatingLabelEl\", void 0);\n__decorate([\n    query('.label.resting')\n], Field.prototype, \"restingLabelEl\", void 0);\n__decorate([\n    query('.container')\n], Field.prototype, \"containerEl\", void 0);\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { html } from 'lit';\nimport { Field } from './field.js';\n/**\n * A filled field component.\n */\nexport class FilledField extends Field {\n    renderBackground() {\n        return html ` <div class=\"background\"></div> `;\n    }\n    renderStateLayer() {\n        return html ` <div class=\"state-layer\"></div> `;\n    }\n    renderIndicator() {\n        return html `<div class=\"active-indicator\"></div>`;\n    }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./field/internal/filled-styles.css.\nimport { css } from 'lit';\nexport const styles = css `@layer styles{:host{--_active-indicator-color: var(--md-filled-field-active-indicator-color, var(--md-sys-color-on-surface-variant, #49454f));--_active-indicator-height: var(--md-filled-field-active-indicator-height, 1px);--_bottom-space: var(--md-filled-field-bottom-space, 16px);--_container-color: var(--md-filled-field-container-color, var(--md-sys-color-surface-container-highest, #e6e0e9));--_content-color: var(--md-filled-field-content-color, var(--md-sys-color-on-surface, #1d1b20));--_content-font: var(--md-filled-field-content-font, var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto)));--_content-line-height: var(--md-filled-field-content-line-height, var(--md-sys-typescale-body-large-line-height, 1.5rem));--_content-size: var(--md-filled-field-content-size, var(--md-sys-typescale-body-large-size, 1rem));--_content-space: var(--md-filled-field-content-space, 16px);--_content-weight: var(--md-filled-field-content-weight, var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400)));--_disabled-active-indicator-color: var(--md-filled-field-disabled-active-indicator-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-active-indicator-height: var(--md-filled-field-disabled-active-indicator-height, 1px);--_disabled-active-indicator-opacity: var(--md-filled-field-disabled-active-indicator-opacity, 0.38);--_disabled-container-color: var(--md-filled-field-disabled-container-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-container-opacity: var(--md-filled-field-disabled-container-opacity, 0.04);--_disabled-content-color: var(--md-filled-field-disabled-content-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-content-opacity: var(--md-filled-field-disabled-content-opacity, 0.38);--_disabled-label-text-color: var(--md-filled-field-disabled-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-label-text-opacity: var(--md-filled-field-disabled-label-text-opacity, 0.38);--_disabled-leading-content-color: var(--md-filled-field-disabled-leading-content-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-leading-content-opacity: var(--md-filled-field-disabled-leading-content-opacity, 0.38);--_disabled-supporting-text-color: var(--md-filled-field-disabled-supporting-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-supporting-text-opacity: var(--md-filled-field-disabled-supporting-text-opacity, 0.38);--_disabled-trailing-content-color: var(--md-filled-field-disabled-trailing-content-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-trailing-content-opacity: var(--md-filled-field-disabled-trailing-content-opacity, 0.38);--_error-active-indicator-color: var(--md-filled-field-error-active-indicator-color, var(--md-sys-color-error, #b3261e));--_error-content-color: var(--md-filled-field-error-content-color, var(--md-sys-color-on-surface, #1d1b20));--_error-focus-active-indicator-color: var(--md-filled-field-error-focus-active-indicator-color, var(--md-sys-color-error, #b3261e));--_error-focus-content-color: var(--md-filled-field-error-focus-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_error-focus-label-text-color: var(--md-filled-field-error-focus-label-text-color, var(--md-sys-color-error, #b3261e));--_error-focus-leading-content-color: var(--md-filled-field-error-focus-leading-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_error-focus-supporting-text-color: var(--md-filled-field-error-focus-supporting-text-color, var(--md-sys-color-error, #b3261e));--_error-focus-trailing-content-color: var(--md-filled-field-error-focus-trailing-content-color, var(--md-sys-color-error, #b3261e));--_error-hover-active-indicator-color: var(--md-filled-field-error-hover-active-indicator-color, var(--md-sys-color-on-error-container, #410e0b));--_error-hover-content-color: var(--md-filled-field-error-hover-content-color, var(--md-sys-color-on-surface, #1d1b20));--_error-hover-label-text-color: var(--md-filled-field-error-hover-label-text-color, var(--md-sys-color-on-error-container, #410e0b));--_error-hover-leading-content-color: var(--md-filled-field-error-hover-leading-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_error-hover-state-layer-color: var(--md-filled-field-error-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_error-hover-state-layer-opacity: var(--md-filled-field-error-hover-state-layer-opacity, 0.08);--_error-hover-supporting-text-color: var(--md-filled-field-error-hover-supporting-text-color, var(--md-sys-color-error, #b3261e));--_error-hover-trailing-content-color: var(--md-filled-field-error-hover-trailing-content-color, var(--md-sys-color-on-error-container, #410e0b));--_error-label-text-color: var(--md-filled-field-error-label-text-color, var(--md-sys-color-error, #b3261e));--_error-leading-content-color: var(--md-filled-field-error-leading-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_error-supporting-text-color: var(--md-filled-field-error-supporting-text-color, var(--md-sys-color-error, #b3261e));--_error-trailing-content-color: var(--md-filled-field-error-trailing-content-color, var(--md-sys-color-error, #b3261e));--_focus-active-indicator-color: var(--md-filled-field-focus-active-indicator-color, var(--md-sys-color-primary, #6750a4));--_focus-active-indicator-height: var(--md-filled-field-focus-active-indicator-height, 3px);--_focus-content-color: var(--md-filled-field-focus-content-color, var(--md-sys-color-on-surface, #1d1b20));--_focus-label-text-color: var(--md-filled-field-focus-label-text-color, var(--md-sys-color-primary, #6750a4));--_focus-leading-content-color: var(--md-filled-field-focus-leading-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_focus-supporting-text-color: var(--md-filled-field-focus-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_focus-trailing-content-color: var(--md-filled-field-focus-trailing-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-active-indicator-color: var(--md-filled-field-hover-active-indicator-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-active-indicator-height: var(--md-filled-field-hover-active-indicator-height, 1px);--_hover-content-color: var(--md-filled-field-hover-content-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-label-text-color: var(--md-filled-field-hover-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-leading-content-color: var(--md-filled-field-hover-leading-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-state-layer-color: var(--md-filled-field-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-state-layer-opacity: var(--md-filled-field-hover-state-layer-opacity, 0.08);--_hover-supporting-text-color: var(--md-filled-field-hover-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-trailing-content-color: var(--md-filled-field-hover-trailing-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_label-text-color: var(--md-filled-field-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_label-text-font: var(--md-filled-field-label-text-font, var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-filled-field-label-text-line-height, var(--md-sys-typescale-body-large-line-height, 1.5rem));--_label-text-populated-line-height: var(--md-filled-field-label-text-populated-line-height, var(--md-sys-typescale-body-small-line-height, 1rem));--_label-text-populated-size: var(--md-filled-field-label-text-populated-size, var(--md-sys-typescale-body-small-size, 0.75rem));--_label-text-size: var(--md-filled-field-label-text-size, var(--md-sys-typescale-body-large-size, 1rem));--_label-text-weight: var(--md-filled-field-label-text-weight, var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400)));--_leading-content-color: var(--md-filled-field-leading-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_leading-space: var(--md-filled-field-leading-space, 16px);--_supporting-text-color: var(--md-filled-field-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_supporting-text-font: var(--md-filled-field-supporting-text-font, var(--md-sys-typescale-body-small-font, var(--md-ref-typeface-plain, Roboto)));--_supporting-text-leading-space: var(--md-filled-field-supporting-text-leading-space, 16px);--_supporting-text-line-height: var(--md-filled-field-supporting-text-line-height, var(--md-sys-typescale-body-small-line-height, 1rem));--_supporting-text-size: var(--md-filled-field-supporting-text-size, var(--md-sys-typescale-body-small-size, 0.75rem));--_supporting-text-top-space: var(--md-filled-field-supporting-text-top-space, 4px);--_supporting-text-trailing-space: var(--md-filled-field-supporting-text-trailing-space, 16px);--_supporting-text-weight: var(--md-filled-field-supporting-text-weight, var(--md-sys-typescale-body-small-weight, var(--md-ref-typeface-weight-regular, 400)));--_top-space: var(--md-filled-field-top-space, 16px);--_trailing-content-color: var(--md-filled-field-trailing-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_trailing-space: var(--md-filled-field-trailing-space, 16px);--_with-label-bottom-space: var(--md-filled-field-with-label-bottom-space, 8px);--_with-label-top-space: var(--md-filled-field-with-label-top-space, 8px);--_with-leading-content-leading-space: var(--md-filled-field-with-leading-content-leading-space, 12px);--_with-trailing-content-trailing-space: var(--md-filled-field-with-trailing-content-trailing-space, 12px);--_container-shape-start-start: var(--md-filled-field-container-shape-start-start, var(--md-filled-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)));--_container-shape-start-end: var(--md-filled-field-container-shape-start-end, var(--md-filled-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)));--_container-shape-end-end: var(--md-filled-field-container-shape-end-end, var(--md-filled-field-container-shape, var(--md-sys-shape-corner-none, 0px)));--_container-shape-end-start: var(--md-filled-field-container-shape-end-start, var(--md-filled-field-container-shape, var(--md-sys-shape-corner-none, 0px)))}.background,.state-layer{border-radius:inherit;inset:0;pointer-events:none;position:absolute}.background{background:var(--_container-color)}.state-layer{visibility:hidden}.field:not(.disabled):hover .state-layer{visibility:visible}.label.floating{position:absolute;top:var(--_with-label-top-space)}.field:not(.with-start) .label-wrapper{margin-inline-start:var(--_leading-space)}.field:not(.with-end) .label-wrapper{margin-inline-end:var(--_trailing-space)}.active-indicator{inset:auto 0 0 0;pointer-events:none;position:absolute;width:100%;z-index:1}.active-indicator::before,.active-indicator::after{border-bottom:var(--_active-indicator-height) solid var(--_active-indicator-color);inset:auto 0 0 0;content:\"\";position:absolute;width:100%}.active-indicator::after{opacity:0;transition:opacity 150ms cubic-bezier(0.2, 0, 0, 1)}.focused .active-indicator::after{opacity:1}.field:not(.with-start) .content ::slotted(*){padding-inline-start:var(--_leading-space)}.field:not(.with-end) .content ::slotted(*){padding-inline-end:var(--_trailing-space)}.field:not(.no-label) .content ::slotted(:not(textarea)){padding-bottom:var(--_with-label-bottom-space);padding-top:calc(var(--_with-label-top-space) + var(--_label-text-populated-line-height))}.field:not(.no-label) .content ::slotted(textarea){margin-bottom:var(--_with-label-bottom-space);margin-top:calc(var(--_with-label-top-space) + var(--_label-text-populated-line-height))}:hover .active-indicator::before{border-bottom-color:var(--_hover-active-indicator-color);border-bottom-width:var(--_hover-active-indicator-height)}.active-indicator::after{border-bottom-color:var(--_focus-active-indicator-color);border-bottom-width:var(--_focus-active-indicator-height)}:hover .state-layer{background:var(--_hover-state-layer-color);opacity:var(--_hover-state-layer-opacity)}.disabled .active-indicator::before{border-bottom-color:var(--_disabled-active-indicator-color);border-bottom-width:var(--_disabled-active-indicator-height);opacity:var(--_disabled-active-indicator-opacity)}.disabled .background{background:var(--_disabled-container-color);opacity:var(--_disabled-container-opacity)}.error .active-indicator::before{border-bottom-color:var(--_error-active-indicator-color)}.error:hover .active-indicator::before{border-bottom-color:var(--_error-hover-active-indicator-color)}.error:hover .state-layer{background:var(--_error-hover-state-layer-color);opacity:var(--_error-hover-state-layer-opacity)}.error .active-indicator::after{border-bottom-color:var(--_error-focus-active-indicator-color)}.resizable .container{bottom:var(--_focus-active-indicator-height);clip-path:inset(var(--_focus-active-indicator-height) 0 0 0)}.resizable .container>*{top:var(--_focus-active-indicator-height)}}@layer hcm{@media(forced-colors: active){.disabled .active-indicator::before{border-color:GrayText;opacity:1}}}\n`;\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./field/internal/shared-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{display:inline-flex;resize:both}.field{display:flex;flex:1;flex-direction:column;writing-mode:horizontal-tb;max-width:100%}.container-overflow{border-start-start-radius:var(--_container-shape-start-start);border-start-end-radius:var(--_container-shape-start-end);border-end-end-radius:var(--_container-shape-end-end);border-end-start-radius:var(--_container-shape-end-start);display:flex;height:100%;position:relative}.container{align-items:center;border-radius:inherit;display:flex;flex:1;max-height:100%;min-height:100%;min-width:min-content;position:relative}.field,.container-overflow{resize:inherit}.resizable:not(.disabled) .container{resize:inherit;overflow:hidden}.disabled{pointer-events:none}slot[name=container]{border-radius:inherit}slot[name=container]::slotted(*){border-radius:inherit;inset:0;pointer-events:none;position:absolute}@layer styles{.start,.middle,.end{display:flex;box-sizing:border-box;height:100%;position:relative}.start{color:var(--_leading-content-color)}.end{color:var(--_trailing-content-color)}.start,.end{align-items:center;justify-content:center}.with-start .start{margin-inline:var(--_with-leading-content-leading-space) var(--_content-space)}.with-end .end{margin-inline:var(--_content-space) var(--_with-trailing-content-trailing-space)}.middle{align-items:stretch;align-self:baseline;flex:1}.content{color:var(--_content-color);display:flex;flex:1;opacity:0;transition:opacity 83ms cubic-bezier(0.2, 0, 0, 1)}.no-label .content,.focused .content,.populated .content{opacity:1;transition-delay:67ms}:is(.disabled,.disable-transitions) .content{transition:none}.content ::slotted(*){all:unset;color:currentColor;font-family:var(--_content-font);font-size:var(--_content-size);line-height:var(--_content-line-height);font-weight:var(--_content-weight);width:100%;overflow-wrap:revert;white-space:revert}.content ::slotted(:not(textarea)){padding-top:var(--_top-space);padding-bottom:var(--_bottom-space)}.content ::slotted(textarea){margin-top:var(--_top-space);margin-bottom:var(--_bottom-space)}:hover .content{color:var(--_hover-content-color)}:hover .start{color:var(--_hover-leading-content-color)}:hover .end{color:var(--_hover-trailing-content-color)}.focused .content{color:var(--_focus-content-color)}.focused .start{color:var(--_focus-leading-content-color)}.focused .end{color:var(--_focus-trailing-content-color)}.disabled .content{color:var(--_disabled-content-color)}.disabled.no-label .content,.disabled.focused .content,.disabled.populated .content{opacity:var(--_disabled-content-opacity)}.disabled .start{color:var(--_disabled-leading-content-color);opacity:var(--_disabled-leading-content-opacity)}.disabled .end{color:var(--_disabled-trailing-content-color);opacity:var(--_disabled-trailing-content-opacity)}.error .content{color:var(--_error-content-color)}.error .start{color:var(--_error-leading-content-color)}.error .end{color:var(--_error-trailing-content-color)}.error:hover .content{color:var(--_error-hover-content-color)}.error:hover .start{color:var(--_error-hover-leading-content-color)}.error:hover .end{color:var(--_error-hover-trailing-content-color)}.error.focused .content{color:var(--_error-focus-content-color)}.error.focused .start{color:var(--_error-focus-leading-content-color)}.error.focused .end{color:var(--_error-focus-trailing-content-color)}}@layer hcm{@media(forced-colors: active){.disabled :is(.start,.content,.end){color:GrayText;opacity:1}}}@layer styles{.label{box-sizing:border-box;color:var(--_label-text-color);overflow:hidden;max-width:100%;text-overflow:ellipsis;white-space:nowrap;z-index:1;font-family:var(--_label-text-font);font-size:var(--_label-text-size);line-height:var(--_label-text-line-height);font-weight:var(--_label-text-weight);width:min-content}.label-wrapper{inset:0;pointer-events:none;position:absolute}.label.resting{position:absolute;top:var(--_top-space)}.label.floating{font-size:var(--_label-text-populated-size);line-height:var(--_label-text-populated-line-height);transform-origin:top left}.label.hidden{opacity:0}.no-label .label{display:none}.label-wrapper{inset:0;position:absolute;text-align:initial}:hover .label{color:var(--_hover-label-text-color)}.focused .label{color:var(--_focus-label-text-color)}.disabled .label{color:var(--_disabled-label-text-color)}.disabled .label:not(.hidden){opacity:var(--_disabled-label-text-opacity)}.error .label{color:var(--_error-label-text-color)}.error:hover .label{color:var(--_error-hover-label-text-color)}.error.focused .label{color:var(--_error-focus-label-text-color)}}@layer hcm{@media(forced-colors: active){.disabled .label:not(.hidden){color:GrayText;opacity:1}}}@layer styles{.supporting-text{color:var(--_supporting-text-color);display:flex;font-family:var(--_supporting-text-font);font-size:var(--_supporting-text-size);line-height:var(--_supporting-text-line-height);font-weight:var(--_supporting-text-weight);gap:16px;justify-content:space-between;padding-inline-start:var(--_supporting-text-leading-space);padding-inline-end:var(--_supporting-text-trailing-space);padding-top:var(--_supporting-text-top-space)}.supporting-text :nth-child(2){flex-shrink:0}:hover .supporting-text{color:var(--_hover-supporting-text-color)}.focus .supporting-text{color:var(--_focus-supporting-text-color)}.disabled .supporting-text{color:var(--_disabled-supporting-text-color);opacity:var(--_disabled-supporting-text-opacity)}.error .supporting-text{color:var(--_error-supporting-text-color)}.error:hover .supporting-text{color:var(--_error-hover-supporting-text-color)}.error.focus .supporting-text{color:var(--_error-focus-supporting-text-color)}}@layer hcm{@media(forced-colors: active){.disabled .supporting-text{color:GrayText;opacity:1}}}\n`;\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { FilledField } from './internal/filled-field.js';\nimport { styles as filledStyles } from './internal/filled-styles.js';\nimport { styles as sharedStyles } from './internal/shared-styles.js';\n/**\n * TODO(b/228525797): add docs\n * @final\n * @suppress {visibility}\n */\nexport let MdFilledField = class MdFilledField extends FilledField {\n};\nMdFilledField.styles = [sharedStyles, filledStyles];\nMdFilledField = __decorate([\n    customElement('md-filled-field')\n], MdFilledField);\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { html } from 'lit';\nimport { Field } from './field.js';\n/**\n * An outlined field component.\n */\nexport class OutlinedField extends Field {\n    renderOutline(floatingLabel) {\n        return html `\n      <div class=\"outline\">\n        <div class=\"outline-start\"></div>\n        <div class=\"outline-notch\">\n          <div class=\"outline-panel-inactive\"></div>\n          <div class=\"outline-panel-active\"></div>\n          <div class=\"outline-label\">${floatingLabel}</div>\n        </div>\n        <div class=\"outline-end\"></div>\n      </div>\n    `;\n    }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./field/internal/outlined-styles.css.\nimport { css } from 'lit';\nexport const styles = css `@layer styles{:host{--_bottom-space: var(--md-outlined-field-bottom-space, 16px);--_content-color: var(--md-outlined-field-content-color, var(--md-sys-color-on-surface, #1d1b20));--_content-font: var(--md-outlined-field-content-font, var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto)));--_content-line-height: var(--md-outlined-field-content-line-height, var(--md-sys-typescale-body-large-line-height, 1.5rem));--_content-size: var(--md-outlined-field-content-size, var(--md-sys-typescale-body-large-size, 1rem));--_content-space: var(--md-outlined-field-content-space, 16px);--_content-weight: var(--md-outlined-field-content-weight, var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400)));--_disabled-content-color: var(--md-outlined-field-disabled-content-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-content-opacity: var(--md-outlined-field-disabled-content-opacity, 0.38);--_disabled-label-text-color: var(--md-outlined-field-disabled-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-label-text-opacity: var(--md-outlined-field-disabled-label-text-opacity, 0.38);--_disabled-leading-content-color: var(--md-outlined-field-disabled-leading-content-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-leading-content-opacity: var(--md-outlined-field-disabled-leading-content-opacity, 0.38);--_disabled-outline-color: var(--md-outlined-field-disabled-outline-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-outline-opacity: var(--md-outlined-field-disabled-outline-opacity, 0.12);--_disabled-outline-width: var(--md-outlined-field-disabled-outline-width, 1px);--_disabled-supporting-text-color: var(--md-outlined-field-disabled-supporting-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-supporting-text-opacity: var(--md-outlined-field-disabled-supporting-text-opacity, 0.38);--_disabled-trailing-content-color: var(--md-outlined-field-disabled-trailing-content-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-trailing-content-opacity: var(--md-outlined-field-disabled-trailing-content-opacity, 0.38);--_error-content-color: var(--md-outlined-field-error-content-color, var(--md-sys-color-on-surface, #1d1b20));--_error-focus-content-color: var(--md-outlined-field-error-focus-content-color, var(--md-sys-color-on-surface, #1d1b20));--_error-focus-label-text-color: var(--md-outlined-field-error-focus-label-text-color, var(--md-sys-color-error, #b3261e));--_error-focus-leading-content-color: var(--md-outlined-field-error-focus-leading-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_error-focus-outline-color: var(--md-outlined-field-error-focus-outline-color, var(--md-sys-color-error, #b3261e));--_error-focus-supporting-text-color: var(--md-outlined-field-error-focus-supporting-text-color, var(--md-sys-color-error, #b3261e));--_error-focus-trailing-content-color: var(--md-outlined-field-error-focus-trailing-content-color, var(--md-sys-color-error, #b3261e));--_error-hover-content-color: var(--md-outlined-field-error-hover-content-color, var(--md-sys-color-on-surface, #1d1b20));--_error-hover-label-text-color: var(--md-outlined-field-error-hover-label-text-color, var(--md-sys-color-on-error-container, #410e0b));--_error-hover-leading-content-color: var(--md-outlined-field-error-hover-leading-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_error-hover-outline-color: var(--md-outlined-field-error-hover-outline-color, var(--md-sys-color-on-error-container, #410e0b));--_error-hover-supporting-text-color: var(--md-outlined-field-error-hover-supporting-text-color, var(--md-sys-color-error, #b3261e));--_error-hover-trailing-content-color: var(--md-outlined-field-error-hover-trailing-content-color, var(--md-sys-color-on-error-container, #410e0b));--_error-label-text-color: var(--md-outlined-field-error-label-text-color, var(--md-sys-color-error, #b3261e));--_error-leading-content-color: var(--md-outlined-field-error-leading-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_error-outline-color: var(--md-outlined-field-error-outline-color, var(--md-sys-color-error, #b3261e));--_error-supporting-text-color: var(--md-outlined-field-error-supporting-text-color, var(--md-sys-color-error, #b3261e));--_error-trailing-content-color: var(--md-outlined-field-error-trailing-content-color, var(--md-sys-color-error, #b3261e));--_focus-content-color: var(--md-outlined-field-focus-content-color, var(--md-sys-color-on-surface, #1d1b20));--_focus-label-text-color: var(--md-outlined-field-focus-label-text-color, var(--md-sys-color-primary, #6750a4));--_focus-leading-content-color: var(--md-outlined-field-focus-leading-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_focus-outline-color: var(--md-outlined-field-focus-outline-color, var(--md-sys-color-primary, #6750a4));--_focus-outline-width: var(--md-outlined-field-focus-outline-width, 3px);--_focus-supporting-text-color: var(--md-outlined-field-focus-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_focus-trailing-content-color: var(--md-outlined-field-focus-trailing-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-content-color: var(--md-outlined-field-hover-content-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-label-text-color: var(--md-outlined-field-hover-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-leading-content-color: var(--md-outlined-field-hover-leading-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-outline-color: var(--md-outlined-field-hover-outline-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-outline-width: var(--md-outlined-field-hover-outline-width, 1px);--_hover-supporting-text-color: var(--md-outlined-field-hover-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-trailing-content-color: var(--md-outlined-field-hover-trailing-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_label-text-color: var(--md-outlined-field-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_label-text-font: var(--md-outlined-field-label-text-font, var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-outlined-field-label-text-line-height, var(--md-sys-typescale-body-large-line-height, 1.5rem));--_label-text-padding-bottom: var(--md-outlined-field-label-text-padding-bottom, 8px);--_label-text-populated-line-height: var(--md-outlined-field-label-text-populated-line-height, var(--md-sys-typescale-body-small-line-height, 1rem));--_label-text-populated-size: var(--md-outlined-field-label-text-populated-size, var(--md-sys-typescale-body-small-size, 0.75rem));--_label-text-size: var(--md-outlined-field-label-text-size, var(--md-sys-typescale-body-large-size, 1rem));--_label-text-weight: var(--md-outlined-field-label-text-weight, var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400)));--_leading-content-color: var(--md-outlined-field-leading-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_leading-space: var(--md-outlined-field-leading-space, 16px);--_outline-color: var(--md-outlined-field-outline-color, var(--md-sys-color-outline, #79747e));--_outline-label-padding: var(--md-outlined-field-outline-label-padding, 4px);--_outline-width: var(--md-outlined-field-outline-width, 1px);--_supporting-text-color: var(--md-outlined-field-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_supporting-text-font: var(--md-outlined-field-supporting-text-font, var(--md-sys-typescale-body-small-font, var(--md-ref-typeface-plain, Roboto)));--_supporting-text-leading-space: var(--md-outlined-field-supporting-text-leading-space, 16px);--_supporting-text-line-height: var(--md-outlined-field-supporting-text-line-height, var(--md-sys-typescale-body-small-line-height, 1rem));--_supporting-text-size: var(--md-outlined-field-supporting-text-size, var(--md-sys-typescale-body-small-size, 0.75rem));--_supporting-text-top-space: var(--md-outlined-field-supporting-text-top-space, 4px);--_supporting-text-trailing-space: var(--md-outlined-field-supporting-text-trailing-space, 16px);--_supporting-text-weight: var(--md-outlined-field-supporting-text-weight, var(--md-sys-typescale-body-small-weight, var(--md-ref-typeface-weight-regular, 400)));--_top-space: var(--md-outlined-field-top-space, 16px);--_trailing-content-color: var(--md-outlined-field-trailing-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_trailing-space: var(--md-outlined-field-trailing-space, 16px);--_with-leading-content-leading-space: var(--md-outlined-field-with-leading-content-leading-space, 12px);--_with-trailing-content-trailing-space: var(--md-outlined-field-with-trailing-content-trailing-space, 12px);--_container-shape-start-start: var(--md-outlined-field-container-shape-start-start, var(--md-outlined-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)));--_container-shape-start-end: var(--md-outlined-field-container-shape-start-end, var(--md-outlined-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)));--_container-shape-end-end: var(--md-outlined-field-container-shape-end-end, var(--md-outlined-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)));--_container-shape-end-start: var(--md-outlined-field-container-shape-end-start, var(--md-outlined-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)))}.outline{border-color:var(--_outline-color);border-radius:inherit;display:flex;pointer-events:none;height:100%;position:absolute;width:100%;z-index:1}.outline-start::before,.outline-start::after,.outline-panel-inactive::before,.outline-panel-inactive::after,.outline-panel-active::before,.outline-panel-active::after,.outline-end::before,.outline-end::after{border:inherit;content:\"\";inset:0;position:absolute}.outline-start,.outline-end{border:inherit;border-radius:inherit;box-sizing:border-box;position:relative}.outline-start::before,.outline-start::after,.outline-end::before,.outline-end::after{border-bottom-style:solid;border-top-style:solid}.outline-start::after,.outline-end::after{opacity:0;transition:opacity 150ms cubic-bezier(0.2, 0, 0, 1)}.focused .outline-start::after,.focused .outline-end::after{opacity:1}.outline-start::before,.outline-start::after{border-inline-start-style:solid;border-inline-end-style:none;border-start-start-radius:inherit;border-start-end-radius:0;border-end-start-radius:inherit;border-end-end-radius:0;margin-inline-end:var(--_outline-label-padding)}.outline-end{flex-grow:1;margin-inline-start:calc(-1*var(--_outline-label-padding))}.outline-end::before,.outline-end::after{border-inline-start-style:none;border-inline-end-style:solid;border-start-start-radius:0;border-start-end-radius:inherit;border-end-start-radius:0;border-end-end-radius:inherit}.outline-notch{align-items:flex-start;border:inherit;display:flex;margin-inline-start:calc(-1*var(--_outline-label-padding));margin-inline-end:var(--_outline-label-padding);max-width:calc(100% - var(--_leading-space) - var(--_trailing-space));padding:0 var(--_outline-label-padding);position:relative}.no-label .outline-notch{display:none}.outline-panel-inactive,.outline-panel-active{border:inherit;border-bottom-style:solid;inset:0;position:absolute}.outline-panel-inactive::before,.outline-panel-inactive::after,.outline-panel-active::before,.outline-panel-active::after{border-top-style:solid;border-bottom:none;bottom:auto;transform:scaleX(1);transition:transform 150ms cubic-bezier(0.2, 0, 0, 1)}.outline-panel-inactive::before,.outline-panel-active::before{right:50%;transform-origin:top left}.outline-panel-inactive::after,.outline-panel-active::after{left:50%;transform-origin:top right}.populated .outline-panel-inactive::before,.populated .outline-panel-inactive::after,.populated .outline-panel-active::before,.populated .outline-panel-active::after,.focused .outline-panel-inactive::before,.focused .outline-panel-inactive::after,.focused .outline-panel-active::before,.focused .outline-panel-active::after{transform:scaleX(0)}.outline-panel-active{opacity:0;transition:opacity 150ms cubic-bezier(0.2, 0, 0, 1)}.focused .outline-panel-active{opacity:1}.outline-label{display:flex;max-width:100%;transform:translateY(calc(-100% + var(--_label-text-padding-bottom)))}.outline-start,.field:not(.with-start) .content ::slotted(*){padding-inline-start:max(var(--_leading-space),max(var(--_container-shape-start-start),var(--_container-shape-end-start)) + var(--_outline-label-padding))}.field:not(.with-start) .label-wrapper{margin-inline-start:max(var(--_leading-space),max(var(--_container-shape-start-start),var(--_container-shape-end-start)) + var(--_outline-label-padding))}.field:not(.with-end) .content ::slotted(*){padding-inline-end:max(var(--_trailing-space),max(var(--_container-shape-start-end),var(--_container-shape-end-end)))}.field:not(.with-end) .label-wrapper{margin-inline-end:max(var(--_trailing-space),max(var(--_container-shape-start-end),var(--_container-shape-end-end)))}.outline-start::before,.outline-end::before,.outline-panel-inactive,.outline-panel-inactive::before,.outline-panel-inactive::after{border-width:var(--_outline-width)}:hover .outline{border-color:var(--_hover-outline-color);color:var(--_hover-outline-color)}:hover .outline-start::before,:hover .outline-end::before,:hover .outline-panel-inactive,:hover .outline-panel-inactive::before,:hover .outline-panel-inactive::after{border-width:var(--_hover-outline-width)}.focused .outline{border-color:var(--_focus-outline-color);color:var(--_focus-outline-color)}.outline-start::after,.outline-end::after,.outline-panel-active,.outline-panel-active::before,.outline-panel-active::after{border-width:var(--_focus-outline-width)}.disabled .outline{border-color:var(--_disabled-outline-color);color:var(--_disabled-outline-color)}.disabled .outline-start,.disabled .outline-end,.disabled .outline-panel-inactive{opacity:var(--_disabled-outline-opacity)}.disabled .outline-start::before,.disabled .outline-end::before,.disabled .outline-panel-inactive,.disabled .outline-panel-inactive::before,.disabled .outline-panel-inactive::after{border-width:var(--_disabled-outline-width)}.error .outline{border-color:var(--_error-outline-color);color:var(--_error-outline-color)}.error:hover .outline{border-color:var(--_error-hover-outline-color);color:var(--_error-hover-outline-color)}.error.focused .outline{border-color:var(--_error-focus-outline-color);color:var(--_error-focus-outline-color)}.resizable .container{bottom:var(--_focus-outline-width);inset-inline-end:var(--_focus-outline-width);clip-path:inset(var(--_focus-outline-width) 0 0 var(--_focus-outline-width))}.resizable .container>*{top:var(--_focus-outline-width);inset-inline-start:var(--_focus-outline-width)}.resizable .container:dir(rtl){clip-path:inset(var(--_focus-outline-width) var(--_focus-outline-width) 0 0)}}@layer hcm{@media(forced-colors: active){.disabled .outline{border-color:GrayText;color:GrayText}.disabled :is(.outline-start,.outline-end,.outline-panel-inactive){opacity:1}}}\n`;\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { OutlinedField } from './internal/outlined-field.js';\nimport { styles as outlinedStyles } from './internal/outlined-styles.js';\nimport { styles as sharedStyles } from './internal/shared-styles.js';\n/**\n * TODO(b/228525797): add docs\n * @final\n * @suppress {visibility}\n */\nexport let MdOutlinedField = class MdOutlinedField extends OutlinedField {\n};\nMdOutlinedField.styles = [sharedStyles, outlinedStyles];\nMdOutlinedField = __decorate([\n    customElement('md-outlined-field')\n], MdOutlinedField);\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { html, LitElement } from 'lit';\n/**\n * TODO(b/265336902): add docs\n */\nexport class Icon extends LitElement {\n    render() {\n        return html `<slot></slot>`;\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        const ariaHidden = this.getAttribute('aria-hidden');\n        if (ariaHidden === 'false') {\n            // Allow the user to set `aria-hidden=\"false\"` to create an icon that is\n            // announced by screenreaders.\n            this.removeAttribute('aria-hidden');\n            return;\n        }\n        // Needed for VoiceOver, which will create a \"group\" if the element is a\n        // sibling to other content.\n        this.setAttribute('aria-hidden', 'true');\n    }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./icon/internal/icon-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{font-size:var(--md-icon-size, 24px);width:var(--md-icon-size, 24px);height:var(--md-icon-size, 24px);color:inherit;font-variation-settings:inherit;font-weight:400;font-family:var(--md-icon-font, Material Symbols Outlined);display:inline-flex;font-style:normal;place-items:center;place-content:center;line-height:1;overflow:hidden;letter-spacing:normal;text-transform:none;user-select:none;white-space:nowrap;word-wrap:normal;flex-shrink:0;-webkit-font-smoothing:antialiased;text-rendering:optimizeLegibility;-moz-osx-font-smoothing:grayscale}::slotted(svg){fill:currentColor}::slotted(*){height:100%;width:100%}\n`;\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { Icon } from './internal/icon.js';\nimport { styles } from './internal/icon-styles.js';\n/**\n * @final\n * @suppress {visibility}\n */\nexport let MdIcon = class MdIcon extends Icon {\n};\n/** @nocollapse */\nMdIcon.styles = [styles];\nMdIcon = __decorate([\n    customElement('md-icon')\n], MdIcon);\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./iconbutton/internal/filled-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{--_container-color: var(--md-filled-icon-button-container-color, var(--md-sys-color-primary, #6750a4));--_container-height: var(--md-filled-icon-button-container-height, 40px);--_container-width: var(--md-filled-icon-button-container-width, 40px);--_disabled-container-color: var(--md-filled-icon-button-disabled-container-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-container-opacity: var(--md-filled-icon-button-disabled-container-opacity, 0.12);--_disabled-icon-color: var(--md-filled-icon-button-disabled-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-icon-opacity: var(--md-filled-icon-button-disabled-icon-opacity, 0.38);--_focus-icon-color: var(--md-filled-icon-button-focus-icon-color, var(--md-sys-color-on-primary, #fff));--_hover-icon-color: var(--md-filled-icon-button-hover-icon-color, var(--md-sys-color-on-primary, #fff));--_hover-state-layer-color: var(--md-filled-icon-button-hover-state-layer-color, var(--md-sys-color-on-primary, #fff));--_hover-state-layer-opacity: var(--md-filled-icon-button-hover-state-layer-opacity, 0.08);--_icon-color: var(--md-filled-icon-button-icon-color, var(--md-sys-color-on-primary, #fff));--_icon-size: var(--md-filled-icon-button-icon-size, 24px);--_pressed-icon-color: var(--md-filled-icon-button-pressed-icon-color, var(--md-sys-color-on-primary, #fff));--_pressed-state-layer-color: var(--md-filled-icon-button-pressed-state-layer-color, var(--md-sys-color-on-primary, #fff));--_pressed-state-layer-opacity: var(--md-filled-icon-button-pressed-state-layer-opacity, 0.12);--_selected-container-color: var(--md-filled-icon-button-selected-container-color, var(--md-sys-color-primary, #6750a4));--_toggle-selected-focus-icon-color: var(--md-filled-icon-button-toggle-selected-focus-icon-color, var(--md-sys-color-on-primary, #fff));--_toggle-selected-hover-icon-color: var(--md-filled-icon-button-toggle-selected-hover-icon-color, var(--md-sys-color-on-primary, #fff));--_toggle-selected-hover-state-layer-color: var(--md-filled-icon-button-toggle-selected-hover-state-layer-color, var(--md-sys-color-on-primary, #fff));--_toggle-selected-icon-color: var(--md-filled-icon-button-toggle-selected-icon-color, var(--md-sys-color-on-primary, #fff));--_toggle-selected-pressed-icon-color: var(--md-filled-icon-button-toggle-selected-pressed-icon-color, var(--md-sys-color-on-primary, #fff));--_toggle-selected-pressed-state-layer-color: var(--md-filled-icon-button-toggle-selected-pressed-state-layer-color, var(--md-sys-color-on-primary, #fff));--_unselected-container-color: var(--md-filled-icon-button-unselected-container-color, var(--md-sys-color-surface-container-highest, #e6e0e9));--_toggle-focus-icon-color: var(--md-filled-icon-button-toggle-focus-icon-color, var(--md-sys-color-primary, #6750a4));--_toggle-hover-icon-color: var(--md-filled-icon-button-toggle-hover-icon-color, var(--md-sys-color-primary, #6750a4));--_toggle-hover-state-layer-color: var(--md-filled-icon-button-toggle-hover-state-layer-color, var(--md-sys-color-primary, #6750a4));--_toggle-icon-color: var(--md-filled-icon-button-toggle-icon-color, var(--md-sys-color-primary, #6750a4));--_toggle-pressed-icon-color: var(--md-filled-icon-button-toggle-pressed-icon-color, var(--md-sys-color-primary, #6750a4));--_toggle-pressed-state-layer-color: var(--md-filled-icon-button-toggle-pressed-state-layer-color, var(--md-sys-color-primary, #6750a4));--_container-shape-start-start: var(--md-filled-icon-button-container-shape-start-start, var(--md-filled-icon-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-start-end: var(--md-filled-icon-button-container-shape-start-end, var(--md-filled-icon-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-end-end: var(--md-filled-icon-button-container-shape-end-end, var(--md-filled-icon-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-end-start: var(--md-filled-icon-button-container-shape-end-start, var(--md-filled-icon-button-container-shape, var(--md-sys-shape-corner-full, 9999px)))}.icon-button{color:var(--_icon-color);--md-ripple-hover-color: var(--_hover-state-layer-color);--md-ripple-hover-opacity: var(--_hover-state-layer-opacity);--md-ripple-pressed-color: var(--_pressed-state-layer-color);--md-ripple-pressed-opacity: var(--_pressed-state-layer-opacity)}.icon-button:hover{color:var(--_hover-icon-color)}.icon-button:focus{color:var(--_focus-icon-color)}.icon-button:active{color:var(--_pressed-icon-color)}.icon-button:is(:disabled,[aria-disabled=true]){color:var(--_disabled-icon-color)}.icon-button::before{background-color:var(--_container-color);border-radius:inherit;content:\"\";inset:0;position:absolute;z-index:-1}.icon-button:is(:disabled,[aria-disabled=true])::before{background-color:var(--_disabled-container-color);opacity:var(--_disabled-container-opacity)}.icon-button:is(:disabled,[aria-disabled=true]) .icon{opacity:var(--_disabled-icon-opacity)}.toggle-filled{--md-ripple-hover-color: var(--_toggle-hover-state-layer-color);--md-ripple-pressed-color: var(--_toggle-pressed-state-layer-color)}.toggle-filled:not(:disabled,[aria-disabled=true]){color:var(--_toggle-icon-color)}.toggle-filled:not(:disabled,[aria-disabled=true]):hover{color:var(--_toggle-hover-icon-color)}.toggle-filled:not(:disabled,[aria-disabled=true]):focus{color:var(--_toggle-focus-icon-color)}.toggle-filled:not(:disabled,[aria-disabled=true]):active{color:var(--_toggle-pressed-icon-color)}.toggle-filled:not(:disabled,[aria-disabled=true])::before{background-color:var(--_unselected-container-color)}.selected{--md-ripple-hover-color: var(--_toggle-selected-hover-state-layer-color);--md-ripple-pressed-color: var(--_toggle-selected-pressed-state-layer-color)}.selected:not(:disabled,[aria-disabled=true]){color:var(--_toggle-selected-icon-color)}.selected:not(:disabled,[aria-disabled=true]):hover{color:var(--_toggle-selected-hover-icon-color)}.selected:not(:disabled,[aria-disabled=true]):focus{color:var(--_toggle-selected-focus-icon-color)}.selected:not(:disabled,[aria-disabled=true]):active{color:var(--_toggle-selected-pressed-icon-color)}.selected:not(:disabled,[aria-disabled=true])::before{background-color:var(--_selected-container-color)}\n`;\n", "/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n// Any new exports need to be added to the export statement in\n// `packages/lit/src/index.all.ts`.\nimport { html as coreHtml, svg as coreSvg, mathml as coreMathml, } from './lit-html.js';\n/**\n * Prevents JSON injection attacks.\n *\n * The goals of this brand:\n *   1) fast to check\n *   2) code is small on the wire\n *   3) multiple versions of Lit in a single page will all produce mutually\n *      interoperable StaticValues\n *   4) normal JSON.parse (without an unusual reviver) can not produce a\n *      StaticValue\n *\n * Symbols satisfy (1), (2), and (4). We use Symbol.for to satisfy (3), but\n * we don't care about the key, so we break ties via (2) and use the empty\n * string.\n */\nconst brand = Symbol.for('');\n/** Safely extracts the string part of a StaticValue. */\nconst unwrapStaticValue = (value) => {\n    if (value?.r !== brand) {\n        return undefined;\n    }\n    return value?.['_$litStatic$'];\n};\n/**\n * Wraps a string so that it behaves like part of the static template\n * strings instead of a dynamic value.\n *\n * Users must take care to ensure that adding the static string to the template\n * results in well-formed HTML, or else templates may break unexpectedly.\n *\n * Note that this function is unsafe to use on untrusted content, as it will be\n * directly parsed into HTML. Do not pass user input to this function\n * without sanitizing it.\n *\n * Static values can be changed, but they will cause a complete re-render\n * since they effectively create a new template.\n */\nexport const unsafeStatic = (value) => ({\n    ['_$litStatic$']: value,\n    r: brand,\n});\nconst textFromStatic = (value) => {\n    if (value['_$litStatic$'] !== undefined) {\n        return value['_$litStatic$'];\n    }\n    else {\n        throw new Error(`Value passed to 'literal' function must be a 'literal' result: ${value}. Use 'unsafeStatic' to pass non-literal values, but\n            take care to ensure page security.`);\n    }\n};\n/**\n * Tags a string literal so that it behaves like part of the static template\n * strings instead of a dynamic value.\n *\n * The only values that may be used in template expressions are other tagged\n * `literal` results or `unsafeStatic` values (note that untrusted content\n * should never be passed to `unsafeStatic`).\n *\n * Users must take care to ensure that adding the static string to the template\n * results in well-formed HTML, or else templates may break unexpectedly.\n *\n * Static values can be changed, but they will cause a complete re-render since\n * they effectively create a new template.\n */\nexport const literal = (strings, ...values) => ({\n    ['_$litStatic$']: values.reduce((acc, v, idx) => acc + textFromStatic(v) + strings[idx + 1], strings[0]),\n    r: brand,\n});\nconst stringsCache = new Map();\n/**\n * Wraps a lit-html template tag (`html` or `svg`) to add static value support.\n */\nexport const withStatic = (coreTag) => (strings, ...values) => {\n    const l = values.length;\n    let staticValue;\n    let dynamicValue;\n    const staticStrings = [];\n    const dynamicValues = [];\n    let i = 0;\n    let hasStatics = false;\n    let s;\n    while (i < l) {\n        s = strings[i];\n        // Collect any unsafeStatic values, and their following template strings\n        // so that we treat a run of template strings and unsafe static values as\n        // a single template string.\n        while (i < l &&\n            ((dynamicValue = values[i]),\n                (staticValue = unwrapStaticValue(dynamicValue))) !== undefined) {\n            s += staticValue + strings[++i];\n            hasStatics = true;\n        }\n        // If the last value is static, we don't need to push it.\n        if (i !== l) {\n            dynamicValues.push(dynamicValue);\n        }\n        staticStrings.push(s);\n        i++;\n    }\n    // If the last value isn't static (which would have consumed the last\n    // string), then we need to add the last string.\n    if (i === l) {\n        staticStrings.push(strings[l]);\n    }\n    if (hasStatics) {\n        const key = staticStrings.join('$$lit$$');\n        strings = stringsCache.get(key);\n        if (strings === undefined) {\n            // Beware: in general this pattern is unsafe, and doing so may bypass\n            // lit's security checks and allow an attacker to execute arbitrary\n            // code and inject arbitrary content.\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            staticStrings.raw = staticStrings;\n            stringsCache.set(key, (strings = staticStrings));\n        }\n        values = dynamicValues;\n    }\n    return coreTag(strings, ...values);\n};\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n *\n * Includes static value support from `lit-html/static.js`.\n */\nexport const html = withStatic(coreHtml);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n *\n * Includes static value support from `lit-html/static.js`.\n */\nexport const svg = withStatic(coreSvg);\n/**\n * Interprets a template literal as MathML fragment that can efficiently render\n * to and update a container.\n *\n * Includes static value support from `lit-html/static.js`.\n */\nexport const mathml = withStatic(coreMathml);\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * Returns `true` if the given element is in a right-to-left direction.\n *\n * @param el Element to determine direction from\n * @param shouldCheck Optional. If `false`, return `false` without checking\n *     direction. Determining the direction of `el` is somewhat expensive, so\n *     this parameter can be used as a conditional guard. Defaults to `true`.\n */\nexport function isRtl(el, shouldCheck = true) {\n    return (shouldCheck &&\n        getComputedStyle(el).getPropertyValue('direction').trim() === 'rtl');\n}\n", "/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport '../../focus/md-focus-ring.js';\nimport '../../ripple/ripple.js';\nimport { html, isServer, LitElement, nothing } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { literal, html as staticHtml } from 'lit/static-html.js';\nimport { mixinDelegatesAria } from '../../internal/aria/delegate.js';\nimport { setupFormSubmitter, } from '../../internal/controller/form-submitter.js';\nimport { isRtl } from '../../internal/controller/is-rtl.js';\nimport { internals, mixinElementInternals, } from '../../labs/behaviors/element-internals.js';\n// Separate variable needed for closure.\nconst iconButtonBaseClass = mixinDelegatesAria(mixinElementInternals(LitElement));\n/**\n * A button for rendering icons.\n *\n * @fires input {InputEvent} Dispatched when a toggle button toggles --bubbles\n * --composed\n * @fires change {Event} Dispatched when a toggle button toggles --bubbles\n */\nexport class IconButton extends iconButtonBaseClass {\n    get name() {\n        return this.getAttribute('name') ?? '';\n    }\n    set name(name) {\n        this.setAttribute('name', name);\n    }\n    /**\n     * The associated form element with which this element's value will submit.\n     */\n    get form() {\n        return this[internals].form;\n    }\n    /**\n     * The labels this element is associated with.\n     */\n    get labels() {\n        return this[internals].labels;\n    }\n    constructor() {\n        super();\n        /**\n         * Disables the icon button and makes it non-interactive.\n         */\n        this.disabled = false;\n        /**\n         * \"Soft-disables\" the icon button (disabled but still focusable).\n         *\n         * Use this when an icon button needs increased visibility when disabled. See\n         * https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/#kbd_disabled_controls\n         * for more guidance on when this is needed.\n         */\n        this.softDisabled = false;\n        /**\n         * Flips the icon if it is in an RTL context at startup.\n         */\n        this.flipIconInRtl = false;\n        /**\n         * Sets the underlying `HTMLAnchorElement`'s `href` resource attribute.\n         */\n        this.href = '';\n        /**\n         * Sets the underlying `HTMLAnchorElement`'s `target` attribute.\n         */\n        this.target = '';\n        /**\n         * The `aria-label` of the button when the button is toggleable and selected.\n         */\n        this.ariaLabelSelected = '';\n        /**\n         * When true, the button will toggle between selected and unselected\n         * states\n         */\n        this.toggle = false;\n        /**\n         * Sets the selected state. When false, displays the default icon. When true,\n         * displays the selected icon, or the default icon If no `slot=\"selected\"`\n         * icon is provided.\n         */\n        this.selected = false;\n        /**\n         * The default behavior of the button. May be \"button\", \"reset\", or \"submit\"\n         * (default).\n         */\n        this.type = 'submit';\n        /**\n         * The value added to a form with the button's name when the button submits a\n         * form.\n         */\n        this.value = '';\n        this.flipIcon = isRtl(this, this.flipIconInRtl);\n        if (!isServer) {\n            this.addEventListener('click', this.handleClick.bind(this));\n        }\n    }\n    willUpdate() {\n        // Link buttons cannot be disabled or soft-disabled.\n        if (this.href) {\n            this.disabled = false;\n            this.softDisabled = false;\n        }\n    }\n    render() {\n        const tag = this.href ? literal `div` : literal `button`;\n        // Needed for closure conformance\n        const { ariaLabel, ariaHasPopup, ariaExpanded } = this;\n        const hasToggledAriaLabel = ariaLabel && this.ariaLabelSelected;\n        const ariaPressedValue = !this.toggle ? nothing : this.selected;\n        let ariaLabelValue = nothing;\n        if (!this.href) {\n            ariaLabelValue =\n                hasToggledAriaLabel && this.selected\n                    ? this.ariaLabelSelected\n                    : ariaLabel;\n        }\n        return staticHtml `<${tag}\n        class=\"icon-button ${classMap(this.getRenderClasses())}\"\n        id=\"button\"\n        aria-label=\"${ariaLabelValue || nothing}\"\n        aria-haspopup=\"${(!this.href && ariaHasPopup) || nothing}\"\n        aria-expanded=\"${(!this.href && ariaExpanded) || nothing}\"\n        aria-pressed=\"${ariaPressedValue}\"\n        aria-disabled=${(!this.href && this.softDisabled) || nothing}\n        ?disabled=\"${!this.href && this.disabled}\"\n        @click=\"${this.handleClickOnChild}\">\n        ${this.renderFocusRing()}\n        ${this.renderRipple()}\n        ${!this.selected ? this.renderIcon() : nothing}\n        ${this.selected ? this.renderSelectedIcon() : nothing}\n        ${this.renderTouchTarget()}\n        ${this.href && this.renderLink()}\n  </${tag}>`;\n    }\n    renderLink() {\n        // Needed for closure conformance\n        const { ariaLabel } = this;\n        return html `\n      <a\n        class=\"link\"\n        id=\"link\"\n        href=\"${this.href}\"\n        target=\"${this.target || nothing}\"\n        aria-label=\"${ariaLabel || nothing}\"></a>\n    `;\n    }\n    getRenderClasses() {\n        return {\n            'flip-icon': this.flipIcon,\n            'selected': this.toggle && this.selected,\n        };\n    }\n    renderIcon() {\n        return html `<span class=\"icon\"><slot></slot></span>`;\n    }\n    renderSelectedIcon() {\n        // Use default slot as fallback to not require specifying multiple icons\n        return html `<span class=\"icon icon--selected\"\n      ><slot name=\"selected\"><slot></slot></slot\n    ></span>`;\n    }\n    renderTouchTarget() {\n        return html `<span class=\"touch\"></span>`;\n    }\n    renderFocusRing() {\n        // TODO(b/310046938): use the same id for both elements\n        return html `<md-focus-ring\n      part=\"focus-ring\"\n      for=${this.href ? 'link' : 'button'}></md-focus-ring>`;\n    }\n    renderRipple() {\n        const isRippleDisabled = !this.href && (this.disabled || this.softDisabled);\n        // TODO(b/310046938): use the same id for both elements\n        return html `<md-ripple\n      for=${this.href ? 'link' : nothing}\n      ?disabled=\"${isRippleDisabled}\"></md-ripple>`;\n    }\n    connectedCallback() {\n        this.flipIcon = isRtl(this, this.flipIconInRtl);\n        super.connectedCallback();\n    }\n    /** Handles a click on this element. */\n    handleClick(event) {\n        // If the icon button is soft-disabled, we need to explicitly prevent the\n        // click from propagating to other event listeners as well as prevent the\n        // default action.\n        if (!this.href && this.softDisabled) {\n            event.stopImmediatePropagation();\n            event.preventDefault();\n            return;\n        }\n    }\n    /**\n     * Handles a click on the child <div> or <button> element within this\n     * element's shadow DOM.\n     */\n    async handleClickOnChild(event) {\n        // Allow the event to propagate\n        await 0;\n        if (!this.toggle ||\n            this.disabled ||\n            this.softDisabled ||\n            event.defaultPrevented) {\n            return;\n        }\n        this.selected = !this.selected;\n        this.dispatchEvent(new InputEvent('input', { bubbles: true, composed: true }));\n        // Bubbles but does not compose to mimic native browser <input> & <select>\n        // Additionally, native change event is not an InputEvent.\n        this.dispatchEvent(new Event('change', { bubbles: true }));\n    }\n}\n(() => {\n    setupFormSubmitter(IconButton);\n})();\n/** @nocollapse */\nIconButton.formAssociated = true;\n/** @nocollapse */\nIconButton.shadowRootOptions = {\n    mode: 'open',\n    delegatesFocus: true,\n};\n__decorate([\n    property({ type: Boolean, reflect: true })\n], IconButton.prototype, \"disabled\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'soft-disabled', reflect: true })\n], IconButton.prototype, \"softDisabled\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'flip-icon-in-rtl' })\n], IconButton.prototype, \"flipIconInRtl\", void 0);\n__decorate([\n    property()\n], IconButton.prototype, \"href\", void 0);\n__decorate([\n    property()\n], IconButton.prototype, \"target\", void 0);\n__decorate([\n    property({ attribute: 'aria-label-selected' })\n], IconButton.prototype, \"ariaLabelSelected\", void 0);\n__decorate([\n    property({ type: Boolean })\n], IconButton.prototype, \"toggle\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], IconButton.prototype, \"selected\", void 0);\n__decorate([\n    property()\n], IconButton.prototype, \"type\", void 0);\n__decorate([\n    property({ reflect: true })\n], IconButton.prototype, \"value\", void 0);\n__decorate([\n    state()\n], IconButton.prototype, \"flipIcon\", void 0);\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./iconbutton/internal/shared-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{display:inline-flex;outline:none;-webkit-tap-highlight-color:rgba(0,0,0,0);height:var(--_container-height);width:var(--_container-width);justify-content:center}:host([touch-target=wrapper]){margin:max(0px,(48px - var(--_container-height))/2) max(0px,(48px - var(--_container-width))/2)}md-focus-ring{--md-focus-ring-shape-start-start: var(--_container-shape-start-start);--md-focus-ring-shape-start-end: var(--_container-shape-start-end);--md-focus-ring-shape-end-end: var(--_container-shape-end-end);--md-focus-ring-shape-end-start: var(--_container-shape-end-start)}:host(:is([disabled],[soft-disabled])){pointer-events:none}.icon-button{place-items:center;background:none;border:none;box-sizing:border-box;cursor:pointer;display:flex;place-content:center;outline:none;padding:0;position:relative;text-decoration:none;user-select:none;z-index:0;flex:1;border-start-start-radius:var(--_container-shape-start-start);border-start-end-radius:var(--_container-shape-start-end);border-end-start-radius:var(--_container-shape-end-start);border-end-end-radius:var(--_container-shape-end-end)}.icon ::slotted(*){font-size:var(--_icon-size);height:var(--_icon-size);width:var(--_icon-size);font-weight:inherit}md-ripple{z-index:-1;border-start-start-radius:var(--_container-shape-start-start);border-start-end-radius:var(--_container-shape-start-end);border-end-start-radius:var(--_container-shape-end-start);border-end-end-radius:var(--_container-shape-end-end)}.flip-icon .icon{transform:scaleX(-1)}.icon{display:inline-flex}.link{height:100%;outline:none;position:absolute;width:100%}.touch{position:absolute;height:max(48px,100%);width:max(48px,100%)}:host([touch-target=none]) .touch{display:none}@media(forced-colors: active){:host(:is([disabled],[soft-disabled])){--_disabled-icon-color: GrayText;--_disabled-icon-opacity: 1}}\n`;\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { styles } from './internal/filled-styles.js';\nimport { IconButton } from './internal/icon-button.js';\nimport { styles as sharedStyles } from './internal/shared-styles.js';\n/**\n * @summary Icon buttons help people take supplementary actions with a single\n * tap.\n *\n * @description\n * __Emphasis:__ Low emphasis – For optional or supplementary actions with the\n * least amount of prominence.\n *\n * __Rationale:__ The most compact and unobtrusive type of button, icon buttons\n * are used for optional supplementary actions such as \"Bookmark\" or \"Star.\"\n *\n * __Example usages:__\n * - Add to Favorites\n * - Print\n *\n * @final\n * @suppress {visibility}\n */\nexport let MdFilledIconButton = class MdFilledIconButton extends IconButton {\n    getRenderClasses() {\n        return {\n            ...super.getRenderClasses(),\n            'filled': true,\n            'toggle-filled': this.toggle,\n        };\n    }\n};\nMdFilledIconButton.styles = [sharedStyles, styles];\nMdFilledIconButton = __decorate([\n    customElement('md-filled-icon-button')\n], MdFilledIconButton);\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./iconbutton/internal/filled-tonal-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{--_container-color: var(--md-filled-tonal-icon-button-container-color, var(--md-sys-color-secondary-container, #e8def8));--_container-height: var(--md-filled-tonal-icon-button-container-height, 40px);--_container-width: var(--md-filled-tonal-icon-button-container-width, 40px);--_disabled-container-color: var(--md-filled-tonal-icon-button-disabled-container-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-container-opacity: var(--md-filled-tonal-icon-button-disabled-container-opacity, 0.12);--_disabled-icon-color: var(--md-filled-tonal-icon-button-disabled-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-icon-opacity: var(--md-filled-tonal-icon-button-disabled-icon-opacity, 0.38);--_focus-icon-color: var(--md-filled-tonal-icon-button-focus-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_hover-icon-color: var(--md-filled-tonal-icon-button-hover-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_hover-state-layer-color: var(--md-filled-tonal-icon-button-hover-state-layer-color, var(--md-sys-color-on-secondary-container, #1d192b));--_hover-state-layer-opacity: var(--md-filled-tonal-icon-button-hover-state-layer-opacity, 0.08);--_icon-color: var(--md-filled-tonal-icon-button-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_icon-size: var(--md-filled-tonal-icon-button-icon-size, 24px);--_pressed-icon-color: var(--md-filled-tonal-icon-button-pressed-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_pressed-state-layer-color: var(--md-filled-tonal-icon-button-pressed-state-layer-color, var(--md-sys-color-on-secondary-container, #1d192b));--_pressed-state-layer-opacity: var(--md-filled-tonal-icon-button-pressed-state-layer-opacity, 0.12);--_selected-container-color: var(--md-filled-tonal-icon-button-selected-container-color, var(--md-sys-color-secondary-container, #e8def8));--_toggle-selected-focus-icon-color: var(--md-filled-tonal-icon-button-toggle-selected-focus-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_toggle-selected-hover-icon-color: var(--md-filled-tonal-icon-button-toggle-selected-hover-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_toggle-selected-hover-state-layer-color: var(--md-filled-tonal-icon-button-toggle-selected-hover-state-layer-color, var(--md-sys-color-on-secondary-container, #1d192b));--_toggle-selected-icon-color: var(--md-filled-tonal-icon-button-toggle-selected-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_toggle-selected-pressed-icon-color: var(--md-filled-tonal-icon-button-toggle-selected-pressed-icon-color, var(--md-sys-color-on-secondary-container, #1d192b));--_toggle-selected-pressed-state-layer-color: var(--md-filled-tonal-icon-button-toggle-selected-pressed-state-layer-color, var(--md-sys-color-on-secondary-container, #1d192b));--_unselected-container-color: var(--md-filled-tonal-icon-button-unselected-container-color, var(--md-sys-color-surface-container-highest, #e6e0e9));--_toggle-focus-icon-color: var(--md-filled-tonal-icon-button-toggle-focus-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_toggle-hover-icon-color: var(--md-filled-tonal-icon-button-toggle-hover-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_toggle-hover-state-layer-color: var(--md-filled-tonal-icon-button-toggle-hover-state-layer-color, var(--md-sys-color-on-surface-variant, #49454f));--_toggle-icon-color: var(--md-filled-tonal-icon-button-toggle-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_toggle-pressed-icon-color: var(--md-filled-tonal-icon-button-toggle-pressed-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_toggle-pressed-state-layer-color: var(--md-filled-tonal-icon-button-toggle-pressed-state-layer-color, var(--md-sys-color-on-surface-variant, #49454f));--_container-shape-start-start: var(--md-filled-tonal-icon-button-container-shape-start-start, var(--md-filled-tonal-icon-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-start-end: var(--md-filled-tonal-icon-button-container-shape-start-end, var(--md-filled-tonal-icon-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-end-end: var(--md-filled-tonal-icon-button-container-shape-end-end, var(--md-filled-tonal-icon-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-end-start: var(--md-filled-tonal-icon-button-container-shape-end-start, var(--md-filled-tonal-icon-button-container-shape, var(--md-sys-shape-corner-full, 9999px)))}.icon-button{color:var(--_icon-color);--md-ripple-hover-color: var(--_hover-state-layer-color);--md-ripple-hover-opacity: var(--_hover-state-layer-opacity);--md-ripple-pressed-color: var(--_pressed-state-layer-color);--md-ripple-pressed-opacity: var(--_pressed-state-layer-opacity)}.icon-button:hover{color:var(--_hover-icon-color)}.icon-button:focus{color:var(--_focus-icon-color)}.icon-button:active{color:var(--_pressed-icon-color)}.icon-button:is(:disabled,[aria-disabled=true]){color:var(--_disabled-icon-color)}.icon-button::before{background-color:var(--_container-color);border-radius:inherit;content:\"\";inset:0;position:absolute;z-index:-1}.icon-button:is(:disabled,[aria-disabled=true])::before{background-color:var(--_disabled-container-color);opacity:var(--_disabled-container-opacity)}.icon-button:is(:disabled,[aria-disabled=true]) .icon{opacity:var(--_disabled-icon-opacity)}.toggle-filled-tonal{--md-ripple-hover-color: var(--_toggle-hover-state-layer-color);--md-ripple-pressed-color: var(--_toggle-pressed-state-layer-color)}.toggle-filled-tonal:not(:disabled,[aria-disabled=true]){color:var(--_toggle-icon-color)}.toggle-filled-tonal:not(:disabled,[aria-disabled=true]):hover{color:var(--_toggle-hover-icon-color)}.toggle-filled-tonal:not(:disabled,[aria-disabled=true]):focus{color:var(--_toggle-focus-icon-color)}.toggle-filled-tonal:not(:disabled,[aria-disabled=true]):active{color:var(--_toggle-pressed-icon-color)}.toggle-filled-tonal:not(:disabled,[aria-disabled=true])::before{background-color:var(--_unselected-container-color)}.selected{--md-ripple-hover-color: var(--_toggle-selected-hover-state-layer-color);--md-ripple-pressed-color: var(--_toggle-selected-pressed-state-layer-color)}.selected:not(:disabled,[aria-disabled=true]){color:var(--_toggle-selected-icon-color)}.selected:not(:disabled,[aria-disabled=true]):hover{color:var(--_toggle-selected-hover-icon-color)}.selected:not(:disabled,[aria-disabled=true]):focus{color:var(--_toggle-selected-focus-icon-color)}.selected:not(:disabled,[aria-disabled=true]):active{color:var(--_toggle-selected-pressed-icon-color)}.selected:not(:disabled,[aria-disabled=true])::before{background-color:var(--_selected-container-color)}\n`;\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { styles } from './internal/filled-tonal-styles.js';\nimport { IconButton } from './internal/icon-button.js';\nimport { styles as sharedStyles } from './internal/shared-styles.js';\n/**\n * @summary Icon buttons help people take supplementary actions with a single\n * tap.\n *\n * @description\n * __Emphasis:__ Low emphasis – For optional or supplementary actions with the\n * least amount of prominence.\n *\n * __Rationale:__ The most compact and unobtrusive type of button, icon buttons\n * are used for optional supplementary actions such as \"Bookmark\" or \"Star.\"\n *\n * __Example usages:__\n * - Add to Favorites\n * - Print\n *\n * @final\n * @suppress {visibility}\n */\nexport let MdFilledTonalIconButton = class MdFilledTonalIconButton extends IconButton {\n    getRenderClasses() {\n        return {\n            ...super.getRenderClasses(),\n            'filled-tonal': true,\n            'toggle-filled-tonal': this.toggle,\n        };\n    }\n};\nMdFilledTonalIconButton.styles = [sharedStyles, styles];\nMdFilledTonalIconButton = __decorate([\n    customElement('md-filled-tonal-icon-button')\n], MdFilledTonalIconButton);\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./iconbutton/internal/standard-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{--_disabled-icon-color: var(--md-icon-button-disabled-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-icon-opacity: var(--md-icon-button-disabled-icon-opacity, 0.38);--_icon-size: var(--md-icon-button-icon-size, 24px);--_selected-focus-icon-color: var(--md-icon-button-selected-focus-icon-color, var(--md-sys-color-primary, #6750a4));--_selected-hover-icon-color: var(--md-icon-button-selected-hover-icon-color, var(--md-sys-color-primary, #6750a4));--_selected-hover-state-layer-color: var(--md-icon-button-selected-hover-state-layer-color, var(--md-sys-color-primary, #6750a4));--_selected-hover-state-layer-opacity: var(--md-icon-button-selected-hover-state-layer-opacity, 0.08);--_selected-icon-color: var(--md-icon-button-selected-icon-color, var(--md-sys-color-primary, #6750a4));--_selected-pressed-icon-color: var(--md-icon-button-selected-pressed-icon-color, var(--md-sys-color-primary, #6750a4));--_selected-pressed-state-layer-color: var(--md-icon-button-selected-pressed-state-layer-color, var(--md-sys-color-primary, #6750a4));--_selected-pressed-state-layer-opacity: var(--md-icon-button-selected-pressed-state-layer-opacity, 0.12);--_state-layer-height: var(--md-icon-button-state-layer-height, 40px);--_state-layer-shape: var(--md-icon-button-state-layer-shape, var(--md-sys-shape-corner-full, 9999px));--_state-layer-width: var(--md-icon-button-state-layer-width, 40px);--_focus-icon-color: var(--md-icon-button-focus-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-icon-color: var(--md-icon-button-hover-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-state-layer-color: var(--md-icon-button-hover-state-layer-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-state-layer-opacity: var(--md-icon-button-hover-state-layer-opacity, 0.08);--_icon-color: var(--md-icon-button-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_pressed-icon-color: var(--md-icon-button-pressed-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_pressed-state-layer-color: var(--md-icon-button-pressed-state-layer-color, var(--md-sys-color-on-surface-variant, #49454f));--_pressed-state-layer-opacity: var(--md-icon-button-pressed-state-layer-opacity, 0.12);--_container-shape-start-start: 0;--_container-shape-start-end: 0;--_container-shape-end-end: 0;--_container-shape-end-start: 0;--_container-height: 0;--_container-width: 0;height:var(--_state-layer-height);width:var(--_state-layer-width)}:host([touch-target=wrapper]){margin:max(0px,(48px - var(--_state-layer-height))/2) max(0px,(48px - var(--_state-layer-width))/2)}md-focus-ring{--md-focus-ring-shape-start-start: var(--_state-layer-shape);--md-focus-ring-shape-start-end: var(--_state-layer-shape);--md-focus-ring-shape-end-end: var(--_state-layer-shape);--md-focus-ring-shape-end-start: var(--_state-layer-shape)}.standard{background-color:rgba(0,0,0,0);color:var(--_icon-color);--md-ripple-hover-color: var(--_hover-state-layer-color);--md-ripple-hover-opacity: var(--_hover-state-layer-opacity);--md-ripple-pressed-color: var(--_pressed-state-layer-color);--md-ripple-pressed-opacity: var(--_pressed-state-layer-opacity)}.standard:hover{color:var(--_hover-icon-color)}.standard:focus{color:var(--_focus-icon-color)}.standard:active{color:var(--_pressed-icon-color)}.standard:is(:disabled,[aria-disabled=true]){color:var(--_disabled-icon-color)}md-ripple{border-radius:var(--_state-layer-shape)}.standard:is(:disabled,[aria-disabled=true]){opacity:var(--_disabled-icon-opacity)}.selected{--md-ripple-hover-color: var(--_selected-hover-state-layer-color);--md-ripple-hover-opacity: var(--_selected-hover-state-layer-opacity);--md-ripple-pressed-color: var(--_selected-pressed-state-layer-color);--md-ripple-pressed-opacity: var(--_selected-pressed-state-layer-opacity)}.selected:not(:disabled,[aria-disabled=true]){color:var(--_selected-icon-color)}.selected:not(:disabled,[aria-disabled=true]):hover{color:var(--_selected-hover-icon-color)}.selected:not(:disabled,[aria-disabled=true]):focus{color:var(--_selected-focus-icon-color)}.selected:not(:disabled,[aria-disabled=true]):active{color:var(--_selected-pressed-icon-color)}\n`;\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { IconButton } from './internal/icon-button.js';\nimport { styles as sharedStyles } from './internal/shared-styles.js';\nimport { styles } from './internal/standard-styles.js';\n/**\n * @summary Icon buttons help people take supplementary actions with a single\n * tap.\n *\n * @description\n * __Emphasis:__ Low emphasis – For optional or supplementary actions with the\n * least amount of prominence.\n *\n * __Rationale:__ The most compact and unobtrusive type of button, icon buttons\n * are used for optional supplementary actions such as \"Bookmark\" or \"Star.\"\n *\n * __Example usages:__\n * - Add to Favorites\n * - Print\n *\n * @final\n * @suppress {visibility}\n */\nexport let MdIconButton = class MdIconButton extends IconButton {\n    getRenderClasses() {\n        return {\n            ...super.getRenderClasses(),\n            'standard': true,\n        };\n    }\n};\nMdIconButton.styles = [sharedStyles, styles];\nMdIconButton = __decorate([\n    customElement('md-icon-button')\n], MdIconButton);\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./iconbutton/internal/outlined-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{--_container-height: var(--md-outlined-icon-button-container-height, 40px);--_container-width: var(--md-outlined-icon-button-container-width, 40px);--_disabled-icon-color: var(--md-outlined-icon-button-disabled-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-icon-opacity: var(--md-outlined-icon-button-disabled-icon-opacity, 0.38);--_disabled-selected-container-color: var(--md-outlined-icon-button-disabled-selected-container-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-selected-container-opacity: var(--md-outlined-icon-button-disabled-selected-container-opacity, 0.12);--_hover-state-layer-opacity: var(--md-outlined-icon-button-hover-state-layer-opacity, 0.08);--_icon-size: var(--md-outlined-icon-button-icon-size, 24px);--_pressed-state-layer-opacity: var(--md-outlined-icon-button-pressed-state-layer-opacity, 0.12);--_selected-container-color: var(--md-outlined-icon-button-selected-container-color, var(--md-sys-color-inverse-surface, #322f35));--_selected-focus-icon-color: var(--md-outlined-icon-button-selected-focus-icon-color, var(--md-sys-color-inverse-on-surface, #f5eff7));--_selected-hover-icon-color: var(--md-outlined-icon-button-selected-hover-icon-color, var(--md-sys-color-inverse-on-surface, #f5eff7));--_selected-hover-state-layer-color: var(--md-outlined-icon-button-selected-hover-state-layer-color, var(--md-sys-color-inverse-on-surface, #f5eff7));--_selected-icon-color: var(--md-outlined-icon-button-selected-icon-color, var(--md-sys-color-inverse-on-surface, #f5eff7));--_selected-pressed-icon-color: var(--md-outlined-icon-button-selected-pressed-icon-color, var(--md-sys-color-inverse-on-surface, #f5eff7));--_selected-pressed-state-layer-color: var(--md-outlined-icon-button-selected-pressed-state-layer-color, var(--md-sys-color-inverse-on-surface, #f5eff7));--_disabled-outline-color: var(--md-outlined-icon-button-disabled-outline-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-outline-opacity: var(--md-outlined-icon-button-disabled-outline-opacity, 0.12);--_focus-icon-color: var(--md-outlined-icon-button-focus-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-icon-color: var(--md-outlined-icon-button-hover-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-state-layer-color: var(--md-outlined-icon-button-hover-state-layer-color, var(--md-sys-color-on-surface-variant, #49454f));--_icon-color: var(--md-outlined-icon-button-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_outline-color: var(--md-outlined-icon-button-outline-color, var(--md-sys-color-outline, #79747e));--_outline-width: var(--md-outlined-icon-button-outline-width, 1px);--_pressed-icon-color: var(--md-outlined-icon-button-pressed-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_pressed-state-layer-color: var(--md-outlined-icon-button-pressed-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_container-shape-start-start: var(--md-outlined-icon-button-container-shape-start-start, var(--md-outlined-icon-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-start-end: var(--md-outlined-icon-button-container-shape-start-end, var(--md-outlined-icon-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-end-end: var(--md-outlined-icon-button-container-shape-end-end, var(--md-outlined-icon-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-end-start: var(--md-outlined-icon-button-container-shape-end-start, var(--md-outlined-icon-button-container-shape, var(--md-sys-shape-corner-full, 9999px)))}.outlined{background-color:rgba(0,0,0,0);color:var(--_icon-color);--md-ripple-hover-color: var(--_hover-state-layer-color);--md-ripple-hover-opacity: var(--_hover-state-layer-opacity);--md-ripple-pressed-color: var(--_pressed-state-layer-color);--md-ripple-pressed-opacity: var(--_pressed-state-layer-opacity)}.outlined::before{border-color:var(--_outline-color);border-width:var(--_outline-width)}.outlined:hover{color:var(--_hover-icon-color)}.outlined:focus{color:var(--_focus-icon-color)}.outlined:active{color:var(--_pressed-icon-color)}.outlined:is(:disabled,[aria-disabled=true]){color:var(--_disabled-icon-color)}.outlined:is(:disabled,[aria-disabled=true])::before{border-color:var(--_disabled-outline-color);opacity:var(--_disabled-outline-opacity)}.outlined:is(:disabled,[aria-disabled=true]) .icon{opacity:var(--_disabled-icon-opacity)}.outlined::before{block-size:100%;border-style:solid;border-radius:inherit;box-sizing:border-box;content:\"\";inline-size:100%;inset:0;pointer-events:none;position:absolute;z-index:-1}.outlined.selected::before{border-width:0}.selected{--md-ripple-hover-color: var(--_selected-hover-state-layer-color);--md-ripple-hover-opacity: var(--_hover-state-layer-opacity);--md-ripple-pressed-color: var(--_selected-pressed-state-layer-color);--md-ripple-pressed-opacity: var(--_pressed-state-layer-opacity)}.selected:not(:disabled,[aria-disabled=true]){color:var(--_selected-icon-color)}.selected:not(:disabled,[aria-disabled=true]):hover{color:var(--_selected-hover-icon-color)}.selected:not(:disabled,[aria-disabled=true]):focus{color:var(--_selected-focus-icon-color)}.selected:not(:disabled,[aria-disabled=true]):active{color:var(--_selected-pressed-icon-color)}.selected:not(:disabled,[aria-disabled=true])::before{background-color:var(--_selected-container-color)}.selected:is(:disabled,[aria-disabled=true])::before{background-color:var(--_disabled-selected-container-color);opacity:var(--_disabled-selected-container-opacity)}@media(forced-colors: active){:host(:is([disabled],[soft-disabled])){--_disabled-outline-opacity: 1}.selected::before{border-color:CanvasText;border-width:var(--_outline-width)}.selected:is(:disabled,[aria-disabled=true])::before{border-color:GrayText;opacity:1}}\n`;\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { IconButton } from './internal/icon-button.js';\nimport { styles } from './internal/outlined-styles.js';\nimport { styles as sharedStyles } from './internal/shared-styles.js';\n/**\n * @summary Icon buttons help people take supplementary actions with a single\n * tap.\n *\n * @description\n * __Emphasis:__ Low emphasis – For optional or supplementary actions with the\n * least amount of prominence.\n *\n * __Rationale:__ The most compact and unobtrusive type of button, icon buttons\n * are used for optional supplementary actions such as \"Bookmark\" or \"Star.\"\n *\n * __Example usages:__\n * - Add to Favorites\n * - Print\n *\n * @final\n * @suppress {visibility}\n */\nexport let MdOutlinedIconButton = class MdOutlinedIconButton extends IconButton {\n    getRenderClasses() {\n        return {\n            ...super.getRenderClasses(),\n            'outlined': true,\n        };\n    }\n};\nMdOutlinedIconButton.styles = [sharedStyles, styles];\nMdOutlinedIconButton = __decorate([\n    customElement('md-outlined-icon-button')\n], MdOutlinedIconButton);\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * Activates the first non-disabled item of a given array of items.\n *\n * @param items {Array<ListItem>} The items from which to activate the\n *     first item.\n * @param isActivatable Function to determine if an item can be  activated.\n *     Defaults to non-disabled items.\n */\nexport function activateFirstItem(items, isActivatable = (isItemNotDisabled)) {\n    // NOTE: These selector functions are static and not on the instance such\n    // that multiple operations can be chained and we do not have to re-query\n    // the DOM\n    const firstItem = getFirstActivatableItem(items, isActivatable);\n    if (firstItem) {\n        firstItem.tabIndex = 0;\n        firstItem.focus();\n    }\n    return firstItem;\n}\n/**\n * Activates the last non-disabled item of a given array of items.\n *\n * @param items {Array<ListItem>} The items from which to activate the\n *     last item.\n * @param isActivatable Function to determine if an item can be  activated.\n *     Defaults to non-disabled items.\n * @nocollapse\n */\nexport function activateLastItem(items, isActivatable = (isItemNotDisabled)) {\n    const lastItem = getLastActivatableItem(items, isActivatable);\n    if (lastItem) {\n        lastItem.tabIndex = 0;\n        lastItem.focus();\n    }\n    return lastItem;\n}\n/**\n * Deactivates the currently active item of a given array of items.\n *\n * @param items {Array<ListItem>} The items from which to deactivate the\n *     active item.\n * @param isActivatable Function to determine if an item can be  activated.\n *     Defaults to non-disabled items.\n * @return A record of the deleselcted activated item including the item and\n *     the index of the item or `null` if none are deactivated.\n * @nocollapse\n */\nexport function deactivateActiveItem(items, isActivatable = (isItemNotDisabled)) {\n    const activeItem = getActiveItem(items, isActivatable);\n    if (activeItem) {\n        activeItem.item.tabIndex = -1;\n    }\n    return activeItem;\n}\n/**\n * Retrieves the first activated item of a given array of items.\n *\n * @param items {Array<ListItem>} The items to search.\n * @param isActivatable Function to determine if an item can be  activated.\n *     Defaults to non-disabled items.\n * @return A record of the first activated item including the item and the\n *     index of the item or `null` if none are activated.\n * @nocollapse\n */\nexport function getActiveItem(items, isActivatable = (isItemNotDisabled)) {\n    for (let i = 0; i < items.length; i++) {\n        const item = items[i];\n        if (item.tabIndex === 0 && isActivatable(item)) {\n            return {\n                item,\n                index: i,\n            };\n        }\n    }\n    return null;\n}\n/**\n * Retrieves the first non-disabled item of a given array of items. This\n * the first item that is not disabled.\n *\n * @param items {Array<ListItem>} The items to search.\n * @param isActivatable Function to determine if an item can be  activated.\n *     Defaults to non-disabled items.\n * @return The first activatable item or `null` if none are activatable.\n * @nocollapse\n */\nexport function getFirstActivatableItem(items, isActivatable = (isItemNotDisabled)) {\n    for (const item of items) {\n        if (isActivatable(item)) {\n            return item;\n        }\n    }\n    return null;\n}\n/**\n * Retrieves the last non-disabled item of a given array of items.\n *\n * @param items {Array<ListItem>} The items to search.\n * @param isActivatable Function to determine if an item can be  activated.\n *     Defaults to non-disabled items.\n * @return The last activatable item or `null` if none are activatable.\n * @nocollapse\n */\nexport function getLastActivatableItem(items, isActivatable = (isItemNotDisabled)) {\n    for (let i = items.length - 1; i >= 0; i--) {\n        const item = items[i];\n        if (isActivatable(item)) {\n            return item;\n        }\n    }\n    return null;\n}\n/**\n * Retrieves the next non-disabled item of a given array of items.\n *\n * @param items {Array<ListItem>} The items to search.\n * @param index {{index: number}} The index to search from.\n * @param isActivatable Function to determine if an item can be  activated.\n *     Defaults to non-disabled items.\n * @param wrap If true, then the next item at the end of the list is the first\n *     item. Defaults to true.\n * @return The next activatable item or `null` if none are activatable.\n */\nexport function getNextItem(items, index, isActivatable = (isItemNotDisabled), wrap = true) {\n    for (let i = 1; i < items.length; i++) {\n        const nextIndex = (i + index) % items.length;\n        if (nextIndex < index && !wrap) {\n            // Return if the index loops back to the beginning and not wrapping.\n            return null;\n        }\n        const item = items[nextIndex];\n        if (isActivatable(item)) {\n            return item;\n        }\n    }\n    return items[index] ? items[index] : null;\n}\n/**\n * Retrieves the previous non-disabled item of a given array of items.\n *\n * @param items {Array<ListItem>} The items to search.\n * @param index {{index: number}} The index to search from.\n * @param isActivatable Function to determine if an item can be  activated.\n *     Defaults to non-disabled items.\n * @param wrap If true, then the previous item at the beginning of the list is\n *     the last item. Defaults to true.\n * @return The previous activatable item or `null` if none are activatable.\n */\nexport function getPrevItem(items, index, isActivatable = (isItemNotDisabled), wrap = true) {\n    for (let i = 1; i < items.length; i++) {\n        const prevIndex = (index - i + items.length) % items.length;\n        if (prevIndex > index && !wrap) {\n            // Return if the index loops back to the end and not wrapping.\n            return null;\n        }\n        const item = items[prevIndex];\n        if (isActivatable(item)) {\n            return item;\n        }\n    }\n    return items[index] ? items[index] : null;\n}\n/**\n * Activates the next item and focuses it. If nothing is currently activated,\n * activates the first item.\n */\nexport function activateNextItem(items, activeItemRecord, isActivatable = (isItemNotDisabled), wrap = true) {\n    if (activeItemRecord) {\n        const next = getNextItem(items, activeItemRecord.index, isActivatable, wrap);\n        if (next) {\n            next.tabIndex = 0;\n            next.focus();\n        }\n        return next;\n    }\n    else {\n        return activateFirstItem(items, isActivatable);\n    }\n}\n/**\n * Activates the previous item and focuses it. If nothing is currently\n * activated, activates the last item.\n */\nexport function activatePreviousItem(items, activeItemRecord, isActivatable = (isItemNotDisabled), wrap = true) {\n    if (activeItemRecord) {\n        const prev = getPrevItem(items, activeItemRecord.index, isActivatable, wrap);\n        if (prev) {\n            prev.tabIndex = 0;\n            prev.focus();\n        }\n        return prev;\n    }\n    else {\n        return activateLastItem(items, isActivatable);\n    }\n}\n/**\n * Creates an event that requests the parent md-list to deactivate all other\n * items.\n */\nexport function createDeactivateItemsEvent() {\n    return new Event('deactivate-items', { bubbles: true, composed: true });\n}\n/**\n * Creates an event that requests the menu to set `tabindex=0` on the item and\n * focus it. We use this pattern because List keeps track of what element is\n * active in the List by maintaining tabindex. We do not want list items\n * to set tabindex on themselves or focus themselves so that we can organize all\n * that logic in the parent List and Menus, and list item stays as dumb as\n * possible.\n */\nexport function createRequestActivationEvent() {\n    return new Event('request-activation', { bubbles: true, composed: true });\n}\n/**\n * The default `isActivatable` function, which checks if an item is not\n * disabled.\n *\n * @param item The item to check.\n * @return true if `item.disabled` is `false.\n */\nfunction isItemNotDisabled(item) {\n    return !item.disabled;\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { activateFirstItem, activateLastItem, activateNextItem, activatePreviousItem, getActiveItem, getFirstActivatableItem, } from './list-navigation-helpers.js';\n// TODO: move this file to List and make List use this\n/**\n * Default keys that trigger navigation.\n */\n// tslint:disable:enforce-name-casing Following Enum style\nexport const NavigableKeys = {\n    ArrowDown: 'ArrowDown',\n    ArrowLeft: 'ArrowLeft',\n    ArrowUp: 'ArrowUp',\n    ArrowRight: 'ArrowRight',\n    Home: 'Home',\n    End: 'End',\n};\n/**\n * A controller that handles list keyboard navigation and item management.\n */\nexport class ListController {\n    constructor(config) {\n        /**\n         * Handles keyboard navigation. Should be bound to the node that will act as\n         * the List.\n         */\n        this.handleKeydown = (event) => {\n            const key = event.key;\n            if (event.defaultPrevented || !this.isNavigableKey(key)) {\n                return;\n            }\n            // do not use this.items directly in upcoming calculations so we don't\n            // re-query the DOM unnecessarily\n            const items = this.items;\n            if (!items.length) {\n                return;\n            }\n            const activeItemRecord = getActiveItem(items, this.isActivatable);\n            event.preventDefault();\n            const isRtl = this.isRtl();\n            const inlinePrevious = isRtl\n                ? NavigableKeys.ArrowRight\n                : NavigableKeys.ArrowLeft;\n            const inlineNext = isRtl\n                ? NavigableKeys.ArrowLeft\n                : NavigableKeys.ArrowRight;\n            let nextActiveItem = null;\n            switch (key) {\n                // Activate the next item\n                case NavigableKeys.ArrowDown:\n                case inlineNext:\n                    nextActiveItem = activateNextItem(items, activeItemRecord, this.isActivatable, this.wrapNavigation());\n                    break;\n                // Activate the previous item\n                case NavigableKeys.ArrowUp:\n                case inlinePrevious:\n                    nextActiveItem = activatePreviousItem(items, activeItemRecord, this.isActivatable, this.wrapNavigation());\n                    break;\n                // Activate the first item\n                case NavigableKeys.Home:\n                    nextActiveItem = activateFirstItem(items, this.isActivatable);\n                    break;\n                // Activate the last item\n                case NavigableKeys.End:\n                    nextActiveItem = activateLastItem(items, this.isActivatable);\n                    break;\n                default:\n                    break;\n            }\n            if (nextActiveItem &&\n                activeItemRecord &&\n                activeItemRecord.item !== nextActiveItem) {\n                // If a new item was activated, remove the tabindex of the previous\n                // activated item.\n                activeItemRecord.item.tabIndex = -1;\n            }\n        };\n        /**\n         * Listener to be bound to the `deactivate-items` item event.\n         */\n        this.onDeactivateItems = () => {\n            const items = this.items;\n            for (const item of items) {\n                this.deactivateItem(item);\n            }\n        };\n        /**\n         * Listener to be bound to the `request-activation` item event..\n         */\n        this.onRequestActivation = (event) => {\n            this.onDeactivateItems();\n            const target = event.target;\n            this.activateItem(target);\n            target.focus();\n        };\n        /**\n         * Listener to be bound to the `slotchange` event for the slot that renders\n         * the items.\n         */\n        this.onSlotchange = () => {\n            const items = this.items;\n            // Whether we have encountered an item that has been activated\n            let encounteredActivated = false;\n            for (const item of items) {\n                const isActivated = !item.disabled && item.tabIndex > -1;\n                if (isActivated && !encounteredActivated) {\n                    encounteredActivated = true;\n                    item.tabIndex = 0;\n                    continue;\n                }\n                // Deactivate the rest including disabled\n                item.tabIndex = -1;\n            }\n            if (encounteredActivated) {\n                return;\n            }\n            const firstActivatableItem = getFirstActivatableItem(items, this.isActivatable);\n            if (!firstActivatableItem) {\n                return;\n            }\n            firstActivatableItem.tabIndex = 0;\n        };\n        const { isItem, getPossibleItems, isRtl, deactivateItem, activateItem, isNavigableKey, isActivatable, wrapNavigation, } = config;\n        this.isItem = isItem;\n        this.getPossibleItems = getPossibleItems;\n        this.isRtl = isRtl;\n        this.deactivateItem = deactivateItem;\n        this.activateItem = activateItem;\n        this.isNavigableKey = isNavigableKey;\n        this.isActivatable = isActivatable;\n        this.wrapNavigation = wrapNavigation ?? (() => true);\n    }\n    /**\n     * The items being managed by the list. Additionally, attempts to see if the\n     * object has a sub-item in the `.item` property.\n     */\n    get items() {\n        const maybeItems = this.getPossibleItems();\n        const items = [];\n        for (const itemOrParent of maybeItems) {\n            const isItem = this.isItem(itemOrParent);\n            // if the item is a list item, add it to the list of items\n            if (isItem) {\n                items.push(itemOrParent);\n                continue;\n            }\n            // If the item exposes an `item` property check if it is a list item.\n            const subItem = itemOrParent.item;\n            if (subItem && this.isItem(subItem)) {\n                items.push(subItem);\n            }\n        }\n        return items;\n    }\n    /**\n     * Activates the next item in the list. If at the end of the list, the first\n     * item will be activated.\n     *\n     * @return The activated list item or `null` if there are no items.\n     */\n    activateNextItem() {\n        const items = this.items;\n        const activeItemRecord = getActiveItem(items, this.isActivatable);\n        if (activeItemRecord) {\n            activeItemRecord.item.tabIndex = -1;\n        }\n        return activateNextItem(items, activeItemRecord, this.isActivatable, this.wrapNavigation());\n    }\n    /**\n     * Activates the previous item in the list. If at the start of the list, the\n     * last item will be activated.\n     *\n     * @return The activated list item or `null` if there are no items.\n     */\n    activatePreviousItem() {\n        const items = this.items;\n        const activeItemRecord = getActiveItem(items, this.isActivatable);\n        if (activeItemRecord) {\n            activeItemRecord.item.tabIndex = -1;\n        }\n        return activatePreviousItem(items, activeItemRecord, this.isActivatable, this.wrapNavigation());\n    }\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { html, isServer, LitElement } from 'lit';\nimport { queryAssignedElements } from 'lit/decorators.js';\nimport { ListController, NavigableKeys } from './list-controller.js';\nconst NAVIGABLE_KEY_SET = new Set(Object.values(NavigableKeys));\n// tslint:disable-next-line:enforce-comments-on-exported-symbols\nexport class List extends LitElement {\n    /** @export */\n    get items() {\n        return this.listController.items;\n    }\n    constructor() {\n        super();\n        this.listController = new ListController({\n            isItem: (item) => item.hasAttribute('md-list-item'),\n            getPossibleItems: () => this.slotItems,\n            isRtl: () => getComputedStyle(this).direction === 'rtl',\n            deactivateItem: (item) => {\n                item.tabIndex = -1;\n            },\n            activateItem: (item) => {\n                item.tabIndex = 0;\n            },\n            isNavigableKey: (key) => NAVIGABLE_KEY_SET.has(key),\n            isActivatable: (item) => !item.disabled && item.type !== 'text',\n        });\n        this.internals = \n        // Cast needed for closure\n        this.attachInternals();\n        if (!isServer) {\n            this.internals.role = 'list';\n            this.addEventListener('keydown', this.listController.handleKeydown);\n        }\n    }\n    render() {\n        return html `\n      <slot\n        @deactivate-items=${this.listController.onDeactivateItems}\n        @request-activation=${this.listController.onRequestActivation}\n        @slotchange=${this.listController.onSlotchange}>\n      </slot>\n    `;\n    }\n    /**\n     * Activates the next item in the list. If at the end of the list, the first\n     * item will be activated.\n     *\n     * @return The activated list item or `null` if there are no items.\n     */\n    activateNextItem() {\n        return this.listController.activateNextItem();\n    }\n    /**\n     * Activates the previous item in the list. If at the start of the list, the\n     * last item will be activated.\n     *\n     * @return The activated list item or `null` if there are no items.\n     */\n    activatePreviousItem() {\n        return this.listController.activatePreviousItem();\n    }\n}\n__decorate([\n    queryAssignedElements({ flatten: true })\n], List.prototype, \"slotItems\", void 0);\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./list/internal/list-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{background:var(--md-list-container-color, var(--md-sys-color-surface, #fef7ff));color:unset;display:flex;flex-direction:column;outline:none;padding:8px 0;position:relative}\n`;\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { List } from './internal/list.js';\nimport { styles } from './internal/list-styles.js';\n/**\n * @summary Lists are continuous, vertical indexes of text or images.\n *\n * @description\n * Lists consist of one or more list items, and can contain actions represented\n * by icons and text. List items come in three sizes: one-line, two-line, and\n * three-line.\n *\n * __Takeaways:__\n *\n * - Lists should be sorted in logical ways that make content easy to scan, such\n *   as alphabetical, numerical, chronological, or by user preference.\n * - Lists present content in a way that makes it easy to identify a specific\n *   item in a collection and act on it.\n * - Lists should present icons, text, and actions in a consistent format.\n *\n * @final\n * @suppress {visibility}\n */\nexport let MdList = class MdList extends List {\n};\nMdList.styles = [styles];\nMdList = __decorate([\n    customElement('md-list')\n], MdList);\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { html, LitElement } from 'lit';\nimport { property, queryAll } from 'lit/decorators.js';\n/**\n * An item layout component.\n */\nexport class Item extends LitElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * Only needed for SSR.\n         *\n         * Add this attribute when an item has two lines to avoid a Flash Of Unstyled\n         * Content. This attribute is not needed for single line items or items with\n         * three or more lines.\n         */\n        this.multiline = false;\n    }\n    render() {\n        return html `\n      <slot name=\"container\"></slot>\n      <slot class=\"non-text\" name=\"start\"></slot>\n      <div class=\"text\">\n        <slot name=\"overline\" @slotchange=${this.handleTextSlotChange}></slot>\n        <slot\n          class=\"default-slot\"\n          @slotchange=${this.handleTextSlotChange}></slot>\n        <slot name=\"headline\" @slotchange=${this.handleTextSlotChange}></slot>\n        <slot\n          name=\"supporting-text\"\n          @slotchange=${this.handleTextSlotChange}></slot>\n      </div>\n      <slot class=\"non-text\" name=\"trailing-supporting-text\"></slot>\n      <slot class=\"non-text\" name=\"end\"></slot>\n    `;\n    }\n    handleTextSlotChange() {\n        // Check if there's more than one text slot with content. If so, the item is\n        // multiline, which has a different min-height than single line items.\n        let isMultiline = false;\n        let slotsWithContent = 0;\n        for (const slot of this.textSlots) {\n            if (slotHasContent(slot)) {\n                slotsWithContent += 1;\n            }\n            if (slotsWithContent > 1) {\n                isMultiline = true;\n                break;\n            }\n        }\n        this.multiline = isMultiline;\n    }\n}\n__decorate([\n    property({ type: Boolean, reflect: true })\n], Item.prototype, \"multiline\", void 0);\n__decorate([\n    queryAll('.text slot')\n], Item.prototype, \"textSlots\", void 0);\nfunction slotHasContent(slot) {\n    for (const node of slot.assignedNodes({ flatten: true })) {\n        // Assume there's content if there's an element slotted in\n        const isElement = node.nodeType === Node.ELEMENT_NODE;\n        // If there's only text nodes for the default slot, check if there's\n        // non-whitespace.\n        const isTextWithContent = node.nodeType === Node.TEXT_NODE && node.textContent?.match(/\\S/);\n        if (isElement || isTextWithContent) {\n            return true;\n        }\n    }\n    return false;\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./labs/item/internal/item-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{color:var(--md-sys-color-on-surface, #1d1b20);font-family:var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto));font-size:var(--md-sys-typescale-body-large-size, 1rem);font-weight:var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400));line-height:var(--md-sys-typescale-body-large-line-height, 1.5rem);align-items:center;box-sizing:border-box;display:flex;gap:16px;min-height:56px;overflow:hidden;padding:12px 16px;position:relative;text-overflow:ellipsis}:host([multiline]){min-height:72px}[name=overline]{color:var(--md-sys-color-on-surface-variant, #49454f);font-family:var(--md-sys-typescale-label-small-font, var(--md-ref-typeface-plain, Roboto));font-size:var(--md-sys-typescale-label-small-size, 0.6875rem);font-weight:var(--md-sys-typescale-label-small-weight, var(--md-ref-typeface-weight-medium, 500));line-height:var(--md-sys-typescale-label-small-line-height, 1rem)}[name=supporting-text]{color:var(--md-sys-color-on-surface-variant, #49454f);font-family:var(--md-sys-typescale-body-medium-font, var(--md-ref-typeface-plain, Roboto));font-size:var(--md-sys-typescale-body-medium-size, 0.875rem);font-weight:var(--md-sys-typescale-body-medium-weight, var(--md-ref-typeface-weight-regular, 400));line-height:var(--md-sys-typescale-body-medium-line-height, 1.25rem)}[name=trailing-supporting-text]{color:var(--md-sys-color-on-surface-variant, #49454f);font-family:var(--md-sys-typescale-label-small-font, var(--md-ref-typeface-plain, Roboto));font-size:var(--md-sys-typescale-label-small-size, 0.6875rem);font-weight:var(--md-sys-typescale-label-small-weight, var(--md-ref-typeface-weight-medium, 500));line-height:var(--md-sys-typescale-label-small-line-height, 1rem)}[name=container]::slotted(*){inset:0;position:absolute}.default-slot{display:inline}.default-slot,.text ::slotted(*){overflow:hidden;text-overflow:ellipsis}.text{display:flex;flex:1;flex-direction:column;overflow:hidden}\n`;\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { Item } from './internal/item.js';\nimport { styles } from './internal/item-styles.js';\n/**\n * An item layout component that can be used inside list items to give them\n * their customizable structure.\n *\n * `<md-item>` does not have any functionality, which must be added by the\n * component using it.\n *\n * All text will wrap unless `white-space: nowrap` is set on the item or any of\n * its children.\n *\n * Slots available:\n * - `<default>`: The headline, or custom content.\n * - `headline`: The first line.\n * - `supporting-text`: Supporting text lines underneath the headline.\n * - `trailing-supporting-text`: A small text snippet at the end of the item.\n * - `start`: Any leading content, such as icons, avatars, or checkboxes.\n * - `end`: Any trailing content, such as icons and buttons.\n * - `container`: Background container content, intended for adding additional\n *     styles, such as ripples or focus rings.\n *\n * @example\n * ```html\n * <md-item>Single line</md-item>\n *\n * <md-item>\n *   <div class=\"custom-content\">...</div>\n * </md-item>\n *\n * <!-- Classic 1 to 3+ line list items -->\n * <md-item>\n *   <md-icon slot=\"start\">image</md-icon>\n *   <div slot=\"overline\">Overline</div>\n *   <div slot=\"headline\">Headline</div>\n *   <div=\"supporting-text\">Supporting text</div>\n *   <div=\"trailing-supporting-text\">Trailing</div>\n *   <md-icon slot=\"end\">image</md-icon>\n * </md-item>\n * ```\n *\n * When wrapping `<md-item>`, forward the available slots to use the same slot\n * structure for the wrapping component (this is what `<md-list-item>` does).\n *\n * @example\n * ```html\n * <md-item>\n *   <slot></slot>\n *   <slot name=\"overline\" slot=\"overline\"></slot>\n *   <slot name=\"headline\" slot=\"headline\"></slot>\n *   <slot name=\"supporting-text\" slot=\"supporting-text\"></slot>\n *   <slot name=\"trailing-supporting-text\"\n *       slot=\"trailing-supporting-text\"></slot>\n *   <slot name=\"start\" slot=\"start\"></slot>\n *   <slot name=\"end\" slot=\"end\"></slot>\n * </md-item>\n * ```\n *\n * @final\n * @suppress {visibility}\n */\nexport let MdItem = class MdItem extends Item {\n};\nMdItem.styles = [styles];\nMdItem = __decorate([\n    customElement('md-item')\n], MdItem);\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport '../../../focus/md-focus-ring.js';\nimport '../../../labs/item/item.js';\nimport '../../../ripple/ripple.js';\nimport { html, LitElement, nothing } from 'lit';\nimport { property, query } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { literal, html as staticHtml } from 'lit/static-html.js';\nimport { mixinDelegatesAria } from '../../../internal/aria/delegate.js';\nimport { createRequestActivationEvent, } from '../list-navigation-helpers.js';\n// Separate variable needed for closure.\nconst listItemBaseClass = mixinDelegatesAria(LitElement);\n/**\n * @fires request-activation {Event} Requests the list to set `tabindex=0` on\n * the item and focus it. --bubbles --composed\n */\nexport class ListItemEl extends listItemBaseClass {\n    constructor() {\n        super(...arguments);\n        /**\n         * Disables the item and makes it non-selectable and non-interactive.\n         */\n        this.disabled = false;\n        /**\n         * Sets the behavior of the list item, defaults to \"text\". Change to \"link\" or\n         * \"button\" for interactive items.\n         */\n        this.type = 'text';\n        /**\n         * READONLY. Sets the `md-list-item` attribute on the element.\n         */\n        this.isListItem = true;\n        /**\n         * Sets the underlying `HTMLAnchorElement`'s `href` resource attribute.\n         */\n        this.href = '';\n        /**\n         * Sets the underlying `HTMLAnchorElement`'s `target` attribute when `href` is\n         * set.\n         */\n        this.target = '';\n    }\n    get isDisabled() {\n        return this.disabled && this.type !== 'link';\n    }\n    willUpdate(changed) {\n        if (this.href) {\n            this.type = 'link';\n        }\n        super.willUpdate(changed);\n    }\n    render() {\n        return this.renderListItem(html `\n      <md-item>\n        <div slot=\"container\">\n          ${this.renderRipple()} ${this.renderFocusRing()}\n        </div>\n        <slot name=\"start\" slot=\"start\"></slot>\n        <slot name=\"end\" slot=\"end\"></slot>\n        ${this.renderBody()}\n      </md-item>\n    `);\n    }\n    /**\n     * Renders the root list item.\n     *\n     * @param content the child content of the list item.\n     */\n    renderListItem(content) {\n        const isAnchor = this.type === 'link';\n        let tag;\n        switch (this.type) {\n            case 'link':\n                tag = literal `a`;\n                break;\n            case 'button':\n                tag = literal `button`;\n                break;\n            default:\n            case 'text':\n                tag = literal `li`;\n                break;\n        }\n        const isInteractive = this.type !== 'text';\n        // TODO(b/265339866): announce \"button\"/\"link\" inside of a list item. Until\n        // then all are \"listitem\" roles for correct announcement.\n        const target = isAnchor && !!this.target ? this.target : nothing;\n        return staticHtml `\n      <${tag}\n        id=\"item\"\n        tabindex=\"${this.isDisabled || !isInteractive ? -1 : 0}\"\n        ?disabled=${this.isDisabled}\n        role=\"listitem\"\n        aria-selected=${this.ariaSelected || nothing}\n        aria-checked=${this.ariaChecked || nothing}\n        aria-expanded=${this.ariaExpanded || nothing}\n        aria-haspopup=${this.ariaHasPopup || nothing}\n        class=\"list-item ${classMap(this.getRenderClasses())}\"\n        href=${this.href || nothing}\n        target=${target}\n        @focus=${this.onFocus}\n      >${content}</${tag}>\n    `;\n    }\n    /**\n     * Handles rendering of the ripple element.\n     */\n    renderRipple() {\n        if (this.type === 'text') {\n            return nothing;\n        }\n        return html ` <md-ripple\n      part=\"ripple\"\n      for=\"item\"\n      ?disabled=${this.isDisabled}></md-ripple>`;\n    }\n    /**\n     * Handles rendering of the focus ring.\n     */\n    renderFocusRing() {\n        if (this.type === 'text') {\n            return nothing;\n        }\n        return html ` <md-focus-ring\n      @visibility-changed=${this.onFocusRingVisibilityChanged}\n      part=\"focus-ring\"\n      for=\"item\"\n      inward></md-focus-ring>`;\n    }\n    onFocusRingVisibilityChanged(e) { }\n    /**\n     * Classes applied to the list item root.\n     */\n    getRenderClasses() {\n        return { 'disabled': this.isDisabled };\n    }\n    /**\n     * Handles rendering the headline and supporting text.\n     */\n    renderBody() {\n        return html `\n      <slot></slot>\n      <slot name=\"overline\" slot=\"overline\"></slot>\n      <slot name=\"headline\" slot=\"headline\"></slot>\n      <slot name=\"supporting-text\" slot=\"supporting-text\"></slot>\n      <slot\n        name=\"trailing-supporting-text\"\n        slot=\"trailing-supporting-text\"></slot>\n    `;\n    }\n    onFocus() {\n        if (this.tabIndex !== -1) {\n            return;\n        }\n        // Handles the case where the user clicks on the element and then tabs.\n        this.dispatchEvent(createRequestActivationEvent());\n    }\n    focus() {\n        // TODO(b/300334509): needed for some cases where delegatesFocus doesn't\n        // work programmatically like in FF and select-option\n        this.listItemRoot?.focus();\n    }\n}\n/** @nocollapse */\nListItemEl.shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n};\n__decorate([\n    property({ type: Boolean, reflect: true })\n], ListItemEl.prototype, \"disabled\", void 0);\n__decorate([\n    property({ reflect: true })\n], ListItemEl.prototype, \"type\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'md-list-item', reflect: true })\n], ListItemEl.prototype, \"isListItem\", void 0);\n__decorate([\n    property()\n], ListItemEl.prototype, \"href\", void 0);\n__decorate([\n    property()\n], ListItemEl.prototype, \"target\", void 0);\n__decorate([\n    query('.list-item')\n], ListItemEl.prototype, \"listItemRoot\", void 0);\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./list/internal/listitem/list-item-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{display:flex;-webkit-tap-highlight-color:rgba(0,0,0,0);--md-ripple-hover-color: var(--md-list-item-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--md-ripple-hover-opacity: var(--md-list-item-hover-state-layer-opacity, 0.08);--md-ripple-pressed-color: var(--md-list-item-pressed-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--md-ripple-pressed-opacity: var(--md-list-item-pressed-state-layer-opacity, 0.12)}:host(:is([type=button]:not([disabled]),[type=link])){cursor:pointer}md-focus-ring{z-index:1;--md-focus-ring-shape: 8px}a,button,li{background:none;border:none;cursor:inherit;padding:0;margin:0;text-align:unset;text-decoration:none}.list-item{border-radius:inherit;display:flex;flex:1;max-width:inherit;min-width:inherit;outline:none;-webkit-tap-highlight-color:rgba(0,0,0,0);width:100%}.list-item.interactive{cursor:pointer}.list-item.disabled{opacity:var(--md-list-item-disabled-opacity, 0.3);pointer-events:none}[slot=container]{pointer-events:none}md-ripple{border-radius:inherit}md-item{border-radius:inherit;flex:1;height:100%;color:var(--md-list-item-label-text-color, var(--md-sys-color-on-surface, #1d1b20));font-family:var(--md-list-item-label-text-font, var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto)));font-size:var(--md-list-item-label-text-size, var(--md-sys-typescale-body-large-size, 1rem));line-height:var(--md-list-item-label-text-line-height, var(--md-sys-typescale-body-large-line-height, 1.5rem));font-weight:var(--md-list-item-label-text-weight, var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400)));min-height:var(--md-list-item-one-line-container-height, 56px);padding-top:var(--md-list-item-top-space, 12px);padding-bottom:var(--md-list-item-bottom-space, 12px);padding-inline-start:var(--md-list-item-leading-space, 16px);padding-inline-end:var(--md-list-item-trailing-space, 16px)}md-item[multiline]{min-height:var(--md-list-item-two-line-container-height, 72px)}[slot=supporting-text]{color:var(--md-list-item-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));font-family:var(--md-list-item-supporting-text-font, var(--md-sys-typescale-body-medium-font, var(--md-ref-typeface-plain, Roboto)));font-size:var(--md-list-item-supporting-text-size, var(--md-sys-typescale-body-medium-size, 0.875rem));line-height:var(--md-list-item-supporting-text-line-height, var(--md-sys-typescale-body-medium-line-height, 1.25rem));font-weight:var(--md-list-item-supporting-text-weight, var(--md-sys-typescale-body-medium-weight, var(--md-ref-typeface-weight-regular, 400)))}[slot=trailing-supporting-text]{color:var(--md-list-item-trailing-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));font-family:var(--md-list-item-trailing-supporting-text-font, var(--md-sys-typescale-label-small-font, var(--md-ref-typeface-plain, Roboto)));font-size:var(--md-list-item-trailing-supporting-text-size, var(--md-sys-typescale-label-small-size, 0.6875rem));line-height:var(--md-list-item-trailing-supporting-text-line-height, var(--md-sys-typescale-label-small-line-height, 1rem));font-weight:var(--md-list-item-trailing-supporting-text-weight, var(--md-sys-typescale-label-small-weight, var(--md-ref-typeface-weight-medium, 500)))}:is([slot=start],[slot=end])::slotted(*){fill:currentColor}[slot=start]{color:var(--md-list-item-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f))}[slot=end]{color:var(--md-list-item-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f))}@media(forced-colors: active){.disabled slot{color:GrayText}.list-item.disabled{color:GrayText;opacity:1}}\n`;\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { ListItemEl as ListItem } from './internal/listitem/list-item.js';\nimport { styles } from './internal/listitem/list-item-styles.js';\n/**\n * @summary\n * Lists are continuous, vertical indexes of text or images. Items are placed\n * inside the list.\n *\n * @description\n * Lists consist of one or more list items, and can contain actions represented\n * by icons and text. List items come in three sizes: one-line, two-line, and\n * three-line.\n *\n * __Takeaways:__\n *\n * - Lists should be sorted in logical ways that make content easy to scan, such\n *   as alphabetical, numerical, chronological, or by user preference.\n * - Lists present content in a way that makes it easy to identify a specific\n *   item in a collection and act on it.\n * - Lists should present icons, text, and actions in a consistent format.\n *\n * Acceptable slot child variants are:\n *\n * - `img[slot=end]`\n * - `img[slot=start]`\n *\n *  @example\n * ```html\n * <md-list-item\n *     headline=\"User Name\"\n *     supportingText=\"user@name.com\">\n *   <md-icon slot=\"start\">account_circle</md-icon>\n *   <md-icon slot=\"end\">check</md-icon>\n * </md-list-item>\n * ```\n *\n * @example\n *\n * @final\n * @suppress {visibility}\n */\nexport let MdListItem = class MdListItem extends ListItem {\n};\nMdListItem.styles = [styles];\nMdListItem = __decorate([\n    customElement('md-list-item')\n], MdListItem);\n", "/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport { noChange } from '../lit-html.js';\nimport { directive, Directive, PartType, } from '../directive.js';\nconst important = 'important';\n// The leading space is important\nconst importantFlag = ' !' + important;\n// How many characters to remove from a value, as a negative number\nconst flagTrim = 0 - importantFlag.length;\nclass StyleMapDirective extends Directive {\n    constructor(partInfo) {\n        super(partInfo);\n        if (partInfo.type !== PartType.ATTRIBUTE ||\n            partInfo.name !== 'style' ||\n            partInfo.strings?.length > 2) {\n            throw new Error('The `styleMap` directive must be used in the `style` attribute ' +\n                'and must be the only part in the attribute.');\n        }\n    }\n    render(styleInfo) {\n        return Object.keys(styleInfo).reduce((style, prop) => {\n            const value = styleInfo[prop];\n            if (value == null) {\n                return style;\n            }\n            // Convert property names from camel-case to dash-case, i.e.:\n            //  `backgroundColor` -> `background-color`\n            // Vendor-prefixed names need an extra `-` appended to front:\n            //  `webkitAppearance` -> `-webkit-appearance`\n            // Exception is any property name containing a dash, including\n            // custom properties; we assume these are already dash-cased i.e.:\n            //  `--my-button-color` --> `--my-button-color`\n            prop = prop.includes('-')\n                ? prop\n                : prop\n                    .replace(/(?:^(webkit|moz|ms|o)|)(?=[A-Z])/g, '-$&')\n                    .toLowerCase();\n            return style + `${prop}:${value};`;\n        }, '');\n    }\n    update(part, [styleInfo]) {\n        const { style } = part.element;\n        if (this._previousStyleProperties === undefined) {\n            this._previousStyleProperties = new Set(Object.keys(styleInfo));\n            return this.render(styleInfo);\n        }\n        // Remove old properties that no longer exist in styleInfo\n        for (const name of this._previousStyleProperties) {\n            // If the name isn't in styleInfo or it's null/undefined\n            if (styleInfo[name] == null) {\n                this._previousStyleProperties.delete(name);\n                if (name.includes('-')) {\n                    style.removeProperty(name);\n                }\n                else {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    style[name] = null;\n                }\n            }\n        }\n        // Add or update properties\n        for (const name in styleInfo) {\n            const value = styleInfo[name];\n            if (value != null) {\n                this._previousStyleProperties.add(name);\n                const isImportant = typeof value === 'string' && value.endsWith(importantFlag);\n                if (name.includes('-') || isImportant) {\n                    style.setProperty(name, isImportant\n                        ? value.slice(0, flagTrim)\n                        : value, isImportant ? important : '');\n                }\n                else {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    style[name] = value;\n                }\n            }\n        }\n        return noChange;\n    }\n}\n/**\n * A directive that applies CSS properties to an element.\n *\n * `styleMap` can only be used in the `style` attribute and must be the only\n * expression in the attribute. It takes the property names in the\n * {@link StyleInfo styleInfo} object and adds the properties to the inline\n * style of the element.\n *\n * Property names with dashes (`-`) are assumed to be valid CSS\n * property names and set on the element's style object using `setProperty()`.\n * Names without dashes are assumed to be camelCased JavaScript property names\n * and set on the element's style object using property assignment, allowing the\n * style object to translate JavaScript-style names to CSS property names.\n *\n * For example `styleMap({backgroundColor: 'red', 'border-top': '5px', '--size':\n * '0'})` sets the `background-color`, `border-top` and `--size` properties.\n *\n * @param styleInfo\n * @see {@link https://lit.dev/docs/templates/directives/#stylemap styleMap code samples on Lit.dev}\n */\nexport const styleMap = directive(StyleMapDirective);\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * Creates an event that closes any parent menus.\n */\nexport function createCloseMenuEvent(initiator, reason) {\n    return new CustomEvent('close-menu', {\n        bubbles: true,\n        composed: true,\n        detail: { initiator, reason, itemPath: [initiator] },\n    });\n}\n/**\n * Creates an event that signals to the menu that it should stay open on the\n * focusout event.\n */\nexport function createStayOpenOnFocusoutEvent() {\n    return new Event('stay-open-on-focusout', { bubbles: true, composed: true });\n}\n/**\n * Creates an event that signals to the menu that it should close open on the\n * focusout event.\n */\nexport function createCloseOnFocusoutEvent() {\n    return new Event('close-on-focusout', { bubbles: true, composed: true });\n}\n/**\n * Creates a default close menu event used by md-menu.\n */\nexport const createDefaultCloseMenuEvent = (createCloseMenuEvent);\n/**\n * Creates an event that requests the given item be selected.\n */\nexport function createDeactivateTypeaheadEvent() {\n    return new Event('deactivate-typeahead', { bubbles: true, composed: true });\n}\n/**\n * Creates an event that requests the typeahead functionality of containing menu\n * be activated.\n */\nexport function createActivateTypeaheadEvent() {\n    return new Event('activate-typeahead', { bubbles: true, composed: true });\n}\n/**\n * Keys that are used to navigate menus.\n */\n// tslint:disable-next-line:enforce-name-casing We are mimicking enum style\nexport const NavigableKey = {\n    UP: 'ArrowUp',\n    DOWN: 'ArrowDown',\n    RIGHT: 'ArrowRight',\n    LEFT: 'ArrowLeft',\n};\n/**\n * Keys that are used for selection in menus.\n */\n// tslint:disable-next-line:enforce-name-casing We are mimicking enum style\nexport const SelectionKey = {\n    SPACE: 'Space',\n    ENTER: 'Enter',\n};\n/**\n * Default close `Reason` kind values.\n */\n// tslint:disable-next-line:enforce-name-casing We are mimicking enum style\nexport const CloseReason = {\n    CLICK_SELECTION: 'click-selection',\n    KEYDOWN: 'keydown',\n};\n/**\n * Keys that can close menus.\n */\n// tslint:disable-next-line:enforce-name-casing We are mimicking enum style\nexport const KeydownCloseKey = {\n    ESCAPE: 'Escape',\n    SPACE: SelectionKey.SPACE,\n    ENTER: SelectionKey.ENTER,\n};\n/**\n * Determines whether the given key code is a key code that should close the\n * menu.\n *\n * @param code The KeyboardEvent code to check.\n * @return Whether or not the key code is in the predetermined list to close the\n * menu.\n */\nexport function isClosableKey(code) {\n    return Object.values(KeydownCloseKey).some((value) => value === code);\n}\n/**\n * Determines whether the given key code is a key code that should select a menu\n * item.\n *\n * @param code They KeyboardEvent code to check.\n * @return Whether or not the key code is in the predetermined list to select a\n * menu item.\n */\nexport function isSelectableKey(code) {\n    return Object.values(SelectionKey).some((value) => value === code);\n}\n/**\n * Determines whether a target element is contained inside another element's\n * composed tree.\n *\n * @param target The potential contained element.\n * @param container The potential containing element of the target.\n * @returns Whether the target element is contained inside the container's\n * composed subtree\n */\nexport function isElementInSubtree(target, container) {\n    // Dispatch a composed, bubbling event to check its path to see if the\n    // newly-focused element is contained in container's subtree\n    const focusEv = new Event('md-contains', { bubbles: true, composed: true });\n    let composedPath = [];\n    const listener = (ev) => {\n        composedPath = ev.composedPath();\n    };\n    container.addEventListener('md-contains', listener);\n    target.dispatchEvent(focusEv);\n    container.removeEventListener('md-contains', listener);\n    const isContained = composedPath.length > 0;\n    return isContained;\n}\n/**\n * Element to focus on when menu is first opened.\n */\n// tslint:disable-next-line:enforce-name-casing We are mimicking enum style\nexport const FocusState = {\n    NONE: 'none',\n    LIST_ROOT: 'list-root',\n    FIRST_ITEM: 'first-item',\n    LAST_ITEM: 'last-item',\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * An enum of supported Menu corners\n */\n// tslint:disable-next-line:enforce-name-casing We are mimicking enum style\nexport const Corner = {\n    END_START: 'end-start',\n    END_END: 'end-end',\n    START_START: 'start-start',\n    START_END: 'start-end',\n};\n/**\n * Given a surface, an anchor, corners, and some options, this surface will\n * calculate the position of a surface to align the two given corners and keep\n * the surface inside the window viewport. It also provides a StyleInfo map that\n * can be applied to the surface to handle visiblility and position.\n */\nexport class SurfacePositionController {\n    /**\n     * @param host The host to connect the controller to.\n     * @param getProperties A function that returns the properties for the\n     * controller.\n     */\n    constructor(host, getProperties) {\n        this.host = host;\n        this.getProperties = getProperties;\n        // The current styles to apply to the surface.\n        this.surfaceStylesInternal = {\n            'display': 'none',\n        };\n        // Previous values stored for change detection. Open change detection is\n        // calculated separately so initialize it here.\n        this.lastValues = {\n            isOpen: false,\n        };\n        this.host.addController(this);\n    }\n    /**\n     * The StyleInfo map to apply to the surface via Lit's stylemap\n     */\n    get surfaceStyles() {\n        return this.surfaceStylesInternal;\n    }\n    /**\n     * Calculates the surface's new position required so that the surface's\n     * `surfaceCorner` aligns to the anchor's `anchorCorner` while keeping the\n     * surface inside the window viewport. This positioning also respects RTL by\n     * checking `getComputedStyle()` on the surface element.\n     */\n    async position() {\n        const { surfaceEl, anchorEl, anchorCorner: anchorCornerRaw, surfaceCorner: surfaceCornerRaw, positioning, xOffset, yOffset, disableBlockFlip, disableInlineFlip, repositionStrategy, } = this.getProperties();\n        const anchorCorner = anchorCornerRaw.toLowerCase().trim();\n        const surfaceCorner = surfaceCornerRaw.toLowerCase().trim();\n        if (!surfaceEl || !anchorEl) {\n            return;\n        }\n        // Store these before we potentially resize the window with the next set of\n        // lines\n        const windowInnerWidth = window.innerWidth;\n        const windowInnerHeight = window.innerHeight;\n        const div = document.createElement('div');\n        div.style.opacity = '0';\n        div.style.position = 'fixed';\n        div.style.display = 'block';\n        div.style.inset = '0';\n        document.body.appendChild(div);\n        const scrollbarTestRect = div.getBoundingClientRect();\n        div.remove();\n        // Calculate the widths of the scrollbars in the inline and block directions\n        // to account for window-relative calculations.\n        const blockScrollbarHeight = window.innerHeight - scrollbarTestRect.bottom;\n        const inlineScrollbarWidth = window.innerWidth - scrollbarTestRect.right;\n        // Paint the surface transparently so that we can get the position and the\n        // rect info of the surface.\n        this.surfaceStylesInternal = {\n            'display': 'block',\n            'opacity': '0',\n        };\n        // Wait for it to be visible.\n        this.host.requestUpdate();\n        await this.host.updateComplete;\n        // Safari has a bug that makes popovers render incorrectly if the node is\n        // made visible + Animation Frame before calling showPopover().\n        // https://bugs.webkit.org/show_bug.cgi?id=264069\n        // also the cast is required due to differing TS types in Google and OSS.\n        if (surfaceEl.popover &&\n            surfaceEl.isConnected) {\n            surfaceEl.showPopover();\n        }\n        const surfaceRect = surfaceEl.getSurfacePositionClientRect\n            ? surfaceEl.getSurfacePositionClientRect()\n            : surfaceEl.getBoundingClientRect();\n        const anchorRect = anchorEl.getSurfacePositionClientRect\n            ? anchorEl.getSurfacePositionClientRect()\n            : anchorEl.getBoundingClientRect();\n        const [surfaceBlock, surfaceInline] = surfaceCorner.split('-');\n        const [anchorBlock, anchorInline] = anchorCorner.split('-');\n        // LTR depends on the direction of the SURFACE not the anchor.\n        const isLTR = getComputedStyle(surfaceEl).direction === 'ltr';\n        /*\n         * For more on inline and block dimensions, see MDN article:\n         * https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_logical_properties_and_values\n         *\n         * ┌───── inline/blockDocumentOffset  inlineScrollbarWidth\n         * │       │                                    │\n         * │     ┌─▼─────┐                              │Document\n         * │    ┌┼───────┴──────────────────────────────┼────────┐\n         * │    ││                                      │        │\n         * └──► ││ ┌───── inline/blockWindowOffset      │        │\n         *      ││ │       │                            ▼        │\n         *      ││ │     ┌─▼───┐                 Window┌┐        │\n         *      └┤ │    ┌┼─────┴───────────────────────┼│        │\n         *       │ │    ││                             ││        │\n         *       │ └──► ││  ┌──inline/blockAnchorOffset││        │\n         *       │      ││  │     │                    ││        │\n         *       │      └┤  │  ┌──▼───┐                ││        │\n         *       │       │  │ ┌┼──────┤                ││        │\n         *       │       │  └─►│Anchor│                ││        │\n         *       │       │    └┴──────┘                ││        │\n         *       │       │                             ││        │\n         *       │       │     ┌───────────────────────┼┼────┐   │\n         *       │       │     │ Surface               ││    │   │\n         *       │       │     │                       ││    │   │\n         *       │       │     │                       ││    │   │\n         *       │       │     │                       ││    │   │\n         *       │       │     │                       ││    │   │\n         *       │      ┌┼─────┼───────────────────────┼│    │   │\n         *       │   ┌─►┴──────┼────────────────────────┘    ├┐  │\n         *       │   │         │ inline/blockOOBCorrection   ││  │\n         *       │   │         │                         │   ││  │\n         *       │   │         │                         ├──►├│  │\n         *       │   │         │                         │   ││  │\n         *       │   │         └────────────────────────┐▼───┼┘  │\n         *       │  blockScrollbarHeight                └────┘   │\n         *       │                                               │\n         *       └───────────────────────────────────────────────┘\n         */\n        // Calculate the block positioning properties\n        let { blockInset, blockOutOfBoundsCorrection, surfaceBlockProperty } = this.calculateBlock({\n            surfaceRect,\n            anchorRect,\n            anchorBlock,\n            surfaceBlock,\n            yOffset,\n            positioning,\n            windowInnerHeight,\n            blockScrollbarHeight,\n        });\n        // If the surface should be out of bounds in the block direction, flip the\n        // surface and anchor corner block values and recalculate\n        if (blockOutOfBoundsCorrection && !disableBlockFlip) {\n            const flippedSurfaceBlock = surfaceBlock === 'start' ? 'end' : 'start';\n            const flippedAnchorBlock = anchorBlock === 'start' ? 'end' : 'start';\n            const flippedBlock = this.calculateBlock({\n                surfaceRect,\n                anchorRect,\n                anchorBlock: flippedAnchorBlock,\n                surfaceBlock: flippedSurfaceBlock,\n                yOffset,\n                positioning,\n                windowInnerHeight,\n                blockScrollbarHeight,\n            });\n            // In the case that the flipped verion would require less out of bounds\n            // correcting, use the flipped corner block values\n            if (blockOutOfBoundsCorrection > flippedBlock.blockOutOfBoundsCorrection) {\n                blockInset = flippedBlock.blockInset;\n                blockOutOfBoundsCorrection = flippedBlock.blockOutOfBoundsCorrection;\n                surfaceBlockProperty = flippedBlock.surfaceBlockProperty;\n            }\n        }\n        // Calculate the inline positioning properties\n        let { inlineInset, inlineOutOfBoundsCorrection, surfaceInlineProperty } = this.calculateInline({\n            surfaceRect,\n            anchorRect,\n            anchorInline,\n            surfaceInline,\n            xOffset,\n            positioning,\n            isLTR,\n            windowInnerWidth,\n            inlineScrollbarWidth,\n        });\n        // If the surface should be out of bounds in the inline direction, flip the\n        // surface and anchor corner inline values and recalculate\n        if (inlineOutOfBoundsCorrection && !disableInlineFlip) {\n            const flippedSurfaceInline = surfaceInline === 'start' ? 'end' : 'start';\n            const flippedAnchorInline = anchorInline === 'start' ? 'end' : 'start';\n            const flippedInline = this.calculateInline({\n                surfaceRect,\n                anchorRect,\n                anchorInline: flippedAnchorInline,\n                surfaceInline: flippedSurfaceInline,\n                xOffset,\n                positioning,\n                isLTR,\n                windowInnerWidth,\n                inlineScrollbarWidth,\n            });\n            // In the case that the flipped verion would require less out of bounds\n            // correcting, use the flipped corner inline values\n            if (Math.abs(inlineOutOfBoundsCorrection) >\n                Math.abs(flippedInline.inlineOutOfBoundsCorrection)) {\n                inlineInset = flippedInline.inlineInset;\n                inlineOutOfBoundsCorrection = flippedInline.inlineOutOfBoundsCorrection;\n                surfaceInlineProperty = flippedInline.surfaceInlineProperty;\n            }\n        }\n        // If we are simply repositioning the surface back inside the viewport,\n        // subtract the out of bounds correction values from the positioning.\n        if (repositionStrategy === 'move') {\n            blockInset = blockInset - blockOutOfBoundsCorrection;\n            inlineInset = inlineInset - inlineOutOfBoundsCorrection;\n        }\n        this.surfaceStylesInternal = {\n            'display': 'block',\n            'opacity': '1',\n            [surfaceBlockProperty]: `${blockInset}px`,\n            [surfaceInlineProperty]: `${inlineInset}px`,\n        };\n        // In the case that we are resizing the surface to stay inside the viewport\n        // we need to set height and width on the surface.\n        if (repositionStrategy === 'resize') {\n            // Add a height property to the styles if there is block height correction\n            if (blockOutOfBoundsCorrection) {\n                this.surfaceStylesInternal['height'] = `${surfaceRect.height - blockOutOfBoundsCorrection}px`;\n            }\n            // Add a width property to the styles if there is block height correction\n            if (inlineOutOfBoundsCorrection) {\n                this.surfaceStylesInternal['width'] = `${surfaceRect.width - inlineOutOfBoundsCorrection}px`;\n            }\n        }\n        this.host.requestUpdate();\n    }\n    /**\n     * Calculates the css property, the inset, and the out of bounds correction\n     * for the surface in the block direction.\n     */\n    calculateBlock(config) {\n        const { surfaceRect, anchorRect, anchorBlock, surfaceBlock, yOffset, positioning, windowInnerHeight, blockScrollbarHeight, } = config;\n        // We use number booleans to multiply values rather than `if` / ternary\n        // statements because it _heavily_ cuts down on nesting and readability\n        const relativeToWindow = positioning === 'fixed' || positioning === 'document' ? 1 : 0;\n        const relativeToDocument = positioning === 'document' ? 1 : 0;\n        const isSurfaceBlockStart = surfaceBlock === 'start' ? 1 : 0;\n        const isSurfaceBlockEnd = surfaceBlock === 'end' ? 1 : 0;\n        const isOneBlockEnd = anchorBlock !== surfaceBlock ? 1 : 0;\n        // Whether or not to apply the height of the anchor\n        const blockAnchorOffset = isOneBlockEnd * anchorRect.height + yOffset;\n        // The absolute block position of the anchor relative to window\n        const blockTopLayerOffset = isSurfaceBlockStart * anchorRect.top +\n            isSurfaceBlockEnd *\n                (windowInnerHeight - anchorRect.bottom - blockScrollbarHeight);\n        const blockDocumentOffset = isSurfaceBlockStart * window.scrollY - isSurfaceBlockEnd * window.scrollY;\n        // If the surface's block would be out of bounds of the window, move it back\n        // in\n        const blockOutOfBoundsCorrection = Math.abs(Math.min(0, windowInnerHeight -\n            blockTopLayerOffset -\n            blockAnchorOffset -\n            surfaceRect.height));\n        // The block logical value of the surface\n        const blockInset = relativeToWindow * blockTopLayerOffset +\n            relativeToDocument * blockDocumentOffset +\n            blockAnchorOffset;\n        const surfaceBlockProperty = surfaceBlock === 'start' ? 'inset-block-start' : 'inset-block-end';\n        return { blockInset, blockOutOfBoundsCorrection, surfaceBlockProperty };\n    }\n    /**\n     * Calculates the css property, the inset, and the out of bounds correction\n     * for the surface in the inline direction.\n     */\n    calculateInline(config) {\n        const { isLTR: isLTRBool, surfaceInline, anchorInline, anchorRect, surfaceRect, xOffset, positioning, windowInnerWidth, inlineScrollbarWidth, } = config;\n        // We use number booleans to multiply values rather than `if` / ternary\n        // statements because it _heavily_ cuts down on nesting and readability\n        const relativeToWindow = positioning === 'fixed' || positioning === 'document' ? 1 : 0;\n        const relativeToDocument = positioning === 'document' ? 1 : 0;\n        const isLTR = isLTRBool ? 1 : 0;\n        const isRTL = isLTRBool ? 0 : 1;\n        const isSurfaceInlineStart = surfaceInline === 'start' ? 1 : 0;\n        const isSurfaceInlineEnd = surfaceInline === 'end' ? 1 : 0;\n        const isOneInlineEnd = anchorInline !== surfaceInline ? 1 : 0;\n        // Whether or not to apply the width of the anchor\n        const inlineAnchorOffset = isOneInlineEnd * anchorRect.width + xOffset;\n        // The inline position of the anchor relative to window in LTR\n        const inlineTopLayerOffsetLTR = isSurfaceInlineStart * anchorRect.left +\n            isSurfaceInlineEnd *\n                (windowInnerWidth - anchorRect.right - inlineScrollbarWidth);\n        // The inline position of the anchor relative to window in RTL\n        const inlineTopLayerOffsetRTL = isSurfaceInlineStart *\n            (windowInnerWidth - anchorRect.right - inlineScrollbarWidth) +\n            isSurfaceInlineEnd * anchorRect.left;\n        // The inline position of the anchor relative to window\n        const inlineTopLayerOffset = isLTR * inlineTopLayerOffsetLTR + isRTL * inlineTopLayerOffsetRTL;\n        // The inline position of the anchor relative to window in LTR\n        const inlineDocumentOffsetLTR = isSurfaceInlineStart * window.scrollX -\n            isSurfaceInlineEnd * window.scrollX;\n        // The inline position of the anchor relative to window in RTL\n        const inlineDocumentOffsetRTL = isSurfaceInlineEnd * window.scrollX -\n            isSurfaceInlineStart * window.scrollX;\n        // The inline position of the anchor relative to window\n        const inlineDocumentOffset = isLTR * inlineDocumentOffsetLTR + isRTL * inlineDocumentOffsetRTL;\n        // If the surface's inline would be out of bounds of the window, move it\n        // back in\n        const inlineOutOfBoundsCorrection = Math.abs(Math.min(0, windowInnerWidth -\n            inlineTopLayerOffset -\n            inlineAnchorOffset -\n            surfaceRect.width));\n        // The inline logical value of the surface\n        const inlineInset = relativeToWindow * inlineTopLayerOffset +\n            inlineAnchorOffset +\n            relativeToDocument * inlineDocumentOffset;\n        let surfaceInlineProperty = surfaceInline === 'start' ? 'inset-inline-start' : 'inset-inline-end';\n        // There are cases where the element is RTL but the root of the page is not.\n        // In these cases we want to not use logical properties.\n        if (positioning === 'document' || positioning === 'fixed') {\n            if ((surfaceInline === 'start' && isLTRBool) ||\n                (surfaceInline === 'end' && !isLTRBool)) {\n                surfaceInlineProperty = 'left';\n            }\n            else {\n                surfaceInlineProperty = 'right';\n            }\n        }\n        return {\n            inlineInset,\n            inlineOutOfBoundsCorrection,\n            surfaceInlineProperty,\n        };\n    }\n    hostUpdate() {\n        this.onUpdate();\n    }\n    hostUpdated() {\n        this.onUpdate();\n    }\n    /**\n     * Checks whether the properties passed into the controller have changed since\n     * the last positioning. If so, it will reposition if the surface is open or\n     * close it if the surface should close.\n     */\n    async onUpdate() {\n        const props = this.getProperties();\n        let hasChanged = false;\n        for (const [key, value] of Object.entries(props)) {\n            // tslint:disable-next-line\n            hasChanged = hasChanged || value !== this.lastValues[key];\n            if (hasChanged)\n                break;\n        }\n        const openChanged = this.lastValues.isOpen !== props.isOpen;\n        const hasAnchor = !!props.anchorEl;\n        const hasSurface = !!props.surfaceEl;\n        if (hasChanged && hasAnchor && hasSurface) {\n            // Only update isOpen, because if it's closed, we do not want to waste\n            // time on a useless reposition calculation. So save the other \"dirty\"\n            // values until next time it opens.\n            this.lastValues.isOpen = props.isOpen;\n            if (props.isOpen) {\n                // We are going to do a reposition, so save the prop values for future\n                // dirty checking.\n                this.lastValues = props;\n                await this.position();\n                props.onOpen();\n            }\n            else if (openChanged) {\n                await props.beforeClose();\n                this.close();\n                props.onClose();\n            }\n        }\n    }\n    /**\n     * Hides the surface.\n     */\n    close() {\n        this.surfaceStylesInternal = {\n            'display': 'none',\n        };\n        this.host.requestUpdate();\n        const surfaceEl = this.getProperties().surfaceEl;\n        // The following type casts are required due to differing TS types in Google\n        // and open source.\n        if (surfaceEl?.popover &&\n            surfaceEl?.isConnected) {\n            surfaceEl.hidePopover();\n        }\n    }\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * Indicies to access the TypeaheadRecord tuple type.\n */\nexport const TYPEAHEAD_RECORD = {\n    INDEX: 0,\n    ITEM: 1,\n    TEXT: 2,\n};\n/**\n * This controller listens to `keydown` events and searches the header text of\n * an array of `MenuItem`s with the corresponding entered keys within the buffer\n * time and activates the item.\n *\n * @example\n * ```ts\n * const typeaheadController = new TypeaheadController(() => ({\n *   typeaheadBufferTime: 50,\n *   getItems: () => Array.from(document.querySelectorAll('md-menu-item'))\n * }));\n * html`\n *   <div\n *       @keydown=${typeaheadController.onKeydown}\n *       tabindex=\"0\"\n *       class=\"activeItemText\">\n *     <!-- focusable element that will receive keydown events -->\n *     Apple\n *   </div>\n *   <div>\n *     <md-menu-item active header=\"Apple\"></md-menu-item>\n *     <md-menu-item header=\"Apricot\"></md-menu-item>\n *     <md-menu-item header=\"Banana\"></md-menu-item>\n *     <md-menu-item header=\"Olive\"></md-menu-item>\n *     <md-menu-item header=\"Orange\"></md-menu-item>\n *   </div>\n * `;\n * ```\n */\nexport class TypeaheadController {\n    /**\n     * @param getProperties A function that returns the options of the typeahead\n     * controller:\n     *\n     * {\n     *   getItems: A function that returns an array of menu items to be searched.\n     *   typeaheadBufferTime: The maximum time between each keystroke to keep the\n     *       current type buffer alive.\n     * }\n     */\n    constructor(getProperties) {\n        this.getProperties = getProperties;\n        /**\n         * Array of tuples that helps with indexing.\n         */\n        this.typeaheadRecords = [];\n        /**\n         * Currently-typed text since last buffer timeout\n         */\n        this.typaheadBuffer = '';\n        /**\n         * The timeout id from the current buffer's setTimeout\n         */\n        this.cancelTypeaheadTimeout = 0;\n        /**\n         * If we are currently \"typing\"\n         */\n        this.isTypingAhead = false;\n        /**\n         * The record of the last active item.\n         */\n        this.lastActiveRecord = null;\n        /**\n         * Apply this listener to the element that will receive `keydown` events that\n         * should trigger this controller.\n         *\n         * @param event The native browser `KeyboardEvent` from the `keydown` event.\n         */\n        this.onKeydown = (event) => {\n            if (this.isTypingAhead) {\n                this.typeahead(event);\n            }\n            else {\n                this.beginTypeahead(event);\n            }\n        };\n        /**\n         * Ends the current typeahead and clears the buffer.\n         */\n        this.endTypeahead = () => {\n            this.isTypingAhead = false;\n            this.typaheadBuffer = '';\n            this.typeaheadRecords = [];\n        };\n    }\n    get items() {\n        return this.getProperties().getItems();\n    }\n    get active() {\n        return this.getProperties().active;\n    }\n    /**\n     * Sets up typingahead\n     */\n    beginTypeahead(event) {\n        if (!this.active) {\n            return;\n        }\n        // We don't want to typeahead if the _beginning_ of the typeahead is a menu\n        // navigation, or a selection. We will handle \"Space\" only if it's in the\n        // middle of a typeahead\n        if (event.code === 'Space' ||\n            event.code === 'Enter' ||\n            event.code.startsWith('Arrow') ||\n            event.code === 'Escape') {\n            return;\n        }\n        this.isTypingAhead = true;\n        // Generates the record array data structure which is the index, the element\n        // and a normalized header.\n        this.typeaheadRecords = this.items.map((el, index) => [\n            index,\n            el,\n            el.typeaheadText.trim().toLowerCase(),\n        ]);\n        this.lastActiveRecord =\n            this.typeaheadRecords.find((record) => record[TYPEAHEAD_RECORD.ITEM].tabIndex === 0) ?? null;\n        if (this.lastActiveRecord) {\n            this.lastActiveRecord[TYPEAHEAD_RECORD.ITEM].tabIndex = -1;\n        }\n        this.typeahead(event);\n    }\n    /**\n     * Performs the typeahead. Based on the normalized items and the current text\n     * buffer, finds the _next_ item with matching text and activates it.\n     *\n     * @example\n     *\n     * items: Apple, Banana, Olive, Orange, Cucumber\n     * buffer: ''\n     * user types: o\n     *\n     * activates Olive\n     *\n     * @example\n     *\n     * items: Apple, Banana, Olive (active), Orange, Cucumber\n     * buffer: 'o'\n     * user types: l\n     *\n     * activates Olive\n     *\n     * @example\n     *\n     * items: Apple, Banana, Olive (active), Orange, Cucumber\n     * buffer: ''\n     * user types: o\n     *\n     * activates Orange\n     *\n     * @example\n     *\n     * items: Apple, Banana, Olive, Orange (active), Cucumber\n     * buffer: ''\n     * user types: o\n     *\n     * activates Olive\n     */\n    typeahead(event) {\n        if (event.defaultPrevented)\n            return;\n        clearTimeout(this.cancelTypeaheadTimeout);\n        // Stop typingahead if one of the navigation or selection keys (except for\n        // Space) are pressed\n        if (event.code === 'Enter' ||\n            event.code.startsWith('Arrow') ||\n            event.code === 'Escape') {\n            this.endTypeahead();\n            if (this.lastActiveRecord) {\n                this.lastActiveRecord[TYPEAHEAD_RECORD.ITEM].tabIndex = -1;\n            }\n            return;\n        }\n        // If Space is pressed, prevent it from selecting and closing the menu\n        if (event.code === 'Space') {\n            event.preventDefault();\n        }\n        // Start up a new keystroke buffer timeout\n        this.cancelTypeaheadTimeout = setTimeout(this.endTypeahead, this.getProperties().typeaheadBufferTime);\n        this.typaheadBuffer += event.key.toLowerCase();\n        const lastActiveIndex = this.lastActiveRecord\n            ? this.lastActiveRecord[TYPEAHEAD_RECORD.INDEX]\n            : -1;\n        const numRecords = this.typeaheadRecords.length;\n        /**\n         * Sorting function that will resort the items starting with the given index\n         *\n         * @example\n         *\n         * this.typeaheadRecords =\n         * 0: [0, <reference>, 'apple']\n         * 1: [1, <reference>, 'apricot']\n         * 2: [2, <reference>, 'banana']\n         * 3: [3, <reference>, 'olive'] <-- lastActiveIndex\n         * 4: [4, <reference>, 'orange']\n         * 5: [5, <reference>, 'strawberry']\n         *\n         * this.typeaheadRecords.sort((a,b) => rebaseIndexOnActive(a)\n         *                                       - rebaseIndexOnActive(b)) ===\n         * 0: [3, <reference>, 'olive'] <-- lastActiveIndex\n         * 1: [4, <reference>, 'orange']\n         * 2: [5, <reference>, 'strawberry']\n         * 3: [0, <reference>, 'apple']\n         * 4: [1, <reference>, 'apricot']\n         * 5: [2, <reference>, 'banana']\n         */\n        const rebaseIndexOnActive = (record) => {\n            return ((record[TYPEAHEAD_RECORD.INDEX] + numRecords - lastActiveIndex) %\n                numRecords);\n        };\n        // records filtered and sorted / rebased around the last active index\n        const matchingRecords = this.typeaheadRecords\n            .filter((record) => !record[TYPEAHEAD_RECORD.ITEM].disabled &&\n            record[TYPEAHEAD_RECORD.TEXT].startsWith(this.typaheadBuffer))\n            .sort((a, b) => rebaseIndexOnActive(a) - rebaseIndexOnActive(b));\n        // Just leave if there's nothing that matches. Native select will just\n        // choose the first thing that starts with the next letter in the alphabet\n        // but that's out of scope and hard to localize\n        if (matchingRecords.length === 0) {\n            clearTimeout(this.cancelTypeaheadTimeout);\n            if (this.lastActiveRecord) {\n                this.lastActiveRecord[TYPEAHEAD_RECORD.ITEM].tabIndex = -1;\n            }\n            this.endTypeahead();\n            return;\n        }\n        const isNewQuery = this.typaheadBuffer.length === 1;\n        let nextRecord;\n        // This is likely the case that someone is trying to \"tab\" through different\n        // entries that start with the same letter\n        if (this.lastActiveRecord === matchingRecords[0] && isNewQuery) {\n            nextRecord = matchingRecords[1] ?? matchingRecords[0];\n        }\n        else {\n            nextRecord = matchingRecords[0];\n        }\n        if (this.lastActiveRecord) {\n            this.lastActiveRecord[TYPEAHEAD_RECORD.ITEM].tabIndex = -1;\n        }\n        this.lastActiveRecord = nextRecord;\n        nextRecord[TYPEAHEAD_RECORD.ITEM].tabIndex = 0;\n        nextRecord[TYPEAHEAD_RECORD.ITEM].focus();\n        return;\n    }\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport '../../elevation/elevation.js';\nimport '../../focus/md-focus-ring.js';\nimport { LitElement, html, isServer, nothing } from 'lit';\nimport { property, query, queryAssignedElements, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { EASING, createAnimationSignal } from '../../internal/motion/animation.js';\nimport { ListController, NavigableKeys, } from '../../list/internal/list-controller.js';\nimport { getActiveItem, getFirstActivatableItem, getLastActivatableItem, } from '../../list/internal/list-navigation-helpers.js';\nimport { FocusState, isClosableKey, isElementInSubtree, } from './controllers/shared.js';\nimport { Corner, SurfacePositionController, } from './controllers/surfacePositionController.js';\nimport { TypeaheadController } from './controllers/typeaheadController.js';\nexport { Corner } from './controllers/surfacePositionController.js';\n/**\n * The default value for the typeahead buffer time in Milliseconds.\n */\nexport const DEFAULT_TYPEAHEAD_BUFFER_TIME = 200;\nconst submenuNavKeys = new Set([\n    NavigableKeys.ArrowDown,\n    NavigableKeys.ArrowUp,\n    NavigableKeys.Home,\n    NavigableKeys.End,\n]);\nconst menuNavKeys = new Set([\n    NavigableKeys.ArrowLeft,\n    NavigableKeys.ArrowRight,\n    ...submenuNavKeys,\n]);\n/**\n * Gets the currently focused element on the page.\n *\n * @param activeDoc The document or shadowroot from which to start the search.\n *    Defaults to `window.document`\n * @return Returns the currently deeply focused element or `null` if none.\n */\nfunction getFocusedElement(activeDoc = document) {\n    let activeEl = activeDoc.activeElement;\n    // Check for activeElement in the case that an element with a shadow root host\n    // is currently focused.\n    while (activeEl && activeEl?.shadowRoot?.activeElement) {\n        activeEl = activeEl.shadowRoot.activeElement;\n    }\n    return activeEl;\n}\n/**\n * @fires opening {Event} Fired before the opening animation begins\n * @fires opened {Event} Fired once the menu is open, after any animations\n * @fires closing {Event} Fired before the closing animation begins\n * @fires closed {Event} Fired once the menu is closed, after any animations\n */\nexport class Menu extends LitElement {\n    /**\n     * Whether the menu is animating upwards or downwards when opening. This is\n     * helpful for calculating some animation calculations.\n     */\n    get openDirection() {\n        const menuCornerBlock = this.menuCorner.split('-')[0];\n        return menuCornerBlock === 'start' ? 'DOWN' : 'UP';\n    }\n    /**\n     * The element which the menu should align to. If `anchor` is set to a\n     * non-empty idref string, then `anchorEl` will resolve to the element with\n     * the given id in the same root node. Otherwise, `null`.\n     */\n    get anchorElement() {\n        if (this.anchor) {\n            return this.getRootNode().querySelector(`#${this.anchor}`);\n        }\n        return this.currentAnchorElement;\n    }\n    set anchorElement(element) {\n        this.currentAnchorElement = element;\n        this.requestUpdate('anchorElement');\n    }\n    constructor() {\n        super();\n        /**\n         * The ID of the element in the same root node in which the menu should align\n         * to. Overrides setting `anchorElement = elementReference`.\n         *\n         * __NOTE__: anchor or anchorElement must either be an HTMLElement or resolve\n         * to an HTMLElement in order for menu to open.\n         */\n        this.anchor = '';\n        /**\n         * Whether the positioning algorithm should calculate relative to the parent\n         * of the anchor element (`absolute`), relative to the window (`fixed`), or\n         * relative to the document (`document`). `popover` will use the popover API\n         * to render the menu in the top-layer. If your browser does not support the\n         * popover API, it will fall back to `fixed`.\n         *\n         * __Examples for `position = 'fixed'`:__\n         *\n         * - If there is no `position:relative` in the given parent tree and the\n         *   surface is `position:absolute`\n         * - If the surface is `position:fixed`\n         * - If the surface is in the \"top layer\"\n         * - The anchor and the surface do not share a common `position:relative`\n         *   ancestor\n         *\n         * When using `positioning=fixed`, in most cases, the menu should position\n         * itself above most other `position:absolute` or `position:fixed` elements\n         * when placed inside of them. e.g. using a menu inside of an `md-dialog`.\n         *\n         * __NOTE__: Fixed menus will not scroll with the page and will be fixed to\n         * the window instead.\n         *\n         * __Examples for `position = 'document'`:__\n         *\n         * - There is no parent that creates a relative positioning context e.g.\n         *   `position: relative`, `position: absolute`, `transform: translate(x, y)`,\n         *   etc.\n         * - You put the effort into hoisting the menu to the top of the DOM like the\n         *   end of the `<body>` to render over everything or in a top-layer.\n         * - You are reusing a single `md-menu` element that dynamically renders\n         *   content.\n         *\n         * __Examples for `position = 'popover'`:__\n         *\n         * - Your browser supports `popover`.\n         * - Most cases. Once popover is in browsers, this will become the default.\n         */\n        this.positioning = 'absolute';\n        /**\n         * Skips the opening and closing animations.\n         */\n        this.quick = false;\n        /**\n         * Displays overflow content like a submenu. Not required in most cases when\n         * using `positioning=\"popover\"`.\n         *\n         * __NOTE__: This may cause adverse effects if you set\n         * `md-menu {max-height:...}`\n         * and have items overflowing items in the \"y\" direction.\n         */\n        this.hasOverflow = false;\n        /**\n         * Opens the menu and makes it visible. Alternative to the `.show()` and\n         * `.close()` methods\n         */\n        this.open = false;\n        /**\n         * Offsets the menu's inline alignment from the anchor by the given number in\n         * pixels. This value is direction aware and will follow the LTR / RTL\n         * direction.\n         *\n         * e.g. LTR: positive -> right, negative -> left\n         *      RTL: positive -> left, negative -> right\n         */\n        this.xOffset = 0;\n        /**\n         * Offsets the menu's block alignment from the anchor by the given number in\n         * pixels.\n         *\n         * e.g. positive -> down, negative -> up\n         */\n        this.yOffset = 0;\n        /**\n         * Disable the `flip` behavior that usually happens on the horizontal axis\n         * when the surface would render outside the viewport.\n         */\n        this.noHorizontalFlip = false;\n        /**\n         * Disable the `flip` behavior that usually happens on the vertical axis when\n         * the surface would render outside the viewport.\n         */\n        this.noVerticalFlip = false;\n        /**\n         * The max time between the keystrokes of the typeahead menu behavior before\n         * it clears the typeahead buffer.\n         */\n        this.typeaheadDelay = DEFAULT_TYPEAHEAD_BUFFER_TIME;\n        /**\n         * The corner of the anchor which to align the menu in the standard logical\n         * property style of <block>-<inline> e.g. `'end-start'`.\n         *\n         * NOTE: This value may not be respected by the menu positioning algorithm\n         * if the menu would render outisde the viewport.\n         * Use `no-horizontal-flip` or `no-vertical-flip` to force the usage of the value\n         */\n        this.anchorCorner = Corner.END_START;\n        /**\n         * The corner of the menu which to align the anchor in the standard logical\n         * property style of <block>-<inline> e.g. `'start-start'`.\n         *\n         * NOTE: This value may not be respected by the menu positioning algorithm\n         * if the menu would render outisde the viewport.\n         * Use `no-horizontal-flip` or `no-vertical-flip` to force the usage of the value\n         */\n        this.menuCorner = Corner.START_START;\n        /**\n         * Keeps the user clicks outside the menu.\n         *\n         * NOTE: clicking outside may still cause focusout to close the menu so see\n         * `stayOpenOnFocusout`.\n         */\n        this.stayOpenOnOutsideClick = false;\n        /**\n         * Keeps the menu open when focus leaves the menu's composed subtree.\n         *\n         * NOTE: Focusout behavior will stop propagation of the focusout event. Set\n         * this property to true to opt-out of menu's focusout handling altogether.\n         */\n        this.stayOpenOnFocusout = false;\n        /**\n         * After closing, does not restore focus to the last focused element before\n         * the menu was opened.\n         */\n        this.skipRestoreFocus = false;\n        /**\n         * The element that should be focused by default once opened.\n         *\n         * NOTE: When setting default focus to 'LIST_ROOT', remember to change\n         * `tabindex` to `0` and change md-menu's display to something other than\n         * `display: contents` when necessary.\n         */\n        this.defaultFocus = FocusState.FIRST_ITEM;\n        /**\n         * Turns off navigation wrapping. By default, navigating past the end of the\n         * menu items will wrap focus back to the beginning and vice versa. Use this\n         * for ARIA patterns that do not wrap focus, like combobox.\n         */\n        this.noNavigationWrap = false;\n        this.typeaheadActive = true;\n        /**\n         * Whether or not the current menu is a submenu and should not handle specific\n         * navigation keys.\n         *\n         * @export\n         */\n        this.isSubmenu = false;\n        /**\n         * The event path of the last window pointerdown event.\n         */\n        this.pointerPath = [];\n        /**\n         * Whether or not the menu is repositoining due to window / document resize\n         */\n        this.isRepositioning = false;\n        this.openCloseAnimationSignal = createAnimationSignal();\n        this.listController = new ListController({\n            isItem: (maybeItem) => {\n                return maybeItem.hasAttribute('md-menu-item');\n            },\n            getPossibleItems: () => this.slotItems,\n            isRtl: () => getComputedStyle(this).direction === 'rtl',\n            deactivateItem: (item) => {\n                item.selected = false;\n                item.tabIndex = -1;\n            },\n            activateItem: (item) => {\n                item.selected = true;\n                item.tabIndex = 0;\n            },\n            isNavigableKey: (key) => {\n                if (!this.isSubmenu) {\n                    return menuNavKeys.has(key);\n                }\n                const isRtl = getComputedStyle(this).direction === 'rtl';\n                // we want md-submenu to handle the submenu's left/right arrow exit\n                // key so it can close the menu instead of navigate the list.\n                // Therefore we need to include all keys but left/right arrow close\n                // key\n                const arrowOpen = isRtl\n                    ? NavigableKeys.ArrowLeft\n                    : NavigableKeys.ArrowRight;\n                if (key === arrowOpen) {\n                    return true;\n                }\n                return submenuNavKeys.has(key);\n            },\n            wrapNavigation: () => !this.noNavigationWrap,\n        });\n        /**\n         * The element that was focused before the menu opened.\n         */\n        this.lastFocusedElement = null;\n        /**\n         * Handles typeahead navigation through the menu.\n         */\n        this.typeaheadController = new TypeaheadController(() => {\n            return {\n                getItems: () => this.items,\n                typeaheadBufferTime: this.typeaheadDelay,\n                active: this.typeaheadActive,\n            };\n        });\n        this.currentAnchorElement = null;\n        this.internals = \n        // Cast needed for closure\n        this.attachInternals();\n        /**\n         * Handles positioning the surface and aligning it to the anchor as well as\n         * keeping it in the viewport.\n         */\n        this.menuPositionController = new SurfacePositionController(this, () => {\n            return {\n                anchorCorner: this.anchorCorner,\n                surfaceCorner: this.menuCorner,\n                surfaceEl: this.surfaceEl,\n                anchorEl: this.anchorElement,\n                positioning: this.positioning === 'popover' ? 'document' : this.positioning,\n                isOpen: this.open,\n                xOffset: this.xOffset,\n                yOffset: this.yOffset,\n                disableBlockFlip: this.noVerticalFlip,\n                disableInlineFlip: this.noHorizontalFlip,\n                onOpen: this.onOpened,\n                beforeClose: this.beforeClose,\n                onClose: this.onClosed,\n                // We can't resize components that have overflow like menus with\n                // submenus because the overflow-y will show menu items / content\n                // outside the bounds of the menu. Popover API fixes this because each\n                // submenu is hoisted to the top-layer and are not considered overflow\n                // content.\n                repositionStrategy: this.hasOverflow && this.positioning !== 'popover'\n                    ? 'move'\n                    : 'resize',\n            };\n        });\n        this.onWindowResize = () => {\n            if (this.isRepositioning ||\n                (this.positioning !== 'document' &&\n                    this.positioning !== 'fixed' &&\n                    this.positioning !== 'popover')) {\n                return;\n            }\n            this.isRepositioning = true;\n            this.reposition();\n            this.isRepositioning = false;\n        };\n        this.handleFocusout = async (event) => {\n            const anchorEl = this.anchorElement;\n            // Do not close if we focused out by clicking on the anchor element. We\n            // can't assume anchor buttons can be the related target because of iOS does\n            // not focus buttons.\n            if (this.stayOpenOnFocusout ||\n                !this.open ||\n                this.pointerPath.includes(anchorEl)) {\n                return;\n            }\n            if (event.relatedTarget) {\n                // Don't close the menu if we are switching focus between menu,\n                // md-menu-item, and md-list or if the anchor was click focused, but check\n                // if length of pointerPath is 0 because that means something was at least\n                // clicked (shift+tab case).\n                if (isElementInSubtree(event.relatedTarget, this) ||\n                    (this.pointerPath.length !== 0 &&\n                        isElementInSubtree(event.relatedTarget, anchorEl))) {\n                    return;\n                }\n            }\n            else if (this.pointerPath.includes(this)) {\n                // If menu tabindex == -1 and the user clicks on the menu or a divider, we\n                // want to keep the menu open.\n                return;\n            }\n            const oldRestoreFocus = this.skipRestoreFocus;\n            // allow focus to continue to the next focused object rather than returning\n            this.skipRestoreFocus = true;\n            this.close();\n            // await for close\n            await this.updateComplete;\n            // return to previous behavior\n            this.skipRestoreFocus = oldRestoreFocus;\n        };\n        /**\n         * Saves the last focused element focuses the new element based on\n         * `defaultFocus`, and animates open.\n         */\n        this.onOpened = async () => {\n            this.lastFocusedElement = getFocusedElement();\n            const items = this.items;\n            const activeItemRecord = getActiveItem(items);\n            if (activeItemRecord && this.defaultFocus !== FocusState.NONE) {\n                activeItemRecord.item.tabIndex = -1;\n            }\n            let animationAborted = !this.quick;\n            if (this.quick) {\n                this.dispatchEvent(new Event('opening'));\n            }\n            else {\n                animationAborted = !!(await this.animateOpen());\n            }\n            // This must come after the opening animation or else it may focus one of\n            // the items before the animation has begun and causes the list to slide\n            // (block-padding-of-the-menu)px at the end of the animation\n            switch (this.defaultFocus) {\n                case FocusState.FIRST_ITEM:\n                    const first = getFirstActivatableItem(items);\n                    if (first) {\n                        first.tabIndex = 0;\n                        first.focus();\n                        await first.updateComplete;\n                    }\n                    break;\n                case FocusState.LAST_ITEM:\n                    const last = getLastActivatableItem(items);\n                    if (last) {\n                        last.tabIndex = 0;\n                        last.focus();\n                        await last.updateComplete;\n                    }\n                    break;\n                case FocusState.LIST_ROOT:\n                    this.focus();\n                    break;\n                default:\n                case FocusState.NONE:\n                    // Do nothing.\n                    break;\n            }\n            if (!animationAborted) {\n                this.dispatchEvent(new Event('opened'));\n            }\n        };\n        /**\n         * Animates closed.\n         */\n        this.beforeClose = async () => {\n            this.open = false;\n            if (!this.skipRestoreFocus) {\n                this.lastFocusedElement?.focus?.();\n            }\n            if (!this.quick) {\n                await this.animateClose();\n            }\n        };\n        /**\n         * Focuses the last focused element.\n         */\n        this.onClosed = () => {\n            if (this.quick) {\n                this.dispatchEvent(new Event('closing'));\n                this.dispatchEvent(new Event('closed'));\n            }\n        };\n        this.onWindowPointerdown = (event) => {\n            this.pointerPath = event.composedPath();\n        };\n        /**\n         * We cannot listen to window click because Safari on iOS will not bubble a\n         * click event on window if the item clicked is not a \"clickable\" item such as\n         * <body>\n         */\n        this.onDocumentClick = (event) => {\n            if (!this.open) {\n                return;\n            }\n            const path = event.composedPath();\n            if (!this.stayOpenOnOutsideClick &&\n                !path.includes(this) &&\n                !path.includes(this.anchorElement)) {\n                this.open = false;\n            }\n        };\n        if (!isServer) {\n            this.internals.role = 'menu';\n            this.addEventListener('keydown', this.handleKeydown);\n            // Capture so that we can grab the event before it reaches the menu item\n            // istelf. Specifically useful for the case where typeahead encounters a\n            // space and we don't want the menu item to close the menu.\n            this.addEventListener('keydown', this.captureKeydown, { capture: true });\n            this.addEventListener('focusout', this.handleFocusout);\n        }\n    }\n    /**\n     * The menu items associated with this menu. The items must be `MenuItem`s and\n     * have both the `md-menu-item` and `md-list-item` attributes.\n     */\n    get items() {\n        return this.listController.items;\n    }\n    willUpdate(changed) {\n        if (!changed.has('open')) {\n            return;\n        }\n        if (this.open) {\n            this.removeAttribute('aria-hidden');\n            return;\n        }\n        this.setAttribute('aria-hidden', 'true');\n    }\n    update(changed) {\n        if (changed.has('open')) {\n            if (this.open) {\n                this.setUpGlobalEventListeners();\n            }\n            else {\n                this.cleanUpGlobalEventListeners();\n            }\n        }\n        // Firefox does not support popover. Fall-back to using fixed.\n        if (changed.has('positioning') &&\n            this.positioning === 'popover' &&\n            // type required for Google JS conformance\n            !this.showPopover) {\n            this.positioning = 'fixed';\n        }\n        super.update(changed);\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        if (this.open) {\n            this.setUpGlobalEventListeners();\n        }\n    }\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        this.cleanUpGlobalEventListeners();\n    }\n    getBoundingClientRect() {\n        if (!this.surfaceEl) {\n            return super.getBoundingClientRect();\n        }\n        return this.surfaceEl.getBoundingClientRect();\n    }\n    getClientRects() {\n        if (!this.surfaceEl) {\n            return super.getClientRects();\n        }\n        return this.surfaceEl.getClientRects();\n    }\n    render() {\n        return this.renderSurface();\n    }\n    /**\n     * Renders the positionable surface element and its contents.\n     */\n    renderSurface() {\n        return html `\n      <div\n        class=\"menu ${classMap(this.getSurfaceClasses())}\"\n        style=${styleMap(this.menuPositionController.surfaceStyles)}\n        popover=${this.positioning === 'popover' ? 'manual' : nothing}>\n        ${this.renderElevation()}\n        <div class=\"items\">\n          <div class=\"item-padding\"> ${this.renderMenuItems()} </div>\n        </div>\n      </div>\n    `;\n    }\n    /**\n     * Renders the menu items' slot\n     */\n    renderMenuItems() {\n        return html `<slot\n      @close-menu=${this.onCloseMenu}\n      @deactivate-items=${this.onDeactivateItems}\n      @request-activation=${this.onRequestActivation}\n      @deactivate-typeahead=${this.handleDeactivateTypeahead}\n      @activate-typeahead=${this.handleActivateTypeahead}\n      @stay-open-on-focusout=${this.handleStayOpenOnFocusout}\n      @close-on-focusout=${this.handleCloseOnFocusout}\n      @slotchange=${this.listController.onSlotchange}></slot>`;\n    }\n    /**\n     * Renders the elevation component.\n     */\n    renderElevation() {\n        return html `<md-elevation part=\"elevation\"></md-elevation>`;\n    }\n    getSurfaceClasses() {\n        return {\n            open: this.open,\n            fixed: this.positioning === 'fixed',\n            'has-overflow': this.hasOverflow,\n        };\n    }\n    captureKeydown(event) {\n        if (event.target === this &&\n            !event.defaultPrevented &&\n            isClosableKey(event.code)) {\n            event.preventDefault();\n            this.close();\n        }\n        this.typeaheadController.onKeydown(event);\n    }\n    /**\n     * Performs the opening animation:\n     *\n     * https://direct.googleplex.com/#/spec/295000003+271060003\n     *\n     * @return A promise that resolve to `true` if the animation was aborted,\n     *     `false` if it was not aborted.\n     */\n    async animateOpen() {\n        const surfaceEl = this.surfaceEl;\n        const slotEl = this.slotEl;\n        if (!surfaceEl || !slotEl)\n            return true;\n        const openDirection = this.openDirection;\n        this.dispatchEvent(new Event('opening'));\n        // needs to be imperative because we don't want to mix animation and Lit\n        // render timing\n        surfaceEl.classList.toggle('animating', true);\n        const signal = this.openCloseAnimationSignal.start();\n        const height = surfaceEl.offsetHeight;\n        const openingUpwards = openDirection === 'UP';\n        const children = this.items;\n        const FULL_DURATION = 500;\n        const SURFACE_OPACITY_DURATION = 50;\n        const ITEM_OPACITY_DURATION = 250;\n        // We want to fit every child fade-in animation within the full duration of\n        // the animation.\n        const DELAY_BETWEEN_ITEMS = (FULL_DURATION - ITEM_OPACITY_DURATION) / children.length;\n        const surfaceHeightAnimation = surfaceEl.animate([{ height: '0px' }, { height: `${height}px` }], {\n            duration: FULL_DURATION,\n            easing: EASING.EMPHASIZED,\n        });\n        // When we are opening upwards, we want to make sure the last item is always\n        // in view, so we need to translate it upwards the opposite direction of the\n        // height animation\n        const upPositionCorrectionAnimation = slotEl.animate([\n            { transform: openingUpwards ? `translateY(-${height}px)` : '' },\n            { transform: '' },\n        ], { duration: FULL_DURATION, easing: EASING.EMPHASIZED });\n        const surfaceOpacityAnimation = surfaceEl.animate([{ opacity: 0 }, { opacity: 1 }], SURFACE_OPACITY_DURATION);\n        const childrenAnimations = [];\n        for (let i = 0; i < children.length; i++) {\n            // If we are animating upwards, then reverse the children list.\n            const directionalIndex = openingUpwards ? children.length - 1 - i : i;\n            const child = children[directionalIndex];\n            const animation = child.animate([{ opacity: 0 }, { opacity: 1 }], {\n                duration: ITEM_OPACITY_DURATION,\n                delay: DELAY_BETWEEN_ITEMS * i,\n            });\n            // Make them all initially hidden and then clean up at the end of each\n            // animation.\n            child.classList.toggle('md-menu-hidden', true);\n            animation.addEventListener('finish', () => {\n                child.classList.toggle('md-menu-hidden', false);\n            });\n            childrenAnimations.push([child, animation]);\n        }\n        let resolveAnimation = (value) => { };\n        const animationFinished = new Promise((resolve) => {\n            resolveAnimation = resolve;\n        });\n        signal.addEventListener('abort', () => {\n            surfaceHeightAnimation.cancel();\n            upPositionCorrectionAnimation.cancel();\n            surfaceOpacityAnimation.cancel();\n            childrenAnimations.forEach(([child, animation]) => {\n                child.classList.toggle('md-menu-hidden', false);\n                animation.cancel();\n            });\n            resolveAnimation(true);\n        });\n        surfaceHeightAnimation.addEventListener('finish', () => {\n            surfaceEl.classList.toggle('animating', false);\n            this.openCloseAnimationSignal.finish();\n            resolveAnimation(false);\n        });\n        return await animationFinished;\n    }\n    /**\n     * Performs the closing animation:\n     *\n     * https://direct.googleplex.com/#/spec/295000003+271060003\n     */\n    animateClose() {\n        let resolve;\n        // This promise blocks the surface position controller from setting\n        // display: none on the surface which will interfere with this animation.\n        const animationEnded = new Promise((res) => {\n            resolve = res;\n        });\n        const surfaceEl = this.surfaceEl;\n        const slotEl = this.slotEl;\n        if (!surfaceEl || !slotEl) {\n            resolve(false);\n            return animationEnded;\n        }\n        const openDirection = this.openDirection;\n        const closingDownwards = openDirection === 'UP';\n        this.dispatchEvent(new Event('closing'));\n        // needs to be imperative because we don't want to mix animation and Lit\n        // render timing\n        surfaceEl.classList.toggle('animating', true);\n        const signal = this.openCloseAnimationSignal.start();\n        const height = surfaceEl.offsetHeight;\n        const children = this.items;\n        const FULL_DURATION = 150;\n        const SURFACE_OPACITY_DURATION = 50;\n        // The surface fades away at the very end\n        const SURFACE_OPACITY_DELAY = FULL_DURATION - SURFACE_OPACITY_DURATION;\n        const ITEM_OPACITY_DURATION = 50;\n        const ITEM_OPACITY_INITIAL_DELAY = 50;\n        const END_HEIGHT_PERCENTAGE = 0.35;\n        // We want to fit every child fade-out animation within the full duration of\n        // the animation.\n        const DELAY_BETWEEN_ITEMS = (FULL_DURATION - ITEM_OPACITY_INITIAL_DELAY - ITEM_OPACITY_DURATION) /\n            children.length;\n        // The mock has the animation shrink to 35%\n        const surfaceHeightAnimation = surfaceEl.animate([\n            { height: `${height}px` },\n            { height: `${height * END_HEIGHT_PERCENTAGE}px` },\n        ], {\n            duration: FULL_DURATION,\n            easing: EASING.EMPHASIZED_ACCELERATE,\n        });\n        // When we are closing downwards, we want to make sure the last item is\n        // always in view, so we need to translate it upwards the opposite direction\n        // of the height animation\n        const downPositionCorrectionAnimation = slotEl.animate([\n            { transform: '' },\n            {\n                transform: closingDownwards\n                    ? `translateY(-${height * (1 - END_HEIGHT_PERCENTAGE)}px)`\n                    : '',\n            },\n        ], { duration: FULL_DURATION, easing: EASING.EMPHASIZED_ACCELERATE });\n        const surfaceOpacityAnimation = surfaceEl.animate([{ opacity: 1 }, { opacity: 0 }], { duration: SURFACE_OPACITY_DURATION, delay: SURFACE_OPACITY_DELAY });\n        const childrenAnimations = [];\n        for (let i = 0; i < children.length; i++) {\n            // If the animation is closing upwards, then reverse the list of\n            // children so that we animate in the opposite direction.\n            const directionalIndex = closingDownwards ? i : children.length - 1 - i;\n            const child = children[directionalIndex];\n            const animation = child.animate([{ opacity: 1 }, { opacity: 0 }], {\n                duration: ITEM_OPACITY_DURATION,\n                delay: ITEM_OPACITY_INITIAL_DELAY + DELAY_BETWEEN_ITEMS * i,\n            });\n            // Make sure the items stay hidden at the end of each child animation.\n            // We clean this up at the end of the overall animation.\n            animation.addEventListener('finish', () => {\n                child.classList.toggle('md-menu-hidden', true);\n            });\n            childrenAnimations.push([child, animation]);\n        }\n        signal.addEventListener('abort', () => {\n            surfaceHeightAnimation.cancel();\n            downPositionCorrectionAnimation.cancel();\n            surfaceOpacityAnimation.cancel();\n            childrenAnimations.forEach(([child, animation]) => {\n                animation.cancel();\n                child.classList.toggle('md-menu-hidden', false);\n            });\n            resolve(false);\n        });\n        surfaceHeightAnimation.addEventListener('finish', () => {\n            surfaceEl.classList.toggle('animating', false);\n            childrenAnimations.forEach(([child]) => {\n                child.classList.toggle('md-menu-hidden', false);\n            });\n            this.openCloseAnimationSignal.finish();\n            this.dispatchEvent(new Event('closed'));\n            resolve(true);\n        });\n        return animationEnded;\n    }\n    handleKeydown(event) {\n        // At any key event, the pointer interaction is done so we need to clear our\n        // cached pointerpath. This handles the case where the user clicks on the\n        // anchor, and then hits shift+tab\n        this.pointerPath = [];\n        this.listController.handleKeydown(event);\n    }\n    setUpGlobalEventListeners() {\n        document.addEventListener('click', this.onDocumentClick, { capture: true });\n        window.addEventListener('pointerdown', this.onWindowPointerdown);\n        document.addEventListener('resize', this.onWindowResize, { passive: true });\n        window.addEventListener('resize', this.onWindowResize, { passive: true });\n    }\n    cleanUpGlobalEventListeners() {\n        document.removeEventListener('click', this.onDocumentClick, {\n            capture: true,\n        });\n        window.removeEventListener('pointerdown', this.onWindowPointerdown);\n        document.removeEventListener('resize', this.onWindowResize);\n        window.removeEventListener('resize', this.onWindowResize);\n    }\n    onCloseMenu() {\n        this.close();\n    }\n    onDeactivateItems(event) {\n        event.stopPropagation();\n        this.listController.onDeactivateItems();\n    }\n    onRequestActivation(event) {\n        event.stopPropagation();\n        this.listController.onRequestActivation(event);\n    }\n    handleDeactivateTypeahead(event) {\n        // stopPropagation so that this does not deactivate any typeaheads in menus\n        // nested above it e.g. md-sub-menu\n        event.stopPropagation();\n        this.typeaheadActive = false;\n    }\n    handleActivateTypeahead(event) {\n        // stopPropagation so that this does not activate any typeaheads in menus\n        // nested above it e.g. md-sub-menu\n        event.stopPropagation();\n        this.typeaheadActive = true;\n    }\n    handleStayOpenOnFocusout(event) {\n        event.stopPropagation();\n        this.stayOpenOnFocusout = true;\n    }\n    handleCloseOnFocusout(event) {\n        event.stopPropagation();\n        this.stayOpenOnFocusout = false;\n    }\n    close() {\n        this.open = false;\n        const maybeSubmenu = this.slotItems;\n        maybeSubmenu.forEach((item) => {\n            item.close?.();\n        });\n    }\n    show() {\n        this.open = true;\n    }\n    /**\n     * Activates the next item in the menu. If at the end of the menu, the first\n     * item will be activated.\n     *\n     * @return The activated menu item or `null` if there are no items.\n     */\n    activateNextItem() {\n        return this.listController.activateNextItem() ?? null;\n    }\n    /**\n     * Activates the previous item in the menu. If at the start of the menu, the\n     * last item will be activated.\n     *\n     * @return The activated menu item or `null` if there are no items.\n     */\n    activatePreviousItem() {\n        return this.listController.activatePreviousItem() ?? null;\n    }\n    /**\n     * Repositions the menu if it is open.\n     *\n     * Useful for the case where document or window-positioned menus have their\n     * anchors moved while open.\n     */\n    reposition() {\n        if (this.open) {\n            this.menuPositionController.position();\n        }\n    }\n}\n__decorate([\n    query('.menu')\n], Menu.prototype, \"surfaceEl\", void 0);\n__decorate([\n    query('slot')\n], Menu.prototype, \"slotEl\", void 0);\n__decorate([\n    property()\n], Menu.prototype, \"anchor\", void 0);\n__decorate([\n    property()\n], Menu.prototype, \"positioning\", void 0);\n__decorate([\n    property({ type: Boolean })\n], Menu.prototype, \"quick\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'has-overflow' })\n], Menu.prototype, \"hasOverflow\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], Menu.prototype, \"open\", void 0);\n__decorate([\n    property({ type: Number, attribute: 'x-offset' })\n], Menu.prototype, \"xOffset\", void 0);\n__decorate([\n    property({ type: Number, attribute: 'y-offset' })\n], Menu.prototype, \"yOffset\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'no-horizontal-flip' })\n], Menu.prototype, \"noHorizontalFlip\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'no-vertical-flip' })\n], Menu.prototype, \"noVerticalFlip\", void 0);\n__decorate([\n    property({ type: Number, attribute: 'typeahead-delay' })\n], Menu.prototype, \"typeaheadDelay\", void 0);\n__decorate([\n    property({ attribute: 'anchor-corner' })\n], Menu.prototype, \"anchorCorner\", void 0);\n__decorate([\n    property({ attribute: 'menu-corner' })\n], Menu.prototype, \"menuCorner\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'stay-open-on-outside-click' })\n], Menu.prototype, \"stayOpenOnOutsideClick\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'stay-open-on-focusout' })\n], Menu.prototype, \"stayOpenOnFocusout\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'skip-restore-focus' })\n], Menu.prototype, \"skipRestoreFocus\", void 0);\n__decorate([\n    property({ attribute: 'default-focus' })\n], Menu.prototype, \"defaultFocus\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'no-navigation-wrap' })\n], Menu.prototype, \"noNavigationWrap\", void 0);\n__decorate([\n    queryAssignedElements({ flatten: true })\n], Menu.prototype, \"slotItems\", void 0);\n__decorate([\n    state()\n], Menu.prototype, \"typeaheadActive\", void 0);\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./menu/internal/menu-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{--md-elevation-level: var(--md-menu-container-elevation, 2);--md-elevation-shadow-color: var(--md-menu-container-shadow-color, var(--md-sys-color-shadow, #000));min-width:112px;color:unset;display:contents}md-focus-ring{--md-focus-ring-shape: var(--md-menu-container-shape, var(--md-sys-shape-corner-extra-small, 4px))}.menu{border-radius:var(--md-menu-container-shape, var(--md-sys-shape-corner-extra-small, 4px));display:none;inset:auto;border:none;padding:0px;overflow:visible;background-color:rgba(0,0,0,0);color:inherit;opacity:0;z-index:20;position:absolute;user-select:none;max-height:inherit;height:inherit;min-width:inherit;max-width:inherit;scrollbar-width:inherit}.menu::backdrop{display:none}.fixed{position:fixed}.items{display:block;list-style-type:none;margin:0;outline:none;box-sizing:border-box;background-color:var(--md-menu-container-color, var(--md-sys-color-surface-container, #f3edf7));height:inherit;max-height:inherit;overflow:auto;min-width:inherit;max-width:inherit;border-radius:inherit;scrollbar-width:inherit}.item-padding{padding-block:8px}.has-overflow:not([popover]) .items{overflow:visible}.has-overflow.animating .items,.animating .items{overflow:hidden}.has-overflow.animating .items{pointer-events:none}.animating ::slotted(.md-menu-hidden){opacity:0}slot{display:block;height:inherit;max-height:inherit}::slotted(:is(md-divider,[role=separator])){margin:8px 0}@media(forced-colors: active){.menu{border-style:solid;border-color:CanvasText;border-width:1px}}\n`;\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { Menu } from './internal/menu.js';\nimport { styles } from './internal/menu-styles.js';\nexport { FocusState, } from './internal/controllers/shared.js';\nexport { Corner } from './internal/menu.js';\n/**\n * @summary Menus display a list of choices on a temporary surface.\n *\n * @description\n * Menus appear when users interact with a button, action, or other control.\n *\n * They can be opened from a variety of elements, most commonly icon buttons,\n * buttons, and text fields.\n *\n * md-menu listens for the `close-menu` and `deselect-items` events.\n *\n * - `close-menu` closes the menu when dispatched from a child element.\n * - `deselect-items` deselects all of its immediate menu-item children.\n *\n * @example\n * ```html\n * <div style=\"position:relative;\">\n *   <button\n *       id=\"anchor\"\n *       @click=${() => this.menuRef.value.show()}>\n *     Click to open menu\n *   </button>\n *   <!--\n *     `has-overflow` is required when using a submenu which overflows the\n *     menu's contents.\n *\n *     Additionally, `anchor` ingests an idref which do not pass through shadow\n *     roots. You can also set `.anchorElement` to an element reference if\n *     necessary.\n *   -->\n *   <md-menu anchor=\"anchor\" has-overflow ${ref(menuRef)}>\n *     <md-menu-item headline=\"This is a headline\"></md-menu-item>\n *     <md-sub-menu>\n *       <md-menu-item\n *           slot=\"item\"\n *           headline=\"this is a submenu item\">\n *       </md-menu-item>\n *       <md-menu slot=\"menu\">\n *         <md-menu-item headline=\"This is an item inside a submenu\">\n *         </md-menu-item>\n *       </md-menu>\n *     </md-sub-menu>\n *   </md-menu>\n * </div>\n * ```\n *\n * @final\n * @suppress {visibility}\n */\nexport let MdMenu = class MdMenu extends Menu {\n};\nMdMenu.styles = [styles];\nMdMenu = __decorate([\n    customElement('md-menu')\n], MdMenu);\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { CloseReason, createDefaultCloseMenuEvent, isClosableKey, } from './shared.js';\n/**\n * A controller that provides most functionality of an element that implements\n * the MenuItem interface.\n */\nexport class MenuItemController {\n    /**\n     * @param host The MenuItem in which to attach this controller to.\n     * @param config The object that configures this controller's behavior.\n     */\n    constructor(host, config) {\n        this.host = host;\n        this.internalTypeaheadText = null;\n        /**\n         * Bind this click listener to the interactive element. Handles closing the\n         * menu.\n         */\n        this.onClick = () => {\n            if (this.host.keepOpen)\n                return;\n            this.host.dispatchEvent(createDefaultCloseMenuEvent(this.host, {\n                kind: CloseReason.CLICK_SELECTION,\n            }));\n        };\n        /**\n         * Bind this click listener to the interactive element. Handles closing the\n         * menu.\n         */\n        this.onKeydown = (event) => {\n            // Check if the interactive element is an anchor tag. If so, click it.\n            if (this.host.href && event.code === 'Enter') {\n                const interactiveElement = this.getInteractiveElement();\n                if (interactiveElement instanceof HTMLAnchorElement) {\n                    interactiveElement.click();\n                }\n            }\n            if (event.defaultPrevented)\n                return;\n            // If the host has keepOpen = true we should ignore clicks & Space/Enter,\n            // however we always maintain the ability to close a menu with a explicit\n            // `escape` keypress.\n            const keyCode = event.code;\n            if (this.host.keepOpen && keyCode !== 'Escape')\n                return;\n            if (isClosableKey(keyCode)) {\n                event.preventDefault();\n                this.host.dispatchEvent(createDefaultCloseMenuEvent(this.host, {\n                    kind: CloseReason.KEYDOWN,\n                    key: keyCode,\n                }));\n            }\n        };\n        this.getHeadlineElements = config.getHeadlineElements;\n        this.getSupportingTextElements = config.getSupportingTextElements;\n        this.getDefaultElements = config.getDefaultElements;\n        this.getInteractiveElement = config.getInteractiveElement;\n        this.host.addController(this);\n    }\n    /**\n     * The text that is selectable via typeahead. If not set, defaults to the\n     * innerText of the item slotted into the `\"headline\"` slot, and if there are\n     * no slotted elements into headline, then it checks the _default_ slot, and\n     * then the `\"supporting-text\"` slot if nothing is in _default_.\n     */\n    get typeaheadText() {\n        if (this.internalTypeaheadText !== null) {\n            return this.internalTypeaheadText;\n        }\n        const headlineElements = this.getHeadlineElements();\n        const textParts = [];\n        headlineElements.forEach((headlineElement) => {\n            if (headlineElement.textContent && headlineElement.textContent.trim()) {\n                textParts.push(headlineElement.textContent.trim());\n            }\n        });\n        // If there are no headline elements, check the default slot's text content\n        if (textParts.length === 0) {\n            this.getDefaultElements().forEach((defaultElement) => {\n                if (defaultElement.textContent && defaultElement.textContent.trim()) {\n                    textParts.push(defaultElement.textContent.trim());\n                }\n            });\n        }\n        // If there are no headline nor default slot elements, check the\n        //supporting-text slot's text content\n        if (textParts.length === 0) {\n            this.getSupportingTextElements().forEach((supportingTextElement) => {\n                if (supportingTextElement.textContent &&\n                    supportingTextElement.textContent.trim()) {\n                    textParts.push(supportingTextElement.textContent.trim());\n                }\n            });\n        }\n        return textParts.join(' ');\n    }\n    /**\n     * The recommended tag name to render as the list item.\n     */\n    get tagName() {\n        const type = this.host.type;\n        switch (type) {\n            case 'link':\n                return 'a';\n            case 'button':\n                return 'button';\n            default:\n            case 'menuitem':\n            case 'option':\n                return 'li';\n        }\n    }\n    /**\n     * The recommended role of the menu item.\n     */\n    get role() {\n        return this.host.type === 'option' ? 'option' : 'menuitem';\n    }\n    hostConnected() {\n        this.host.toggleAttribute('md-menu-item', true);\n    }\n    hostUpdate() {\n        if (this.host.href) {\n            this.host.type = 'link';\n        }\n    }\n    /**\n     * Use to set the typeaheadText when it changes.\n     */\n    setTypeaheadText(text) {\n        this.internalTypeaheadText = text;\n    }\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport '../../../focus/md-focus-ring.js';\nimport '../../../labs/item/item.js';\nimport '../../../ripple/ripple.js';\nimport { html, LitElement, nothing } from 'lit';\nimport { property, query, queryAssignedElements, queryAssignedNodes, } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { literal, html as staticHtml } from 'lit/static-html.js';\nimport { mixinDelegatesAria } from '../../../internal/aria/delegate.js';\nimport { MenuItemController, } from '../controllers/menuItemController.js';\n// Separate variable needed for closure.\nconst menuItemBaseClass = mixinDelegatesAria(LitElement);\n/**\n * @fires close-menu {CustomEvent<{initiator: SelectOption, reason: Reason, itemPath: SelectOption[]}>}\n * Closes the encapsulating menu on closable interaction. --bubbles --composed\n */\nexport class MenuItemEl extends menuItemBaseClass {\n    constructor() {\n        super(...arguments);\n        /**\n         * Disables the item and makes it non-selectable and non-interactive.\n         */\n        this.disabled = false;\n        /**\n         * Sets the behavior and role of the menu item, defaults to \"menuitem\".\n         */\n        this.type = 'menuitem';\n        /**\n         * Sets the underlying `HTMLAnchorElement`'s `href` resource attribute.\n         */\n        this.href = '';\n        /**\n         * Sets the underlying `HTMLAnchorElement`'s `target` attribute when `href` is\n         * set.\n         */\n        this.target = '';\n        /**\n         * Keeps the menu open if clicked or keyboard selected.\n         */\n        this.keepOpen = false;\n        /**\n         * Sets the item in the selected visual state when a submenu is opened.\n         */\n        this.selected = false;\n        this.menuItemController = new MenuItemController(this, {\n            getHeadlineElements: () => {\n                return this.headlineElements;\n            },\n            getSupportingTextElements: () => {\n                return this.supportingTextElements;\n            },\n            getDefaultElements: () => {\n                return this.defaultElements;\n            },\n            getInteractiveElement: () => this.listItemRoot,\n        });\n    }\n    /**\n     * The text that is selectable via typeahead. If not set, defaults to the\n     * innerText of the item slotted into the `\"headline\"` slot.\n     */\n    get typeaheadText() {\n        return this.menuItemController.typeaheadText;\n    }\n    set typeaheadText(text) {\n        this.menuItemController.setTypeaheadText(text);\n    }\n    render() {\n        return this.renderListItem(html `\n      <md-item>\n        <div slot=\"container\">\n          ${this.renderRipple()} ${this.renderFocusRing()}\n        </div>\n        <slot name=\"start\" slot=\"start\"></slot>\n        <slot name=\"end\" slot=\"end\"></slot>\n        ${this.renderBody()}\n      </md-item>\n    `);\n    }\n    /**\n     * Renders the root list item.\n     *\n     * @param content the child content of the list item.\n     */\n    renderListItem(content) {\n        const isAnchor = this.type === 'link';\n        let tag;\n        switch (this.menuItemController.tagName) {\n            case 'a':\n                tag = literal `a`;\n                break;\n            case 'button':\n                tag = literal `button`;\n                break;\n            default:\n            case 'li':\n                tag = literal `li`;\n                break;\n        }\n        // TODO(b/265339866): announce \"button\"/\"link\" inside of a list item. Until\n        // then all are \"menuitem\" roles for correct announcement.\n        const target = isAnchor && !!this.target ? this.target : nothing;\n        return staticHtml `\n      <${tag}\n        id=\"item\"\n        tabindex=${this.disabled && !isAnchor ? -1 : 0}\n        role=${this.menuItemController.role}\n        aria-label=${this.ariaLabel || nothing}\n        aria-selected=${this.ariaSelected || nothing}\n        aria-checked=${this.ariaChecked || nothing}\n        aria-expanded=${this.ariaExpanded || nothing}\n        aria-haspopup=${this.ariaHasPopup || nothing}\n        class=\"list-item ${classMap(this.getRenderClasses())}\"\n        href=${this.href || nothing}\n        target=${target}\n        @click=${this.menuItemController.onClick}\n        @keydown=${this.menuItemController.onKeydown}\n      >${content}</${tag}>\n    `;\n    }\n    /**\n     * Handles rendering of the ripple element.\n     */\n    renderRipple() {\n        return html ` <md-ripple\n      part=\"ripple\"\n      for=\"item\"\n      ?disabled=${this.disabled}></md-ripple>`;\n    }\n    /**\n     * Handles rendering of the focus ring.\n     */\n    renderFocusRing() {\n        return html ` <md-focus-ring\n      part=\"focus-ring\"\n      for=\"item\"\n      inward></md-focus-ring>`;\n    }\n    /**\n     * Classes applied to the list item root.\n     */\n    getRenderClasses() {\n        return {\n            'disabled': this.disabled,\n            'selected': this.selected,\n        };\n    }\n    /**\n     * Handles rendering the headline and supporting text.\n     */\n    renderBody() {\n        return html `\n      <slot></slot>\n      <slot name=\"overline\" slot=\"overline\"></slot>\n      <slot name=\"headline\" slot=\"headline\"></slot>\n      <slot name=\"supporting-text\" slot=\"supporting-text\"></slot>\n      <slot\n        name=\"trailing-supporting-text\"\n        slot=\"trailing-supporting-text\"></slot>\n    `;\n    }\n    focus() {\n        // TODO(b/300334509): needed for some cases where delegatesFocus doesn't\n        // work programmatically like in FF and select-option\n        this.listItemRoot?.focus();\n    }\n}\n/** @nocollapse */\nMenuItemEl.shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n};\n__decorate([\n    property({ type: Boolean, reflect: true })\n], MenuItemEl.prototype, \"disabled\", void 0);\n__decorate([\n    property()\n], MenuItemEl.prototype, \"type\", void 0);\n__decorate([\n    property()\n], MenuItemEl.prototype, \"href\", void 0);\n__decorate([\n    property()\n], MenuItemEl.prototype, \"target\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'keep-open' })\n], MenuItemEl.prototype, \"keepOpen\", void 0);\n__decorate([\n    property({ type: Boolean })\n], MenuItemEl.prototype, \"selected\", void 0);\n__decorate([\n    query('.list-item')\n], MenuItemEl.prototype, \"listItemRoot\", void 0);\n__decorate([\n    queryAssignedElements({ slot: 'headline' })\n], MenuItemEl.prototype, \"headlineElements\", void 0);\n__decorate([\n    queryAssignedElements({ slot: 'supporting-text' })\n], MenuItemEl.prototype, \"supportingTextElements\", void 0);\n__decorate([\n    queryAssignedNodes({ slot: '' })\n], MenuItemEl.prototype, \"defaultElements\", void 0);\n__decorate([\n    property({ attribute: 'typeahead-text' })\n], MenuItemEl.prototype, \"typeaheadText\", null);\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./menu/internal/menuitem/menu-item-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{display:flex;--md-ripple-hover-color: var(--md-menu-item-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--md-ripple-hover-opacity: var(--md-menu-item-hover-state-layer-opacity, 0.08);--md-ripple-pressed-color: var(--md-menu-item-pressed-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--md-ripple-pressed-opacity: var(--md-menu-item-pressed-state-layer-opacity, 0.12)}:host([disabled]){opacity:var(--md-menu-item-disabled-opacity, 0.3);pointer-events:none}md-focus-ring{z-index:1;--md-focus-ring-shape: 8px}a,button,li{background:none;border:none;padding:0;margin:0;text-align:unset;text-decoration:none}.list-item{border-radius:inherit;display:flex;flex:1;max-width:inherit;min-width:inherit;outline:none;-webkit-tap-highlight-color:rgba(0,0,0,0)}.list-item:not(.disabled){cursor:pointer}[slot=container]{pointer-events:none}md-ripple{border-radius:inherit}md-item{border-radius:inherit;flex:1;color:var(--md-menu-item-label-text-color, var(--md-sys-color-on-surface, #1d1b20));font-family:var(--md-menu-item-label-text-font, var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto)));font-size:var(--md-menu-item-label-text-size, var(--md-sys-typescale-body-large-size, 1rem));line-height:var(--md-menu-item-label-text-line-height, var(--md-sys-typescale-body-large-line-height, 1.5rem));font-weight:var(--md-menu-item-label-text-weight, var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400)));min-height:var(--md-menu-item-one-line-container-height, 56px);padding-top:var(--md-menu-item-top-space, 12px);padding-bottom:var(--md-menu-item-bottom-space, 12px);padding-inline-start:var(--md-menu-item-leading-space, 16px);padding-inline-end:var(--md-menu-item-trailing-space, 16px)}md-item[multiline]{min-height:var(--md-menu-item-two-line-container-height, 72px)}[slot=supporting-text]{color:var(--md-menu-item-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));font-family:var(--md-menu-item-supporting-text-font, var(--md-sys-typescale-body-medium-font, var(--md-ref-typeface-plain, Roboto)));font-size:var(--md-menu-item-supporting-text-size, var(--md-sys-typescale-body-medium-size, 0.875rem));line-height:var(--md-menu-item-supporting-text-line-height, var(--md-sys-typescale-body-medium-line-height, 1.25rem));font-weight:var(--md-menu-item-supporting-text-weight, var(--md-sys-typescale-body-medium-weight, var(--md-ref-typeface-weight-regular, 400)))}[slot=trailing-supporting-text]{color:var(--md-menu-item-trailing-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));font-family:var(--md-menu-item-trailing-supporting-text-font, var(--md-sys-typescale-label-small-font, var(--md-ref-typeface-plain, Roboto)));font-size:var(--md-menu-item-trailing-supporting-text-size, var(--md-sys-typescale-label-small-size, 0.6875rem));line-height:var(--md-menu-item-trailing-supporting-text-line-height, var(--md-sys-typescale-label-small-line-height, 1rem));font-weight:var(--md-menu-item-trailing-supporting-text-weight, var(--md-sys-typescale-label-small-weight, var(--md-ref-typeface-weight-medium, 500)))}:is([slot=start],[slot=end])::slotted(*){fill:currentColor}[slot=start]{color:var(--md-menu-item-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f))}[slot=end]{color:var(--md-menu-item-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f))}.list-item{background-color:var(--md-menu-item-container-color, transparent)}.list-item.selected{background-color:var(--md-menu-item-selected-container-color, var(--md-sys-color-secondary-container, #e8def8))}.selected:not(.disabled) ::slotted(*){color:var(--md-menu-item-selected-label-text-color, var(--md-sys-color-on-secondary-container, #1d192b))}@media(forced-colors: active){:host([disabled]),:host([disabled]) slot{color:GrayText;opacity:1}.list-item{position:relative}.list-item.selected::before{content:\"\";position:absolute;inset:0;box-sizing:border-box;border-radius:inherit;pointer-events:none;border:3px double CanvasText}}\n`;\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { MenuItemEl } from './internal/menuitem/menu-item.js';\nimport { styles } from './internal/menuitem/menu-item-styles.js';\n/**\n * @summary Menus display a list of choices on a temporary surface.\n *\n * @description\n * Menu items are the selectable choices within the menu. Menu items must\n * implement the `MenuItem` interface and also have the `md-menu-item`\n * attribute. Additionally menu items are list items so they must also have the\n * `md-list-item` attribute.\n *\n * Menu items can control a menu by selectively firing the `close-menu` and\n * `deselect-items` events.\n *\n * @final\n * @suppress {visibility}\n */\nexport let MdMenuItem = class MdMenuItem extends MenuItemEl {\n};\nMdMenuItem.styles = [styles];\nMdMenuItem = __decorate([\n    customElement('md-menu-item')\n], MdMenuItem);\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { html, isServer, LitElement } from 'lit';\nimport { property, queryAssignedElements } from 'lit/decorators.js';\nimport { createDeactivateItemsEvent, createRequestActivationEvent, deactivateActiveItem, getFirstActivatableItem, } from '../../../list/internal/list-navigation-helpers.js';\nimport { CloseReason, createActivateTypeaheadEvent, createDeactivateTypeaheadEvent, KeydownCloseKey, NavigableKey, SelectionKey, } from '../controllers/shared.js';\nimport { Corner } from '../menu.js';\n/**\n * @fires deactivate-items {Event} Requests the parent menu to deselect other\n * items when a submenu opens. --bubbles --composed\n * @fires request-activation {Event} Requests the parent to make the slotted item\n * focusable and focus the item. --bubbles --composed\n * @fires deactivate-typeahead {Event} Requests the parent menu to deactivate\n * the typeahead functionality when a submenu opens. --bubbles --composed\n * @fires activate-typeahead {Event} Requests the parent menu to activate the\n * typeahead functionality when a submenu closes. --bubbles --composed\n */\nexport class SubMenu extends LitElement {\n    get item() {\n        return this.items[0] ?? null;\n    }\n    get menu() {\n        return this.menus[0] ?? null;\n    }\n    constructor() {\n        super();\n        /**\n         * The anchorCorner to set on the submenu.\n         */\n        this.anchorCorner = Corner.START_END;\n        /**\n         * The menuCorner to set on the submenu.\n         */\n        this.menuCorner = Corner.START_START;\n        /**\n         * The delay between mouseenter and submenu opening.\n         */\n        this.hoverOpenDelay = 400;\n        /**\n         * The delay between ponterleave and the submenu closing.\n         */\n        this.hoverCloseDelay = 400;\n        /**\n         * READONLY: self-identifies as a menu item and sets its identifying attribute\n         */\n        this.isSubMenu = true;\n        this.previousOpenTimeout = 0;\n        this.previousCloseTimeout = 0;\n        /**\n         * Starts the default 400ms countdown to open the submenu.\n         *\n         * NOTE: We explicitly use mouse events and not pointer events because\n         * pointer events apply to touch events. And if a user were to tap a\n         * sub-menu, it would fire the \"pointerenter\", \"pointerleave\", \"click\" events\n         * which would open the menu on click, and then set the timeout to close the\n         * menu due to pointerleave.\n         */\n        this.onMouseenter = () => {\n            clearTimeout(this.previousOpenTimeout);\n            clearTimeout(this.previousCloseTimeout);\n            if (this.menu?.open)\n                return;\n            // Open synchronously if delay is 0. (screenshot tests infra\n            // would never resolve otherwise)\n            if (!this.hoverOpenDelay) {\n                this.show();\n            }\n            else {\n                this.previousOpenTimeout = setTimeout(() => {\n                    this.show();\n                }, this.hoverOpenDelay);\n            }\n        };\n        /**\n         * Starts the default 400ms countdown to close the submenu.\n         *\n         * NOTE: We explicitly use mouse events and not pointer events because\n         * pointer events apply to touch events. And if a user were to tap a\n         * sub-menu, it would fire the \"pointerenter\", \"pointerleave\", \"click\" events\n         * which would open the menu on click, and then set the timeout to close the\n         * menu due to pointerleave.\n         */\n        this.onMouseleave = () => {\n            clearTimeout(this.previousCloseTimeout);\n            clearTimeout(this.previousOpenTimeout);\n            // Close synchronously if delay is 0. (screenshot tests infra\n            // would never resolve otherwise)\n            if (!this.hoverCloseDelay) {\n                this.close();\n            }\n            else {\n                this.previousCloseTimeout = setTimeout(() => {\n                    this.close();\n                }, this.hoverCloseDelay);\n            }\n        };\n        if (!isServer) {\n            this.addEventListener('mouseenter', this.onMouseenter);\n            this.addEventListener('mouseleave', this.onMouseleave);\n        }\n    }\n    render() {\n        return html `\n      <slot\n        name=\"item\"\n        @click=${this.onClick}\n        @keydown=${this.onKeydown}\n        @slotchange=${this.onSlotchange}>\n      </slot>\n      <slot\n        name=\"menu\"\n        @keydown=${this.onSubMenuKeydown}\n        @close-menu=${this.onCloseSubmenu}\n        @slotchange=${this.onSlotchange}>\n      </slot>\n    `;\n    }\n    firstUpdated() {\n        // slotchange is not fired if the contents have been SSRd\n        this.onSlotchange();\n    }\n    /**\n     * Shows the submenu.\n     */\n    async show() {\n        const menu = this.menu;\n        if (!menu || menu.open)\n            return;\n        // Ensures that we deselect items when the menu closes and reactivate\n        // typeahead when the menu closes, so that we do not have dirty state of\n        // `sub-menu > menu-item[selected]` when we reopen.\n        //\n        // This cannot happen in `close()` because the menu may close via other\n        // means Additionally, this cannot happen in onCloseSubmenu because\n        // `close-menu` may not be called via focusout of outside click and not\n        // triggered by an item\n        menu.addEventListener('closed', () => {\n            this.item.ariaExpanded = 'false';\n            this.dispatchEvent(createActivateTypeaheadEvent());\n            this.dispatchEvent(createDeactivateItemsEvent());\n            // aria-hidden required so ChromeVox doesn't announce the closed menu\n            menu.ariaHidden = 'true';\n        }, { once: true });\n        // Parent menu is `position: absolute` – this creates a new CSS relative\n        // positioning context (similar to doing `position: relative`), so the\n        // submenu's `<md-menu slot=\"submenu\" positioning=\"document\">` would be\n        // wrong even if we change `md-sub-menu` from `position: relative` to\n        // `position: static` because the submenu it would still be positioning\n        // itself relative to the parent menu.\n        if (menu.positioning === 'document') {\n            menu.positioning = 'absolute';\n        }\n        menu.quick = true;\n        // Submenus are in overflow when not fixed. Can remove once we have native\n        // popup support\n        menu.hasOverflow = true;\n        menu.anchorCorner = this.anchorCorner;\n        menu.menuCorner = this.menuCorner;\n        menu.anchorElement = this.item;\n        menu.defaultFocus = 'first-item';\n        // aria-hidden management required so ChromeVox doesn't announce the closed\n        // menu. Remove it here since we are about to show and focus it.\n        menu.removeAttribute('aria-hidden');\n        // This is required in the case where we have a leaf menu open and and the\n        // user hovers a parent menu's item which is not an md-sub-menu item.\n        // If this were set to true, then the menu would close and focus would be\n        // lost. That means the focusout event would have a `relatedTarget` of\n        // `null` since nothing in the menu would be focused anymore due to the\n        // leaf menu closing. restoring focus ensures that we keep focus in the\n        // submenu tree.\n        menu.skipRestoreFocus = false;\n        // Menu could already be opened because of mouse interaction\n        const menuAlreadyOpen = menu.open;\n        menu.show();\n        this.item.ariaExpanded = 'true';\n        this.item.ariaHasPopup = 'menu';\n        if (menu.id) {\n            this.item.setAttribute('aria-controls', menu.id);\n        }\n        // Deactivate other items. This can be the case if the user has tabbed\n        // around the menu and then mouses over an md-sub-menu.\n        this.dispatchEvent(createDeactivateItemsEvent());\n        this.dispatchEvent(createDeactivateTypeaheadEvent());\n        this.item.selected = true;\n        // This is the case of mouse hovering when already opened via keyboard or\n        // vice versa\n        if (!menuAlreadyOpen) {\n            let open = (value) => { };\n            const opened = new Promise((resolve) => {\n                open = resolve;\n            });\n            menu.addEventListener('opened', open, { once: true });\n            await opened;\n        }\n    }\n    /**\n     * Closes the submenu.\n     */\n    async close() {\n        const menu = this.menu;\n        if (!menu || !menu.open)\n            return;\n        this.dispatchEvent(createActivateTypeaheadEvent());\n        menu.quick = true;\n        menu.close();\n        this.dispatchEvent(createDeactivateItemsEvent());\n        let close = (value) => { };\n        const closed = new Promise((resolve) => {\n            close = resolve;\n        });\n        menu.addEventListener('closed', close, { once: true });\n        await closed;\n    }\n    onSlotchange() {\n        if (!this.item) {\n            return;\n        }\n        // TODO(b/301296618): clean up old aria values on change\n        this.item.ariaExpanded = 'false';\n        this.item.ariaHasPopup = 'menu';\n        if (this.menu?.id) {\n            this.item.setAttribute('aria-controls', this.menu.id);\n        }\n        this.item.keepOpen = true;\n        const menu = this.menu;\n        if (!menu)\n            return;\n        menu.isSubmenu = true;\n        // Required for ChromeVox to not linearly navigate to the menu while closed\n        menu.ariaHidden = 'true';\n    }\n    onClick() {\n        this.show();\n    }\n    /**\n     * On item keydown handles opening the submenu.\n     */\n    async onKeydown(event) {\n        const shouldOpenSubmenu = this.isSubmenuOpenKey(event.code);\n        if (event.defaultPrevented)\n            return;\n        const openedWithLR = shouldOpenSubmenu &&\n            (NavigableKey.LEFT === event.code || NavigableKey.RIGHT === event.code);\n        if (event.code === SelectionKey.SPACE || openedWithLR) {\n            // prevent space from scrolling and Left + Right from selecting previous /\n            // next items or opening / closing parent menus. Only open the submenu.\n            event.preventDefault();\n            if (openedWithLR) {\n                event.stopPropagation();\n            }\n        }\n        if (!shouldOpenSubmenu) {\n            return;\n        }\n        const submenu = this.menu;\n        if (!submenu)\n            return;\n        const submenuItems = submenu.items;\n        const firstActivatableItem = getFirstActivatableItem(submenuItems);\n        if (firstActivatableItem) {\n            await this.show();\n            firstActivatableItem.tabIndex = 0;\n            firstActivatableItem.focus();\n            return;\n        }\n    }\n    onCloseSubmenu(event) {\n        const { itemPath, reason } = event.detail;\n        itemPath.push(this.item);\n        this.dispatchEvent(createActivateTypeaheadEvent());\n        // Escape should only close one menu not all of the menus unlike space or\n        // click selection which should close all menus.\n        if (reason.kind === CloseReason.KEYDOWN &&\n            reason.key === KeydownCloseKey.ESCAPE) {\n            event.stopPropagation();\n            this.item.dispatchEvent(createRequestActivationEvent());\n            return;\n        }\n        this.dispatchEvent(createDeactivateItemsEvent());\n    }\n    async onSubMenuKeydown(event) {\n        if (event.defaultPrevented)\n            return;\n        const { close: shouldClose, keyCode } = this.isSubmenuCloseKey(event.code);\n        if (!shouldClose)\n            return;\n        // Communicate that it's handled so that we don't accidentally close every\n        // parent menu. Additionally, we want to isolate things like the typeahead\n        // keydowns from bubbling up to the parent menu and confounding things.\n        event.preventDefault();\n        if (keyCode === NavigableKey.LEFT || keyCode === NavigableKey.RIGHT) {\n            // Prevent this from bubbling to parents\n            event.stopPropagation();\n        }\n        await this.close();\n        deactivateActiveItem(this.menu.items);\n        this.item?.focus();\n        this.item.tabIndex = 0;\n        this.item.focus();\n    }\n    /**\n     * Determines whether the given KeyboardEvent code is one that should open\n     * the submenu. This is RTL-aware. By default, left, right, space, or enter.\n     *\n     * @param code The native KeyboardEvent code.\n     * @return Whether or not the key code should open the submenu.\n     */\n    isSubmenuOpenKey(code) {\n        const isRtl = getComputedStyle(this).direction === 'rtl';\n        const arrowEnterKey = isRtl ? NavigableKey.LEFT : NavigableKey.RIGHT;\n        switch (code) {\n            case arrowEnterKey:\n            case SelectionKey.SPACE:\n            case SelectionKey.ENTER:\n                return true;\n            default:\n                return false;\n        }\n    }\n    /**\n     * Determines whether the given KeyboardEvent code is one that should close\n     * the submenu. This is RTL-aware. By default right, left, or escape.\n     *\n     * @param code The native KeyboardEvent code.\n     * @return Whether or not the key code should close the submenu.\n     */\n    isSubmenuCloseKey(code) {\n        const isRtl = getComputedStyle(this).direction === 'rtl';\n        const arrowEnterKey = isRtl ? NavigableKey.RIGHT : NavigableKey.LEFT;\n        switch (code) {\n            case arrowEnterKey:\n            case KeydownCloseKey.ESCAPE:\n                return { close: true, keyCode: code };\n            default:\n                return { close: false };\n        }\n    }\n}\n__decorate([\n    property({ attribute: 'anchor-corner' })\n], SubMenu.prototype, \"anchorCorner\", void 0);\n__decorate([\n    property({ attribute: 'menu-corner' })\n], SubMenu.prototype, \"menuCorner\", void 0);\n__decorate([\n    property({ type: Number, attribute: 'hover-open-delay' })\n], SubMenu.prototype, \"hoverOpenDelay\", void 0);\n__decorate([\n    property({ type: Number, attribute: 'hover-close-delay' })\n], SubMenu.prototype, \"hoverCloseDelay\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true, attribute: 'md-sub-menu' })\n], SubMenu.prototype, \"isSubMenu\", void 0);\n__decorate([\n    queryAssignedElements({ slot: 'item', flatten: true })\n], SubMenu.prototype, \"items\", void 0);\n__decorate([\n    queryAssignedElements({ slot: 'menu', flatten: true })\n], SubMenu.prototype, \"menus\", void 0);\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./menu/internal/submenu/sub-menu-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{position:relative;display:flex;flex-direction:column}\n`;\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { SubMenu } from './internal/submenu/sub-menu.js';\nimport { styles } from './internal/submenu/sub-menu-styles.js';\n/**\n * @summary Menus display a list of choices on a temporary surface.\n *\n * @description\n * Menu items are the selectable choices within the menu. Menu items must\n * implement the `Menu` interface and also have the `md-menu`\n * attribute. Additionally menu items are list items so they must also have the\n * `md-list-item` attribute.\n *\n * Menu items can control a menu by selectively firing the `close-menu` and\n * `deselect-items` events.\n *\n * This menu item will open a sub-menu that is slotted in the `submenu` slot.\n * Additionally, the containing menu must either have `has-overflow` or\n * `positioning=fixed` set to `true` in order to display the containing menu\n * properly.\n *\n * @example\n * ```html\n * <div style=\"position:relative;\">\n *   <button\n *       id=\"anchor\"\n *       @click=${() => this.menuRef.value.show()}>\n *     Click to open menu\n *   </button>\n *   <!--\n *     `has-overflow` is required when using a submenu which overflows the\n *     menu's contents\n *   -->\n *   <md-menu anchor=\"anchor\" has-overflow ${ref(menuRef)}>\n *     <md-menu-item headline=\"This is a headline\"></md-menu-item>\n *     <md-sub-menu>\n *       <md-menu-item\n *           slot=\"item\"\n *           headline=\"this is a submenu item\">\n *       </md-menu-item>\n *       <md-menu slot=\"menu\">\n *         <md-menu-item headline=\"This is an item inside a submenu\">\n *         </md-menu-item>\n *       </md-menu>\n *     </md-sub-menu>\n *   </md-menu>\n * </div>\n * ```\n *\n * @final\n * @suppress {visibility}\n */\nexport let MdSubMenu = class MdSubMenu extends SubMenu {\n};\nMdSubMenu.styles = [styles];\nMdSubMenu = __decorate([\n    customElement('md-sub-menu')\n], MdSubMenu);\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { html, LitElement, nothing } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { mixinDelegatesAria } from '../../internal/aria/delegate.js';\n// Separate variable needed for closure.\nconst progressBaseClass = mixinDelegatesAria(LitElement);\n/**\n * A progress component.\n */\nexport class Progress extends progressBaseClass {\n    constructor() {\n        super(...arguments);\n        /**\n         * Progress to display, a fraction between 0 and `max`.\n         */\n        this.value = 0;\n        /**\n         * Maximum progress to display, defaults to 1.\n         */\n        this.max = 1;\n        /**\n         * Whether or not to display indeterminate progress, which gives no indication\n         * to how long an activity will take.\n         */\n        this.indeterminate = false;\n        /**\n         * Whether or not to render indeterminate mode using 4 colors instead of one.\n         */\n        this.fourColor = false;\n    }\n    render() {\n        // Needed for closure conformance\n        const { ariaLabel } = this;\n        return html `\n      <div\n        class=\"progress ${classMap(this.getRenderClasses())}\"\n        role=\"progressbar\"\n        aria-label=\"${ariaLabel || nothing}\"\n        aria-valuemin=\"0\"\n        aria-valuemax=${this.max}\n        aria-valuenow=${this.indeterminate ? nothing : this.value}\n        >${this.renderIndicator()}</div\n      >\n    `;\n    }\n    getRenderClasses() {\n        return {\n            'indeterminate': this.indeterminate,\n            'four-color': this.fourColor,\n        };\n    }\n}\n__decorate([\n    property({ type: Number })\n], Progress.prototype, \"value\", void 0);\n__decorate([\n    property({ type: Number })\n], Progress.prototype, \"max\", void 0);\n__decorate([\n    property({ type: Boolean })\n], Progress.prototype, \"indeterminate\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'four-color' })\n], Progress.prototype, \"fourColor\", void 0);\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { html } from 'lit';\nimport { Progress } from './progress.js';\n/**\n * A circular progress component.\n */\nexport class CircularProgress extends Progress {\n    renderIndicator() {\n        if (this.indeterminate) {\n            return this.renderIndeterminateContainer();\n        }\n        return this.renderDeterminateContainer();\n    }\n    // Determinate mode is rendered with an svg so the progress arc can be\n    // easily animated via stroke-dashoffset.\n    renderDeterminateContainer() {\n        const dashOffset = (1 - this.value / this.max) * 100;\n        // note, dash-array/offset are relative to Setting `pathLength` but\n        // Chrome seems to render this inaccurately and using a large viewbox helps.\n        return html `\n      <svg viewBox=\"0 0 4800 4800\">\n        <circle class=\"track\" pathLength=\"100\"></circle>\n        <circle\n          class=\"active-track\"\n          pathLength=\"100\"\n          stroke-dashoffset=${dashOffset}></circle>\n      </svg>\n    `;\n    }\n    // Indeterminate mode rendered with 2 bordered-divs. The borders are\n    // clipped into half circles by their containers. The divs are then carefully\n    // animated to produce changes to the spinner arc size.\n    // This approach has 4.5x the FPS of rendering via svg on Chrome 111.\n    // See https://lit.dev/playground/#gist=febb773565272f75408ab06a0eb49746.\n    renderIndeterminateContainer() {\n        return html ` <div class=\"spinner\">\n      <div class=\"left\">\n        <div class=\"circle\"></div>\n      </div>\n      <div class=\"right\">\n        <div class=\"circle\"></div>\n      </div>\n    </div>`;\n    }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./progress/internal/circular-progress-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{--_active-indicator-color: var(--md-circular-progress-active-indicator-color, var(--md-sys-color-primary, #6750a4));--_active-indicator-width: var(--md-circular-progress-active-indicator-width, 10);--_four-color-active-indicator-four-color: var(--md-circular-progress-four-color-active-indicator-four-color, var(--md-sys-color-tertiary-container, #ffd8e4));--_four-color-active-indicator-one-color: var(--md-circular-progress-four-color-active-indicator-one-color, var(--md-sys-color-primary, #6750a4));--_four-color-active-indicator-three-color: var(--md-circular-progress-four-color-active-indicator-three-color, var(--md-sys-color-tertiary, #7d5260));--_four-color-active-indicator-two-color: var(--md-circular-progress-four-color-active-indicator-two-color, var(--md-sys-color-primary-container, #eaddff));--_size: var(--md-circular-progress-size, 48px);display:inline-flex;vertical-align:middle;width:var(--_size);height:var(--_size);position:relative;align-items:center;justify-content:center;contain:strict;content-visibility:auto}.progress{flex:1;align-self:stretch;margin:4px}.progress,.spinner,.left,.right,.circle,svg,.track,.active-track{position:absolute;inset:0}svg{transform:rotate(-90deg)}circle{cx:50%;cy:50%;r:calc(50%*(1 - var(--_active-indicator-width)/100));stroke-width:calc(var(--_active-indicator-width)*1%);stroke-dasharray:100;fill:rgba(0,0,0,0)}.active-track{transition:stroke-dashoffset 500ms cubic-bezier(0, 0, 0.2, 1);stroke:var(--_active-indicator-color)}.track{stroke:rgba(0,0,0,0)}.progress.indeterminate{animation:linear infinite linear-rotate;animation-duration:1568.2352941176ms}.spinner{animation:infinite both rotate-arc;animation-duration:5332ms;animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1)}.left{overflow:hidden;inset:0 50% 0 0}.right{overflow:hidden;inset:0 0 0 50%}.circle{box-sizing:border-box;border-radius:50%;border:solid calc(var(--_active-indicator-width)/100*(var(--_size) - 8px));border-color:var(--_active-indicator-color) var(--_active-indicator-color) rgba(0,0,0,0) rgba(0,0,0,0);animation:expand-arc;animation-iteration-count:infinite;animation-fill-mode:both;animation-duration:1333ms,5332ms;animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1)}.four-color .circle{animation-name:expand-arc,four-color}.left .circle{rotate:135deg;inset:0 -100% 0 0}.right .circle{rotate:100deg;inset:0 0 0 -100%;animation-delay:-666.5ms,0ms}@media(forced-colors: active){.active-track{stroke:CanvasText}.circle{border-color:CanvasText CanvasText Canvas Canvas}}@keyframes expand-arc{0%{transform:rotate(265deg)}50%{transform:rotate(130deg)}100%{transform:rotate(265deg)}}@keyframes rotate-arc{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}}@keyframes linear-rotate{to{transform:rotate(360deg)}}@keyframes four-color{0%{border-top-color:var(--_four-color-active-indicator-one-color);border-right-color:var(--_four-color-active-indicator-one-color)}15%{border-top-color:var(--_four-color-active-indicator-one-color);border-right-color:var(--_four-color-active-indicator-one-color)}25%{border-top-color:var(--_four-color-active-indicator-two-color);border-right-color:var(--_four-color-active-indicator-two-color)}40%{border-top-color:var(--_four-color-active-indicator-two-color);border-right-color:var(--_four-color-active-indicator-two-color)}50%{border-top-color:var(--_four-color-active-indicator-three-color);border-right-color:var(--_four-color-active-indicator-three-color)}65%{border-top-color:var(--_four-color-active-indicator-three-color);border-right-color:var(--_four-color-active-indicator-three-color)}75%{border-top-color:var(--_four-color-active-indicator-four-color);border-right-color:var(--_four-color-active-indicator-four-color)}90%{border-top-color:var(--_four-color-active-indicator-four-color);border-right-color:var(--_four-color-active-indicator-four-color)}100%{border-top-color:var(--_four-color-active-indicator-one-color);border-right-color:var(--_four-color-active-indicator-one-color)}}\n`;\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { CircularProgress } from './internal/circular-progress.js';\nimport { styles } from './internal/circular-progress-styles.js';\n/**\n * @summary Circular progress indicators display progress by animating along an\n * invisible circular track in a clockwise direction. They can be applied\n * directly to a surface, such as a button or card.\n *\n * @description\n * Progress indicators inform users about the status of ongoing processes.\n * - Determinate indicators display how long a process will take.\n * - Indeterminate indicators express an unspecified amount of wait time.\n *\n * @final\n * @suppress {visibility}\n */\nexport let MdCircularProgress = class MdCircularProgress extends CircularProgress {\n};\nMdCircularProgress.styles = [styles];\nMdCircularProgress = __decorate([\n    customElement('md-circular-progress')\n], MdCircularProgress);\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { Progress } from './progress.js';\n/**\n * A linear progress component.\n */\nexport class LinearProgress extends Progress {\n    constructor() {\n        super(...arguments);\n        /**\n         * Buffer amount to display, a fraction between 0 and `max`.\n         * If the value is 0 or negative, the buffer is not displayed.\n         */\n        this.buffer = 0;\n    }\n    // Note, the indeterminate animation is rendered with transform %'s\n    // Previously, this was optimized to use px calculated with the resizeObserver\n    // due to a now fixed Chrome bug: crbug.com/389359.\n    renderIndicator() {\n        const progressStyles = {\n            transform: `scaleX(${(this.indeterminate ? 1 : this.value / this.max) * 100}%)`,\n        };\n        const bufferValue = this.buffer ?? 0;\n        const hasBuffer = bufferValue > 0;\n        const dotSize = this.indeterminate || !hasBuffer ? 1 : bufferValue / this.max;\n        const dotStyles = {\n            transform: `scaleX(${dotSize * 100}%)`,\n        };\n        // Only display dots when visible - this prevents invisible infinite\n        // animation.\n        const hideDots = this.indeterminate || !hasBuffer || bufferValue >= this.max || this.value >= this.max;\n        return html `\n      <div class=\"dots\" ?hidden=${hideDots}></div>\n      <div class=\"inactive-track\" style=${styleMap(dotStyles)}></div>\n      <div class=\"bar primary-bar\" style=${styleMap(progressStyles)}>\n        <div class=\"bar-inner\"></div>\n      </div>\n      <div class=\"bar secondary-bar\">\n        <div class=\"bar-inner\"></div>\n      </div>\n    `;\n    }\n}\n__decorate([\n    property({ type: Number })\n], LinearProgress.prototype, \"buffer\", void 0);\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./progress/internal/linear-progress-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{--_active-indicator-color: var(--md-linear-progress-active-indicator-color, var(--md-sys-color-primary, #6750a4));--_active-indicator-height: var(--md-linear-progress-active-indicator-height, 4px);--_four-color-active-indicator-four-color: var(--md-linear-progress-four-color-active-indicator-four-color, var(--md-sys-color-tertiary-container, #ffd8e4));--_four-color-active-indicator-one-color: var(--md-linear-progress-four-color-active-indicator-one-color, var(--md-sys-color-primary, #6750a4));--_four-color-active-indicator-three-color: var(--md-linear-progress-four-color-active-indicator-three-color, var(--md-sys-color-tertiary, #7d5260));--_four-color-active-indicator-two-color: var(--md-linear-progress-four-color-active-indicator-two-color, var(--md-sys-color-primary-container, #eaddff));--_track-color: var(--md-linear-progress-track-color, var(--md-sys-color-surface-container-highest, #e6e0e9));--_track-height: var(--md-linear-progress-track-height, 4px);--_track-shape: var(--md-linear-progress-track-shape, var(--md-sys-shape-corner-none, 0px));border-radius:var(--_track-shape);display:flex;position:relative;min-width:80px;height:var(--_track-height);content-visibility:auto;contain:strict}.progress,.dots,.inactive-track,.bar,.bar-inner{position:absolute}.progress{direction:ltr;inset:0;border-radius:inherit;overflow:hidden;display:flex;align-items:center}.bar{animation:none;width:100%;height:var(--_active-indicator-height);transform-origin:left center;transition:transform 250ms cubic-bezier(0.4, 0, 0.6, 1)}.secondary-bar{display:none}.bar-inner{inset:0;animation:none;background:var(--_active-indicator-color)}.inactive-track{background:var(--_track-color);inset:0;transition:transform 250ms cubic-bezier(0.4, 0, 0.6, 1);transform-origin:left center}.dots{inset:0;animation:linear infinite 250ms;animation-name:buffering;background-color:var(--_track-color);background-repeat:repeat-x;-webkit-mask-image:url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 5 2' preserveAspectRatio='xMinYMin slice'%3E%3Ccircle cx='1' cy='1' r='1'/%3E%3C/svg%3E\");mask-image:url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 5 2' preserveAspectRatio='xMinYMin slice'%3E%3Ccircle cx='1' cy='1' r='1'/%3E%3C/svg%3E\");z-index:-1}.dots[hidden]{display:none}.indeterminate .bar{transition:none}.indeterminate .primary-bar{inset-inline-start:-145.167%}.indeterminate .secondary-bar{inset-inline-start:-54.8889%;display:block}.indeterminate .primary-bar{animation:linear infinite 2s;animation-name:primary-indeterminate-translate}.indeterminate .primary-bar>.bar-inner{animation:linear infinite 2s primary-indeterminate-scale}.indeterminate.four-color .primary-bar>.bar-inner{animation-name:primary-indeterminate-scale,four-color;animation-duration:2s,4s}.indeterminate .secondary-bar{animation:linear infinite 2s;animation-name:secondary-indeterminate-translate}.indeterminate .secondary-bar>.bar-inner{animation:linear infinite 2s secondary-indeterminate-scale}.indeterminate.four-color .secondary-bar>.bar-inner{animation-name:secondary-indeterminate-scale,four-color;animation-duration:2s,4s}:host(:dir(rtl)){transform:scale(-1)}@keyframes primary-indeterminate-scale{0%{transform:scaleX(0.08)}36.65%{animation-timing-function:cubic-bezier(0.334731, 0.12482, 0.785844, 1);transform:scaleX(0.08)}69.15%{animation-timing-function:cubic-bezier(0.06, 0.11, 0.6, 1);transform:scaleX(0.661479)}100%{transform:scaleX(0.08)}}@keyframes secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(0.205028, 0.057051, 0.57661, 0.453971);transform:scaleX(0.08)}19.15%{animation-timing-function:cubic-bezier(0.152313, 0.196432, 0.648374, 1.00432);transform:scaleX(0.457104)}44.15%{animation-timing-function:cubic-bezier(0.257759, -0.003163, 0.211762, 1.38179);transform:scaleX(0.72796)}100%{transform:scaleX(0.08)}}@keyframes buffering{0%{transform:translateX(calc(var(--_track-height) / 2 * 5))}}@keyframes primary-indeterminate-translate{0%{transform:translateX(0px)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0px)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(83.6714%)}100%{transform:translateX(200.611%)}}@keyframes secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0px)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(37.6519%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(84.3862%)}100%{transform:translateX(160.278%)}}@keyframes four-color{0%{background:var(--_four-color-active-indicator-one-color)}15%{background:var(--_four-color-active-indicator-one-color)}25%{background:var(--_four-color-active-indicator-two-color)}40%{background:var(--_four-color-active-indicator-two-color)}50%{background:var(--_four-color-active-indicator-three-color)}65%{background:var(--_four-color-active-indicator-three-color)}75%{background:var(--_four-color-active-indicator-four-color)}90%{background:var(--_four-color-active-indicator-four-color)}100%{background:var(--_four-color-active-indicator-one-color)}}@media(forced-colors: active){:host{outline:1px solid CanvasText}.bar-inner,.dots{background-color:CanvasText}}\n`;\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { LinearProgress } from './internal/linear-progress.js';\nimport { styles } from './internal/linear-progress-styles.js';\n/**\n * @summary Linear progress indicators display progress by animating along the\n * length of a fixed, visible track.\n *\n * @description\n * Progress indicators inform users about the status of ongoing processes.\n * - Determinate indicators display how long a process will take.\n * - Indeterminate indicators express an unspecified amount of wait time.\n *\n * @final\n * @suppress {visibility}\n */\nexport let MdLinearProgress = class MdLinearProgress extends LinearProgress {\n};\nMdLinearProgress.styles = [styles];\nMdLinearProgress = __decorate([\n    customElement('md-linear-progress')\n], MdLinearProgress);\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { property } from 'lit/decorators.js';\n/**\n * A property symbol that indicates whether or not a `Focusable` element can be\n * focused.\n */\nexport const isFocusable = Symbol('isFocusable');\nconst privateIsFocusable = Symbol('privateIsFocusable');\nconst externalTabIndex = Symbol('externalTabIndex');\nconst isUpdatingTabIndex = Symbol('isUpdatingTabIndex');\nconst updateTabIndex = Symbol('updateTabIndex');\n/**\n * Mixes in focusable functionality for a class.\n *\n * Elements can enable and disable their focusability with the `isFocusable`\n * symbol property. Changing `tabIndex` will trigger a lit render, meaning\n * `this.tabIndex` can be used in template expressions.\n *\n * This mixin will preserve externally-set tabindices. If an element turns off\n * focusability, but a user sets `tabindex=\"0\"`, it will still be focusable.\n *\n * To remove user overrides and restore focusability control to the element,\n * remove the `tabindex` attribute.\n *\n * @param base The class to mix functionality into.\n * @return The provided class with `Focusable` mixed in.\n */\nexport function mixinFocusable(base) {\n    var _a, _b, _c;\n    class FocusableElement extends base {\n        constructor() {\n            super(...arguments);\n            this[_a] = true;\n            this[_b] = null;\n            this[_c] = false;\n        }\n        get [isFocusable]() {\n            return this[privateIsFocusable];\n        }\n        set [isFocusable](value) {\n            if (this[isFocusable] === value) {\n                return;\n            }\n            this[privateIsFocusable] = value;\n            this[updateTabIndex]();\n        }\n        connectedCallback() {\n            super.connectedCallback();\n            this[updateTabIndex]();\n        }\n        attributeChangedCallback(name, old, value) {\n            if (name !== 'tabindex') {\n                super.attributeChangedCallback(name, old, value);\n                return;\n            }\n            this.requestUpdate('tabIndex', Number(old ?? -1));\n            if (this[isUpdatingTabIndex]) {\n                // Not an externally-initiated update.\n                return;\n            }\n            if (!this.hasAttribute('tabindex')) {\n                // User removed the attribute, can now use internal tabIndex\n                this[externalTabIndex] = null;\n                this[updateTabIndex]();\n                return;\n            }\n            this[externalTabIndex] = this.tabIndex;\n        }\n        [(_a = privateIsFocusable, _b = externalTabIndex, _c = isUpdatingTabIndex, updateTabIndex)]() {\n            const internalTabIndex = this[isFocusable] ? 0 : -1;\n            const computedTabIndex = this[externalTabIndex] ?? internalTabIndex;\n            this[isUpdatingTabIndex] = true;\n            this.tabIndex = computedTabIndex;\n            this[isUpdatingTabIndex] = false;\n        }\n    }\n    __decorate([\n        property({ noAccessor: true })\n    ], FocusableElement.prototype, \"tabIndex\", void 0);\n    return FocusableElement;\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { Validator } from './validator.js';\n/**\n * A validator that provides constraint validation that emulates\n * `<input type=\"radio\">` validation.\n */\nexport class RadioValidator extends Validator {\n    computeValidity(states) {\n        if (!this.radioElement) {\n            // Lazily create the radio element\n            this.radioElement = document.createElement('input');\n            this.radioElement.type = 'radio';\n            // A name is required for validation to run\n            this.radioElement.name = 'group';\n        }\n        let isRequired = false;\n        let isChecked = false;\n        for (const { checked, required } of states) {\n            if (required) {\n                isRequired = true;\n            }\n            if (checked) {\n                isChecked = true;\n            }\n        }\n        // Firefox v119 doesn't compute grouped radio validation correctly while\n        // they are detached from the DOM, which is why we don't render multiple\n        // virtual <input>s. Instead, we can check the required/checked states and\n        // grab the i18n'd validation message if the value is missing.\n        this.radioElement.checked = isChecked;\n        this.radioElement.required = isRequired;\n        return {\n            validity: {\n                valueMissing: isRequired && !isChecked,\n            },\n            validationMessage: this.radioElement.validationMessage,\n        };\n    }\n    equals(prevGroup, nextGroup) {\n        if (prevGroup.length !== nextGroup.length) {\n            return false;\n        }\n        for (let i = 0; i < prevGroup.length; i++) {\n            const prev = prevGroup[i];\n            const next = nextGroup[i];\n            if (prev.checked !== next.checked || prev.required !== next.required) {\n                return false;\n            }\n        }\n        return true;\n    }\n    copy(states) {\n        // Cast as unknown since typescript does not have enough information to\n        // infer that the array always has at least one element.\n        return states.map(({ checked, required }) => ({\n            checked,\n            required,\n        }));\n    }\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * A `ReactiveController` that provides root node-scoped single selection for\n * elements, similar to native `<input type=\"radio\">` selection.\n *\n * To use, elements should add the controller and call\n * `selectionController.handleCheckedChange()` in a getter/setter. This must\n * be synchronous to match native behavior.\n *\n * @example\n * const CHECKED = Symbol('checked');\n *\n * class MyToggle extends LitElement {\n *   get checked() { return this[CHECKED]; }\n *   set checked(checked: boolean) {\n *     const oldValue = this.checked;\n *     if (oldValue === checked) {\n *       return;\n *     }\n *\n *     this[CHECKED] = checked;\n *     this.selectionController.handleCheckedChange();\n *     this.requestUpdate('checked', oldValue);\n *   }\n *\n *   [CHECKED] = false;\n *\n *   private selectionController = new SingleSelectionController(this);\n *\n *   constructor() {\n *     super();\n *     this.addController(this.selectionController);\n *   }\n * }\n */\nexport class SingleSelectionController {\n    /**\n     * All single selection elements in the host element's root with the same\n     * `name` attribute, including the host element.\n     */\n    get controls() {\n        const name = this.host.getAttribute('name');\n        if (!name || !this.root || !this.host.isConnected) {\n            return [this.host];\n        }\n        // Cast as unknown since there is not enough information for typescript to\n        // know that there is always at least one element (the host).\n        return Array.from(this.root.querySelectorAll(`[name=\"${name}\"]`));\n    }\n    constructor(host) {\n        this.host = host;\n        this.focused = false;\n        this.root = null;\n        this.handleFocusIn = () => {\n            this.focused = true;\n            this.updateTabIndices();\n        };\n        this.handleFocusOut = () => {\n            this.focused = false;\n            this.updateTabIndices();\n        };\n        /**\n         * Handles arrow key events from the host. Using the arrow keys will\n         * select and check the next or previous sibling with the host's\n         * `name` attribute.\n         */\n        this.handleKeyDown = (event) => {\n            const isDown = event.key === 'ArrowDown';\n            const isUp = event.key === 'ArrowUp';\n            const isLeft = event.key === 'ArrowLeft';\n            const isRight = event.key === 'ArrowRight';\n            // Ignore non-arrow keys\n            if (!isLeft && !isRight && !isDown && !isUp) {\n                return;\n            }\n            // Don't try to select another sibling if there aren't any.\n            const siblings = this.controls;\n            if (!siblings.length) {\n                return;\n            }\n            // Prevent default interactions on the element for arrow keys,\n            // since this controller will introduce new behavior.\n            event.preventDefault();\n            // Check if moving forwards or backwards\n            const isRtl = getComputedStyle(this.host).direction === 'rtl';\n            const forwards = isRtl ? isLeft || isDown : isRight || isDown;\n            const hostIndex = siblings.indexOf(this.host);\n            let nextIndex = forwards ? hostIndex + 1 : hostIndex - 1;\n            // Search for the next sibling that is not disabled to select.\n            // If we return to the host index, there is nothing to select.\n            while (nextIndex !== hostIndex) {\n                if (nextIndex >= siblings.length) {\n                    // Return to start if moving past the last item.\n                    nextIndex = 0;\n                }\n                else if (nextIndex < 0) {\n                    // Go to end if moving before the first item.\n                    nextIndex = siblings.length - 1;\n                }\n                // Check if the next sibling is disabled. If so,\n                // move the index and continue searching.\n                const nextSibling = siblings[nextIndex];\n                if (nextSibling.hasAttribute('disabled')) {\n                    if (forwards) {\n                        nextIndex++;\n                    }\n                    else {\n                        nextIndex--;\n                    }\n                    continue;\n                }\n                // Uncheck and remove focusability from other siblings.\n                for (const sibling of siblings) {\n                    if (sibling !== nextSibling) {\n                        sibling.checked = false;\n                        sibling.tabIndex = -1;\n                        sibling.blur();\n                    }\n                }\n                // The next sibling should be checked, focused and dispatch a change event\n                nextSibling.checked = true;\n                nextSibling.tabIndex = 0;\n                nextSibling.focus();\n                // Fire a change event since the change is triggered by a user action.\n                // This matches native <input type=\"radio\"> behavior.\n                nextSibling.dispatchEvent(new Event('change', { bubbles: true }));\n                break;\n            }\n        };\n    }\n    hostConnected() {\n        this.root = this.host.getRootNode();\n        this.host.addEventListener('keydown', this.handleKeyDown);\n        this.host.addEventListener('focusin', this.handleFocusIn);\n        this.host.addEventListener('focusout', this.handleFocusOut);\n        if (this.host.checked) {\n            // Uncheck other siblings when attached if already checked. This mimics\n            // native <input type=\"radio\"> behavior.\n            this.uncheckSiblings();\n        }\n        // Update for the newly added host.\n        this.updateTabIndices();\n    }\n    hostDisconnected() {\n        this.host.removeEventListener('keydown', this.handleKeyDown);\n        this.host.removeEventListener('focusin', this.handleFocusIn);\n        this.host.removeEventListener('focusout', this.handleFocusOut);\n        // Update for siblings that are still connected.\n        this.updateTabIndices();\n        this.root = null;\n    }\n    /**\n     * Should be called whenever the host's `checked` property changes\n     * synchronously.\n     */\n    handleCheckedChange() {\n        if (!this.host.checked) {\n            return;\n        }\n        this.uncheckSiblings();\n        this.updateTabIndices();\n    }\n    uncheckSiblings() {\n        for (const sibling of this.controls) {\n            if (sibling !== this.host) {\n                sibling.checked = false;\n            }\n        }\n    }\n    /**\n     * Updates the `tabindex` of the host and its siblings.\n     */\n    updateTabIndices() {\n        // There are three tabindex states for a group of elements:\n        // 1. If any are checked, that element is focusable.\n        const siblings = this.controls;\n        const checkedSibling = siblings.find((sibling) => sibling.checked);\n        // 2. If an element is focused, the others are no longer focusable.\n        if (checkedSibling || this.focused) {\n            const focusable = checkedSibling || this.host;\n            focusable.tabIndex = 0;\n            for (const sibling of siblings) {\n                if (sibling !== focusable) {\n                    sibling.tabIndex = -1;\n                }\n            }\n            return;\n        }\n        // 3. If none are checked or focused, all are focusable.\n        for (const sibling of siblings) {\n            sibling.tabIndex = 0;\n        }\n    }\n}\n", "/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nvar _a;\nimport { __decorate } from \"tslib\";\nimport '../../focus/md-focus-ring.js';\nimport '../../ripple/ripple.js';\nimport { html, isServer, LitElement } from 'lit';\nimport { property, query } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { isActivationClick } from '../../internal/events/form-label-activation.js';\nimport { createValidator, getValidityAnchor, mixinConstraintValidation, } from '../../labs/behaviors/constraint-validation.js';\nimport { internals, mixinElementInternals, } from '../../labs/behaviors/element-internals.js';\nimport { mixinFocusable } from '../../labs/behaviors/focusable.js';\nimport { getFormState, getFormValue, mixinFormAssociated, } from '../../labs/behaviors/form-associated.js';\nimport { RadioValidator } from '../../labs/behaviors/validators/radio-validator.js';\nimport { SingleSelectionController } from './single-selection-controller.js';\nconst CHECKED = Symbol('checked');\nlet maskId = 0;\n// Separate variable needed for closure.\nconst radioBaseClass = mixinConstraintValidation(mixinFormAssociated(mixinElementInternals(mixinFocusable(LitElement))));\n/**\n * A radio component.\n *\n * @fires input {InputEvent} Dispatched when the value changes from user\n * interaction. --bubbles\n * @fires change {Event} Dispatched when the value changes from user\n * interaction. --bubbles --composed\n */\nexport class Radio extends radioBaseClass {\n    /**\n     * Whether or not the radio is selected.\n     */\n    get checked() {\n        return this[CHECKED];\n    }\n    set checked(checked) {\n        const wasChecked = this.checked;\n        if (wasChecked === checked) {\n            return;\n        }\n        this[CHECKED] = checked;\n        this.requestUpdate('checked', wasChecked);\n        this.selectionController.handleCheckedChange();\n    }\n    constructor() {\n        super();\n        // Unique maskId is required because of a Safari bug that fail to persist\n        // reference to the mask. This should be removed once the bug is fixed.\n        this.maskId = `cutout${++maskId}`;\n        this[_a] = false;\n        /**\n         * Whether or not the radio is required. If any radio is required in a group,\n         * all radios are implicitly required.\n         */\n        this.required = false;\n        /**\n         * The element value to use in form submission when checked.\n         */\n        this.value = 'on';\n        this.selectionController = new SingleSelectionController(this);\n        this.addController(this.selectionController);\n        if (!isServer) {\n            this[internals].role = 'radio';\n            this.addEventListener('click', this.handleClick.bind(this));\n            this.addEventListener('keydown', this.handleKeydown.bind(this));\n        }\n    }\n    render() {\n        const classes = { 'checked': this.checked };\n        return html `\n      <div class=\"container ${classMap(classes)}\" aria-hidden=\"true\">\n        <md-ripple\n          part=\"ripple\"\n          .control=${this}\n          ?disabled=${this.disabled}></md-ripple>\n        <md-focus-ring part=\"focus-ring\" .control=${this}></md-focus-ring>\n        <svg class=\"icon\" viewBox=\"0 0 20 20\">\n          <mask id=\"${this.maskId}\">\n            <rect width=\"100%\" height=\"100%\" fill=\"white\" />\n            <circle cx=\"10\" cy=\"10\" r=\"8\" fill=\"black\" />\n          </mask>\n          <circle\n            class=\"outer circle\"\n            cx=\"10\"\n            cy=\"10\"\n            r=\"10\"\n            mask=\"url(#${this.maskId})\" />\n          <circle class=\"inner circle\" cx=\"10\" cy=\"10\" r=\"5\" />\n        </svg>\n\n        <div class=\"touch-target\"></div>\n      </div>\n    `;\n    }\n    updated() {\n        this[internals].ariaChecked = String(this.checked);\n    }\n    async handleClick(event) {\n        if (this.disabled) {\n            return;\n        }\n        // allow event to propagate to user code after a microtask.\n        await 0;\n        if (event.defaultPrevented) {\n            return;\n        }\n        if (isActivationClick(event)) {\n            this.focus();\n        }\n        // Per spec, clicking on a radio input always selects it.\n        this.checked = true;\n        this.dispatchEvent(new Event('change', { bubbles: true }));\n        this.dispatchEvent(new InputEvent('input', { bubbles: true, composed: true }));\n    }\n    async handleKeydown(event) {\n        // allow event to propagate to user code after a microtask.\n        await 0;\n        if (event.key !== ' ' || event.defaultPrevented) {\n            return;\n        }\n        this.click();\n    }\n    [(_a = CHECKED, getFormValue)]() {\n        return this.checked ? this.value : null;\n    }\n    [getFormState]() {\n        return String(this.checked);\n    }\n    formResetCallback() {\n        // The checked property does not reflect, so the original attribute set by\n        // the user is used to determine the default value.\n        this.checked = this.hasAttribute('checked');\n    }\n    formStateRestoreCallback(state) {\n        this.checked = state === 'true';\n    }\n    [createValidator]() {\n        return new RadioValidator(() => {\n            if (!this.selectionController) {\n                // Validation runs on superclass construction, so selection controller\n                // might not actually be ready until this class constructs.\n                return [this];\n            }\n            return this.selectionController.controls;\n        });\n    }\n    [getValidityAnchor]() {\n        return this.container;\n    }\n}\n__decorate([\n    property({ type: Boolean })\n], Radio.prototype, \"checked\", null);\n__decorate([\n    property({ type: Boolean })\n], Radio.prototype, \"required\", void 0);\n__decorate([\n    property()\n], Radio.prototype, \"value\", void 0);\n__decorate([\n    query('.container')\n], Radio.prototype, \"container\", void 0);\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./radio/internal/radio-styles.css.\nimport { css } from 'lit';\nexport const styles = css `@layer{:host{display:inline-flex;height:var(--md-radio-icon-size, 20px);outline:none;position:relative;vertical-align:top;width:var(--md-radio-icon-size, 20px);-webkit-tap-highlight-color:rgba(0,0,0,0);cursor:pointer;--md-ripple-hover-color: var(--md-radio-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--md-ripple-hover-opacity: var(--md-radio-hover-state-layer-opacity, 0.08);--md-ripple-pressed-color: var(--md-radio-pressed-state-layer-color, var(--md-sys-color-primary, #6750a4));--md-ripple-pressed-opacity: var(--md-radio-pressed-state-layer-opacity, 0.12)}:host([disabled]){cursor:default}:host([touch-target=wrapper]){margin:max(0px,(48px - var(--md-radio-icon-size, 20px))/2)}.container{display:flex;height:100%;place-content:center;place-items:center;width:100%}md-focus-ring{height:44px;inset:unset;width:44px}.checked{--md-ripple-hover-color: var(--md-radio-selected-hover-state-layer-color, var(--md-sys-color-primary, #6750a4));--md-ripple-hover-opacity: var(--md-radio-selected-hover-state-layer-opacity, 0.08);--md-ripple-pressed-color: var(--md-radio-selected-pressed-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--md-ripple-pressed-opacity: var(--md-radio-selected-pressed-state-layer-opacity, 0.12)}.touch-target{height:48px;position:absolute;width:48px}:host([touch-target=none]) .touch-target{display:none}md-ripple{border-radius:50%;height:var(--md-radio-state-layer-size, 40px);inset:unset;width:var(--md-radio-state-layer-size, 40px)}.icon{fill:var(--md-radio-icon-color, var(--md-sys-color-on-surface-variant, #49454f));inset:0;position:absolute}.outer.circle{transition:fill 50ms linear}.inner.circle{opacity:0;transform-origin:center;transition:opacity 50ms linear}.checked .icon{fill:var(--md-radio-selected-icon-color, var(--md-sys-color-primary, #6750a4))}.checked .inner.circle{animation:inner-circle-grow 300ms cubic-bezier(0.05, 0.7, 0.1, 1);opacity:1}@keyframes inner-circle-grow{from{transform:scale(0)}to{transform:scale(1)}}:host([disabled]) .circle{animation-duration:0s;transition-duration:0s}:host(:hover) .icon{fill:var(--md-radio-hover-icon-color, var(--md-sys-color-on-surface, #1d1b20))}:host(:focus-within) .icon{fill:var(--md-radio-focus-icon-color, var(--md-sys-color-on-surface, #1d1b20))}:host(:active) .icon{fill:var(--md-radio-pressed-icon-color, var(--md-sys-color-on-surface, #1d1b20))}:host([disabled]) .icon{fill:var(--md-radio-disabled-unselected-icon-color, var(--md-sys-color-on-surface, #1d1b20));opacity:var(--md-radio-disabled-unselected-icon-opacity, 0.38)}:host(:hover) .checked .icon{fill:var(--md-radio-selected-hover-icon-color, var(--md-sys-color-primary, #6750a4))}:host(:focus-within) .checked .icon{fill:var(--md-radio-selected-focus-icon-color, var(--md-sys-color-primary, #6750a4))}:host(:active) .checked .icon{fill:var(--md-radio-selected-pressed-icon-color, var(--md-sys-color-primary, #6750a4))}:host([disabled]) .checked .icon{fill:var(--md-radio-disabled-selected-icon-color, var(--md-sys-color-on-surface, #1d1b20));opacity:var(--md-radio-disabled-selected-icon-opacity, 0.38)}}@layer hcm{@media(forced-colors: active){.icon{fill:CanvasText}:host([disabled]) .icon{fill:GrayText;opacity:1}}}\n`;\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { Radio } from './internal/radio.js';\nimport { styles } from './internal/radio-styles.js';\n/**\n * @summary Radio buttons allow users to select one option from a set.\n *\n * @description\n * Radio buttons are the recommended way to allow users to make a single\n * selection from a list of options.\n *\n * Only one radio button can be selected at a time.\n *\n * Use radio buttons to:\n * - Select a single option from a set\n * - Expose all available options\n *\n * @final\n * @suppress {visibility}\n */\nexport let MdRadio = class MdRadio extends Radio {\n};\nMdRadio.styles = [styles];\nMdRadio = __decorate([\n    customElement('md-radio')\n], MdRadio);\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { isServer } from 'lit';\nimport { internals } from './element-internals.js';\n/**\n * A symbol property used for a callback when validity has been reported.\n */\nexport const onReportValidity = Symbol('onReportValidity');\n// Private symbol members, used to avoid name clashing.\nconst privateCleanupFormListeners = Symbol('privateCleanupFormListeners');\nconst privateDoNotReportInvalid = Symbol('privateDoNotReportInvalid');\nconst privateIsSelfReportingValidity = Symbol('privateIsSelfReportingValidity');\nconst privateCallOnReportValidity = Symbol('privateCallOnReportValidity');\n/**\n * Mixes in a callback for constraint validation when validity should be\n * styled and reported to the user.\n *\n * This is commonly used in text-field-like controls that display error styles\n * and error messages.\n *\n * @example\n * ```ts\n * const baseClass = mixinOnReportValidity(\n *   mixinConstraintValidation(\n *     mixinFormAssociated(mixinElementInternals(LitElement)),\n *   ),\n * );\n *\n * class MyField extends baseClass {\n *   \\@property({type: Boolean}) error = false;\n *   \\@property() errorMessage = '';\n *\n *   [onReportValidity](invalidEvent: Event | null) {\n *     this.error = !!invalidEvent;\n *     this.errorMessage = this.validationMessage;\n *\n *     // Optionally prevent platform popup from displaying\n *     invalidEvent?.preventDefault();\n *   }\n * }\n * ```\n *\n * @param base The class to mix functionality into.\n * @return The provided class with `OnReportValidity` mixed in.\n */\nexport function mixinOnReportValidity(base) {\n    var _a, _b, _c;\n    class OnReportValidityElement extends base {\n        // Mixins must have a constructor with `...args: any[]`\n        // tslint:disable-next-line:no-any\n        constructor(...args) {\n            super(...args);\n            /**\n             * Used to clean up event listeners when a new form is associated.\n             */\n            this[_a] = new AbortController();\n            /**\n             * Used to determine if an invalid event should report validity. Invalid\n             * events from `checkValidity()` do not trigger reporting.\n             */\n            this[_b] = false;\n            /**\n             * Used to determine if the control is reporting validity from itself, or\n             * if a `<form>` is causing the validity report. Forms have different\n             * control focusing behavior.\n             */\n            this[_c] = false;\n            if (isServer) {\n                return;\n            }\n            this.addEventListener('invalid', (invalidEvent) => {\n                // Listen for invalid events dispatched by a `<form>` when it tries to\n                // submit and the element is invalid. We ignore events dispatched when\n                // calling `checkValidity()` as well as untrusted events, since the\n                // `reportValidity()` and `<form>`-dispatched events are always\n                // trusted.\n                if (this[privateDoNotReportInvalid] || !invalidEvent.isTrusted) {\n                    return;\n                }\n                this.addEventListener('invalid', () => {\n                    // A normal bubbling phase event listener. By adding it here, we\n                    // ensure it's the last event listener that is called during the\n                    // bubbling phase.\n                    this[privateCallOnReportValidity](invalidEvent);\n                }, { once: true });\n            }, {\n                // Listen during the capture phase, which will happen before the\n                // bubbling phase. That way, we can add a final event listener that\n                // will run after other event listeners, and we can check if it was\n                // default prevented. This works because invalid does not bubble.\n                capture: true,\n            });\n        }\n        checkValidity() {\n            this[privateDoNotReportInvalid] = true;\n            const valid = super.checkValidity();\n            this[privateDoNotReportInvalid] = false;\n            return valid;\n        }\n        reportValidity() {\n            this[privateIsSelfReportingValidity] = true;\n            const valid = super.reportValidity();\n            // Constructor's invalid listener will handle reporting invalid events.\n            if (valid) {\n                this[privateCallOnReportValidity](null);\n            }\n            this[privateIsSelfReportingValidity] = false;\n            return valid;\n        }\n        [(_a = privateCleanupFormListeners, _b = privateDoNotReportInvalid, _c = privateIsSelfReportingValidity, privateCallOnReportValidity)](invalidEvent) {\n            // Since invalid events do not bubble to parent listeners, and because\n            // our invalid listeners are added lazily after other listeners, we can\n            // reliably read `defaultPrevented` synchronously without worrying\n            // about waiting for another listener that could cancel it.\n            const wasCanceled = invalidEvent?.defaultPrevented;\n            if (wasCanceled) {\n                return;\n            }\n            this[onReportValidity](invalidEvent);\n            // If an implementation calls invalidEvent.preventDefault() to stop the\n            // platform popup from displaying, focusing is also prevented, so we need\n            // to manually focus.\n            const implementationCanceledFocus = !wasCanceled && invalidEvent?.defaultPrevented;\n            if (!implementationCanceledFocus) {\n                return;\n            }\n            // The control should be focused when:\n            // - `control.reportValidity()` is called (self-reporting).\n            // - a form is reporting validity for its controls and this is the first\n            //   invalid control.\n            if (this[privateIsSelfReportingValidity] ||\n                isFirstInvalidControlInForm(this[internals].form, this)) {\n                this.focus();\n            }\n        }\n        [onReportValidity](invalidEvent) {\n            throw new Error('Implement [onReportValidity]');\n        }\n        formAssociatedCallback(form) {\n            // can't use super.formAssociatedCallback?.() due to closure\n            if (super.formAssociatedCallback) {\n                super.formAssociatedCallback(form);\n            }\n            // Clean up previous form listeners.\n            this[privateCleanupFormListeners].abort();\n            if (!form) {\n                return;\n            }\n            this[privateCleanupFormListeners] = new AbortController();\n            // Add a listener that fires when the form runs constraint validation and\n            // the control is valid, so that it may remove its error styles.\n            //\n            // This happens on `form.reportValidity()` and `form.requestSubmit()`\n            // (both when the submit fails and passes).\n            addFormReportValidListener(this, form, () => {\n                this[privateCallOnReportValidity](null);\n            }, this[privateCleanupFormListeners].signal);\n        }\n    }\n    return OnReportValidityElement;\n}\n/**\n * Add a listener that fires when a form runs constraint validation on a control\n * and it is valid. This is needed to clear previously invalid styles.\n *\n * @param control The control of the form to listen for valid events.\n * @param form The control's form that can run constraint validation.\n * @param onControlValid A listener that is called when the form runs constraint\n *     validation and the control is valid.\n * @param cleanup A cleanup signal to remove the listener.\n */\nfunction addFormReportValidListener(control, form, onControlValid, cleanup) {\n    const validateHooks = getFormValidateHooks(form);\n    // When a form validates its controls, check if an invalid event is dispatched\n    // on the control. If it is not, then inform the control to report its valid\n    // state.\n    let controlFiredInvalid = false;\n    let cleanupInvalidListener;\n    let isNextSubmitFromHook = false;\n    validateHooks.addEventListener('before', () => {\n        isNextSubmitFromHook = true;\n        cleanupInvalidListener = new AbortController();\n        controlFiredInvalid = false;\n        control.addEventListener('invalid', () => {\n            controlFiredInvalid = true;\n        }, {\n            signal: cleanupInvalidListener.signal,\n        });\n    }, { signal: cleanup });\n    validateHooks.addEventListener('after', () => {\n        isNextSubmitFromHook = false;\n        cleanupInvalidListener?.abort();\n        if (controlFiredInvalid) {\n            return;\n        }\n        onControlValid();\n    }, { signal: cleanup });\n    // The above hooks handle imperatively submitting the form, but not\n    // declaratively submitting the form. This happens when:\n    // 1. A non-custom element `<button type=\"submit\">` is clicked.\n    // 2. Enter is pressed on a non-custom element text editable `<input>`.\n    form.addEventListener('submit', () => {\n        // This submit was from `form.requestSubmit()`, which already calls the\n        // listener.\n        if (isNextSubmitFromHook) {\n            return;\n        }\n        onControlValid();\n    }, {\n        signal: cleanup,\n    });\n    // Note: it is a known limitation that we cannot detect if a form tries to\n    // submit declaratively, but fails to do so because an unrelated sibling\n    // control failed its constraint validation.\n    //\n    // Since we cannot detect when that happens, a previously invalid control may\n    // not clear its error styling when it becomes valid again.\n    //\n    // To work around this, call `form.reportValidity()` when submitting a form\n    // declaratively. This can be down on the `<button type=\"submit\">`'s click or\n    // the text editable `<input>`'s 'Enter' keydown.\n}\nconst FORM_VALIDATE_HOOKS = new WeakMap();\n/**\n * Get a hooks `EventTarget` that dispatches 'before' and 'after' events that\n * fire before a form runs constraint validation and immediately after it\n * finishes running constraint validation on its controls.\n *\n * This happens during `form.reportValidity()` and `form.requestSubmit()`.\n *\n * @param form The form to get or set up hooks for.\n * @return A hooks `EventTarget` to add listeners to.\n */\nfunction getFormValidateHooks(form) {\n    if (!FORM_VALIDATE_HOOKS.has(form)) {\n        // Patch form methods to add event listener hooks. These are needed to react\n        // to form behaviors that do not dispatch events, such as a form asking its\n        // controls to report their validity.\n        //\n        // We should only patch the methods once, since multiple controls and other\n        // forces may want to patch this method. We cannot reliably clean it up if\n        // there are multiple patched and re-patched methods referring holding\n        // references to each other.\n        //\n        // Instead, we never clean up the patch but add and clean up event listeners\n        // added to the hooks after the patch.\n        const hooks = new EventTarget();\n        FORM_VALIDATE_HOOKS.set(form, hooks);\n        // Add hooks to support notifying before and after a form has run constraint\n        // validation on its controls.\n        // Note: `form.submit()` does not run constraint validation per spec.\n        for (const methodName of ['reportValidity', 'requestSubmit']) {\n            const superMethod = form[methodName];\n            form[methodName] = function () {\n                hooks.dispatchEvent(new Event('before'));\n                const result = Reflect.apply(superMethod, this, arguments);\n                hooks.dispatchEvent(new Event('after'));\n                return result;\n            };\n        }\n    }\n    return FORM_VALIDATE_HOOKS.get(form);\n}\n/**\n * Checks if a control is the first invalid control in a form.\n *\n * @param form The control's form. When `null`, the control doesn't have a form\n *     and the method returns true.\n * @param control The control to check.\n * @return True if there is no form or if the control is the form's first\n *     invalid control.\n */\nfunction isFirstInvalidControlInForm(form, control) {\n    if (!form) {\n        return true;\n    }\n    let firstInvalidControl;\n    for (const element of form.elements) {\n        if (element.matches(':invalid')) {\n            firstInvalidControl = element;\n            break;\n        }\n    }\n    return firstInvalidControl === control;\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { html, render } from 'lit';\nimport { Validator } from './validator.js';\n/**\n * A validator that provides constraint validation that emulates `<select>`\n * validation.\n */\nexport class SelectValidator extends Validator {\n    computeValidity(state) {\n        if (!this.selectControl) {\n            // Lazily create the platform select\n            this.selectControl = document.createElement('select');\n        }\n        render(html `<option value=${state.value}></option>`, this.selectControl);\n        this.selectControl.value = state.value;\n        this.selectControl.required = state.required;\n        return {\n            validity: this.selectControl.validity,\n            validationMessage: this.selectControl.validationMessage,\n        };\n    }\n    equals(prev, next) {\n        return prev.value === next.value && prev.required === next.required;\n    }\n    copy({ value, required }) {\n        return { value, required };\n    }\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * Given a list of select options, this function will return an array of\n * SelectOptionRecords that are selected.\n *\n * @return An array of SelectOptionRecords describing the options that are\n * selected.\n */\nexport function getSelectedItems(items) {\n    const selectedItemRecords = [];\n    for (let i = 0; i < items.length; i++) {\n        const item = items[i];\n        if (item.selected) {\n            selectedItemRecords.push([item, i]);\n        }\n    }\n    return selectedItemRecords;\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nvar _a;\nimport { __decorate } from \"tslib\";\nimport '../../menu/menu.js';\nimport { html, isServer, LitElement, nothing } from 'lit';\nimport { property, query, queryAssignedElements, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { html as staticHtml } from 'lit/static-html.js';\nimport { mixinDelegatesAria } from '../../internal/aria/delegate.js';\nimport { redispatchEvent } from '../../internal/events/redispatch-event.js';\nimport { createValidator, getValidityAnchor, mixinConstraintValidation, } from '../../labs/behaviors/constraint-validation.js';\nimport { mixinElementInternals } from '../../labs/behaviors/element-internals.js';\nimport { getFormValue, mixinFormAssociated, } from '../../labs/behaviors/form-associated.js';\nimport { mixinOnReportValidity, onReportValidity, } from '../../labs/behaviors/on-report-validity.js';\nimport { SelectValidator } from '../../labs/behaviors/validators/select-validator.js';\nimport { getActiveItem } from '../../list/internal/list-navigation-helpers.js';\nimport { FocusState, isElementInSubtree, isSelectableKey, } from '../../menu/internal/controllers/shared.js';\nimport { TYPEAHEAD_RECORD } from '../../menu/internal/controllers/typeaheadController.js';\nimport { DEFAULT_TYPEAHEAD_BUFFER_TIME } from '../../menu/internal/menu.js';\nimport { getSelectedItems } from './shared.js';\nconst VALUE = Symbol('value');\n// Separate variable needed for closure.\nconst selectBaseClass = mixinDelegatesAria(mixinOnReportValidity(mixinConstraintValidation(mixinFormAssociated(mixinElementInternals(LitElement)))));\n/**\n * @fires change {Event} The native `change` event on\n * [`<input>`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event)\n * --bubbles\n * @fires input {InputEvent} The native `input` event on\n * [`<input>`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event)\n * --bubbles --composed\n * @fires opening {Event} Fired when the select's menu is about to open.\n * @fires opened {Event} Fired when the select's menu has finished animations\n * and opened.\n * @fires closing {Event} Fired when the select's menu is about to close.\n * @fires closed {Event} Fired when the select's menu has finished animations\n * and closed.\n */\nexport class Select extends selectBaseClass {\n    /**\n     * The value of the currently selected option.\n     *\n     * Note: For SSR, set `[selected]` on the requested option and `displayText`\n     * rather than setting `value` setting `value` will incur a DOM query.\n     */\n    get value() {\n        return this[VALUE];\n    }\n    set value(value) {\n        if (isServer)\n            return;\n        this.lastUserSetValue = value;\n        this.select(value);\n    }\n    get options() {\n        // NOTE: this does a DOM query.\n        return (this.menu?.items ?? []);\n    }\n    /**\n     * The index of the currently selected option.\n     *\n     * Note: For SSR, set `[selected]` on the requested option and `displayText`\n     * rather than setting `selectedIndex` setting `selectedIndex` will incur a\n     * DOM query.\n     */\n    get selectedIndex() {\n        // tslint:disable-next-line:enforce-name-casing\n        const [_option, index] = (this.getSelectedOptions() ?? [])[0] ?? [];\n        return index ?? -1;\n    }\n    set selectedIndex(index) {\n        this.lastUserSetSelectedIndex = index;\n        this.selectIndex(index);\n    }\n    /**\n     * Returns an array of selected options.\n     *\n     * NOTE: md-select only supports single selection.\n     */\n    get selectedOptions() {\n        return (this.getSelectedOptions() ?? []).map(([option]) => option);\n    }\n    get hasError() {\n        return this.error || this.nativeError;\n    }\n    constructor() {\n        super();\n        /**\n         * Opens the menu synchronously with no animation.\n         */\n        this.quick = false;\n        /**\n         * Whether or not the select is required.\n         */\n        this.required = false;\n        /**\n         * The error message that replaces supporting text when `error` is true. If\n         * `errorText` is an empty string, then the supporting text will continue to\n         * show.\n         *\n         * This error message overrides the error message displayed by\n         * `reportValidity()`.\n         */\n        this.errorText = '';\n        /**\n         * The floating label for the field.\n         */\n        this.label = '';\n        /**\n         * Disables the asterisk on the floating label, when the select is\n         * required.\n         */\n        this.noAsterisk = false;\n        /**\n         * Conveys additional information below the select, such as how it should\n         * be used.\n         */\n        this.supportingText = '';\n        /**\n         * Gets or sets whether or not the select is in a visually invalid state.\n         *\n         * This error state overrides the error state controlled by\n         * `reportValidity()`.\n         */\n        this.error = false;\n        /**\n         * Whether or not the underlying md-menu should be position: fixed to display\n         * in a top-level manner, or position: absolute.\n         *\n         * position:fixed is useful for cases where select is inside of another\n         * element with stacking context and hidden overflows such as `md-dialog`.\n         */\n        this.menuPositioning = 'popover';\n        /**\n         * Clamps the menu-width to the width of the select.\n         */\n        this.clampMenuWidth = false;\n        /**\n         * The max time between the keystrokes of the typeahead select / menu behavior\n         * before it clears the typeahead buffer.\n         */\n        this.typeaheadDelay = DEFAULT_TYPEAHEAD_BUFFER_TIME;\n        /**\n         * Whether or not the text field has a leading icon. Used for SSR.\n         */\n        this.hasLeadingIcon = false;\n        /**\n         * Text to display in the field. Only set for SSR.\n         */\n        this.displayText = '';\n        /**\n         * Whether the menu should be aligned to the start or the end of the select's\n         * textbox.\n         */\n        this.menuAlign = 'start';\n        this[_a] = '';\n        /**\n         * Used for initializing select when the user sets the `value` directly.\n         */\n        this.lastUserSetValue = null;\n        /**\n         * Used for initializing select when the user sets the `selectedIndex`\n         * directly.\n         */\n        this.lastUserSetSelectedIndex = null;\n        /**\n         * Used for `input` and `change` event change detection.\n         */\n        this.lastSelectedOption = null;\n        // tslint:disable-next-line:enforce-name-casing\n        this.lastSelectedOptionRecords = [];\n        /**\n         * Whether or not a native error has been reported via `reportValidity()`.\n         */\n        this.nativeError = false;\n        /**\n         * The validation message displayed from a native error via\n         * `reportValidity()`.\n         */\n        this.nativeErrorText = '';\n        this.focused = false;\n        this.open = false;\n        this.defaultFocus = FocusState.NONE;\n        // Have to keep track of previous open because it's state and private and thus\n        // cannot be tracked in PropertyValues<this> map.\n        this.prevOpen = this.open;\n        this.selectWidth = 0;\n        if (isServer) {\n            return;\n        }\n        this.addEventListener('focus', this.handleFocus.bind(this));\n        this.addEventListener('blur', this.handleBlur.bind(this));\n    }\n    /**\n     * Selects an option given the value of the option, and updates MdSelect's\n     * value.\n     */\n    select(value) {\n        const optionToSelect = this.options.find((option) => option.value === value);\n        if (optionToSelect) {\n            this.selectItem(optionToSelect);\n        }\n    }\n    /**\n     * Selects an option given the index of the option, and updates MdSelect's\n     * value.\n     */\n    selectIndex(index) {\n        const optionToSelect = this.options[index];\n        if (optionToSelect) {\n            this.selectItem(optionToSelect);\n        }\n    }\n    /**\n     * Reset the select to its default value.\n     */\n    reset() {\n        for (const option of this.options) {\n            option.selected = option.hasAttribute('selected');\n        }\n        this.updateValueAndDisplayText();\n        this.nativeError = false;\n        this.nativeErrorText = '';\n    }\n    [(_a = VALUE, onReportValidity)](invalidEvent) {\n        // Prevent default pop-up behavior.\n        invalidEvent?.preventDefault();\n        const prevMessage = this.getErrorText();\n        this.nativeError = !!invalidEvent;\n        this.nativeErrorText = this.validationMessage;\n        if (prevMessage === this.getErrorText()) {\n            this.field?.reannounceError();\n        }\n    }\n    update(changed) {\n        // In SSR the options will be ready to query, so try to figure out what\n        // the value and display text should be.\n        if (!this.hasUpdated) {\n            this.initUserSelection();\n        }\n        // We have just opened the menu.\n        // We are only able to check for the select's rect in `update()` instead of\n        // having to wait for `updated()` because the menu can never be open on\n        // first render since it is not settable and Lit SSR does not support click\n        // events which would open the menu.\n        if (this.prevOpen !== this.open && this.open) {\n            const selectRect = this.getBoundingClientRect();\n            this.selectWidth = selectRect.width;\n        }\n        this.prevOpen = this.open;\n        super.update(changed);\n    }\n    render() {\n        return html `\n      <span\n        class=\"select ${classMap(this.getRenderClasses())}\"\n        @focusout=${this.handleFocusout}>\n        ${this.renderField()} ${this.renderMenu()}\n      </span>\n    `;\n    }\n    async firstUpdated(changed) {\n        await this.menu?.updateComplete;\n        // If this has been handled on update already due to SSR, try again.\n        if (!this.lastSelectedOptionRecords.length) {\n            this.initUserSelection();\n        }\n        // Case for when the DOM is streaming, there are no children, and a child\n        // has [selected] set on it, we need to wait for DOM to render something.\n        if (!this.lastSelectedOptionRecords.length &&\n            !isServer &&\n            !this.options.length) {\n            setTimeout(() => {\n                this.updateValueAndDisplayText();\n            });\n        }\n        super.firstUpdated(changed);\n    }\n    getRenderClasses() {\n        return {\n            'disabled': this.disabled,\n            'error': this.error,\n            'open': this.open,\n        };\n    }\n    renderField() {\n        return staticHtml `\n      <${this.fieldTag}\n          aria-haspopup=\"listbox\"\n          role=\"combobox\"\n          part=\"field\"\n          id=\"field\"\n          tabindex=${this.disabled ? '-1' : '0'}\n          aria-label=${this.ariaLabel || nothing}\n          aria-describedby=\"description\"\n          aria-expanded=${this.open ? 'true' : 'false'}\n          aria-controls=\"listbox\"\n          class=\"field\"\n          label=${this.label}\n          ?no-asterisk=${this.noAsterisk}\n          .focused=${this.focused || this.open}\n          .populated=${!!this.displayText}\n          .disabled=${this.disabled}\n          .required=${this.required}\n          .error=${this.hasError}\n          ?has-start=${this.hasLeadingIcon}\n          has-end\n          supporting-text=${this.supportingText}\n          error-text=${this.getErrorText()}\n          @keydown=${this.handleKeydown}\n          @click=${this.handleClick}>\n         ${this.renderFieldContent()}\n         <div id=\"description\" slot=\"aria-describedby\"></div>\n      </${this.fieldTag}>`;\n    }\n    renderFieldContent() {\n        return [\n            this.renderLeadingIcon(),\n            this.renderLabel(),\n            this.renderTrailingIcon(),\n        ];\n    }\n    renderLeadingIcon() {\n        return html `\n      <span class=\"icon leading\" slot=\"start\">\n        <slot name=\"leading-icon\" @slotchange=${this.handleIconChange}></slot>\n      </span>\n    `;\n    }\n    renderTrailingIcon() {\n        return html `\n      <span class=\"icon trailing\" slot=\"end\">\n        <slot name=\"trailing-icon\" @slotchange=${this.handleIconChange}>\n          <svg height=\"5\" viewBox=\"7 10 10 5\" focusable=\"false\">\n            <polygon\n              class=\"down\"\n              stroke=\"none\"\n              fill-rule=\"evenodd\"\n              points=\"7 10 12 15 17 10\"></polygon>\n            <polygon\n              class=\"up\"\n              stroke=\"none\"\n              fill-rule=\"evenodd\"\n              points=\"7 15 12 10 17 15\"></polygon>\n          </svg>\n        </slot>\n      </span>\n    `;\n    }\n    renderLabel() {\n        // need to render &nbsp; so that line-height can apply and give it a\n        // non-zero height\n        return html `<div id=\"label\">${this.displayText || html `&nbsp;`}</div>`;\n    }\n    renderMenu() {\n        const ariaLabel = this.label || this.ariaLabel;\n        return html `<div class=\"menu-wrapper\">\n      <md-menu\n        id=\"listbox\"\n        .defaultFocus=${this.defaultFocus}\n        role=\"listbox\"\n        tabindex=\"-1\"\n        aria-label=${ariaLabel || nothing}\n        stay-open-on-focusout\n        part=\"menu\"\n        exportparts=\"focus-ring: menu-focus-ring\"\n        anchor=\"field\"\n        style=${styleMap({\n            '--__menu-min-width': `${this.selectWidth}px`,\n            '--__menu-max-width': this.clampMenuWidth\n                ? `${this.selectWidth}px`\n                : undefined,\n        })}\n        no-navigation-wrap\n        .open=${this.open}\n        .quick=${this.quick}\n        .positioning=${this.menuPositioning}\n        .typeaheadDelay=${this.typeaheadDelay}\n        .anchorCorner=${this.menuAlign === 'start' ? 'end-start' : 'end-end'}\n        .menuCorner=${this.menuAlign === 'start' ? 'start-start' : 'start-end'}\n        @opening=${this.handleOpening}\n        @opened=${this.redispatchEvent}\n        @closing=${this.redispatchEvent}\n        @closed=${this.handleClosed}\n        @close-menu=${this.handleCloseMenu}\n        @request-selection=${this.handleRequestSelection}\n        @request-deselection=${this.handleRequestDeselection}>\n        ${this.renderMenuContent()}\n      </md-menu>\n    </div>`;\n    }\n    renderMenuContent() {\n        return html `<slot></slot>`;\n    }\n    /**\n     * Handles opening the select on keydown and typahead selection when the menu\n     * is closed.\n     */\n    handleKeydown(event) {\n        if (this.open || this.disabled || !this.menu) {\n            return;\n        }\n        const typeaheadController = this.menu.typeaheadController;\n        const isOpenKey = event.code === 'Space' ||\n            event.code === 'ArrowDown' ||\n            event.code === 'ArrowUp' ||\n            event.code === 'End' ||\n            event.code === 'Home' ||\n            event.code === 'Enter';\n        // Do not open if currently typing ahead because the user may be typing the\n        // spacebar to match a word with a space\n        if (!typeaheadController.isTypingAhead && isOpenKey) {\n            event.preventDefault();\n            this.open = true;\n            // https://www.w3.org/WAI/ARIA/apg/patterns/combobox/examples/combobox-select-only/#kbd_label\n            switch (event.code) {\n                case 'Space':\n                case 'ArrowDown':\n                case 'Enter':\n                    // We will handle focusing last selected item in this.handleOpening()\n                    this.defaultFocus = FocusState.NONE;\n                    break;\n                case 'End':\n                    this.defaultFocus = FocusState.LAST_ITEM;\n                    break;\n                case 'ArrowUp':\n                case 'Home':\n                    this.defaultFocus = FocusState.FIRST_ITEM;\n                    break;\n                default:\n                    break;\n            }\n            return;\n        }\n        const isPrintableKey = event.key.length === 1;\n        // Handles typing ahead when the menu is closed by delegating the event to\n        // the underlying menu's typeaheadController\n        if (isPrintableKey) {\n            typeaheadController.onKeydown(event);\n            event.preventDefault();\n            const { lastActiveRecord } = typeaheadController;\n            if (!lastActiveRecord) {\n                return;\n            }\n            this.labelEl?.setAttribute?.('aria-live', 'polite');\n            const hasChanged = this.selectItem(lastActiveRecord[TYPEAHEAD_RECORD.ITEM]);\n            if (hasChanged) {\n                this.dispatchInteractionEvents();\n            }\n        }\n    }\n    handleClick() {\n        this.open = !this.open;\n    }\n    handleFocus() {\n        this.focused = true;\n    }\n    handleBlur() {\n        this.focused = false;\n    }\n    /**\n     * Handles closing the menu when the focus leaves the select's subtree.\n     */\n    handleFocusout(event) {\n        // Don't close the menu if we are switching focus between menu,\n        // select-option, and field\n        if (event.relatedTarget && isElementInSubtree(event.relatedTarget, this)) {\n            return;\n        }\n        this.open = false;\n    }\n    /**\n     * Gets a list of all selected select options as a list item record array.\n     *\n     * @return An array of selected list option records.\n     */\n    getSelectedOptions() {\n        if (!this.menu) {\n            this.lastSelectedOptionRecords = [];\n            return null;\n        }\n        const items = this.menu.items;\n        this.lastSelectedOptionRecords = getSelectedItems(items);\n        return this.lastSelectedOptionRecords;\n    }\n    async getUpdateComplete() {\n        await this.menu?.updateComplete;\n        return super.getUpdateComplete();\n    }\n    /**\n     * Gets the selected options from the DOM, and updates the value and display\n     * text to the first selected option's value and headline respectively.\n     *\n     * @return Whether or not the selected option has changed since last update.\n     */\n    updateValueAndDisplayText() {\n        const selectedOptions = this.getSelectedOptions() ?? [];\n        // Used to determine whether or not we need to fire an input / change event\n        // which fire whenever the option element changes (value or selectedIndex)\n        // on user interaction.\n        let hasSelectedOptionChanged = false;\n        if (selectedOptions.length) {\n            const [firstSelectedOption] = selectedOptions[0];\n            hasSelectedOptionChanged =\n                this.lastSelectedOption !== firstSelectedOption;\n            this.lastSelectedOption = firstSelectedOption;\n            this[VALUE] = firstSelectedOption.value;\n            this.displayText = firstSelectedOption.displayText;\n        }\n        else {\n            hasSelectedOptionChanged = this.lastSelectedOption !== null;\n            this.lastSelectedOption = null;\n            this[VALUE] = '';\n            this.displayText = '';\n        }\n        return hasSelectedOptionChanged;\n    }\n    /**\n     * Focuses and activates the last selected item upon opening, and resets other\n     * active items.\n     */\n    async handleOpening(e) {\n        this.labelEl?.removeAttribute?.('aria-live');\n        this.redispatchEvent(e);\n        // FocusState.NONE means we want to handle focus ourselves and focus the\n        // last selected item.\n        if (this.defaultFocus !== FocusState.NONE) {\n            return;\n        }\n        const items = this.menu.items;\n        const activeItem = getActiveItem(items)?.item;\n        let [selectedItem] = this.lastSelectedOptionRecords[0] ?? [null];\n        // This is true if the user keys through the list but clicks out of the menu\n        // thus no close-menu event is fired by an item and we can't clean up in\n        // handleCloseMenu.\n        if (activeItem && activeItem !== selectedItem) {\n            activeItem.tabIndex = -1;\n        }\n        // in the case that nothing is selected, focus the first item\n        selectedItem = selectedItem ?? items[0];\n        if (selectedItem) {\n            selectedItem.tabIndex = 0;\n            selectedItem.focus();\n        }\n    }\n    redispatchEvent(e) {\n        redispatchEvent(this, e);\n    }\n    handleClosed(e) {\n        this.open = false;\n        this.redispatchEvent(e);\n    }\n    /**\n     * Determines the reason for closing, and updates the UI accordingly.\n     */\n    handleCloseMenu(event) {\n        const reason = event.detail.reason;\n        const item = event.detail.itemPath[0];\n        this.open = false;\n        let hasChanged = false;\n        if (reason.kind === 'click-selection') {\n            hasChanged = this.selectItem(item);\n        }\n        else if (reason.kind === 'keydown' && isSelectableKey(reason.key)) {\n            hasChanged = this.selectItem(item);\n        }\n        else {\n            // This can happen on ESC being pressed\n            item.tabIndex = -1;\n            item.blur();\n        }\n        // Dispatch interaction events since selection has been made via keyboard\n        // or mouse.\n        if (hasChanged) {\n            this.dispatchInteractionEvents();\n        }\n    }\n    /**\n     * Selects a given option, deselects other options, and updates the UI.\n     *\n     * @return Whether the last selected option has changed.\n     */\n    selectItem(item) {\n        const selectedOptions = this.getSelectedOptions() ?? [];\n        selectedOptions.forEach(([option]) => {\n            if (item !== option) {\n                option.selected = false;\n            }\n        });\n        item.selected = true;\n        return this.updateValueAndDisplayText();\n    }\n    /**\n     * Handles updating selection when an option element requests selection via\n     * property / attribute change.\n     */\n    handleRequestSelection(event) {\n        const requestingOptionEl = event.target;\n        // No-op if this item is already selected.\n        if (this.lastSelectedOptionRecords.some(([option]) => option === requestingOptionEl)) {\n            return;\n        }\n        this.selectItem(requestingOptionEl);\n    }\n    /**\n     * Handles updating selection when an option element requests deselection via\n     * property / attribute change.\n     */\n    handleRequestDeselection(event) {\n        const requestingOptionEl = event.target;\n        // No-op if this item is not even in the list of tracked selected items.\n        if (!this.lastSelectedOptionRecords.some(([option]) => option === requestingOptionEl)) {\n            return;\n        }\n        this.updateValueAndDisplayText();\n    }\n    /**\n     * Attempts to initialize the selected option from user-settable values like\n     * SSR, setting `value`, or `selectedIndex` at startup.\n     */\n    initUserSelection() {\n        // User has set `.value` directly, but internals have not yet booted up.\n        if (this.lastUserSetValue && !this.lastSelectedOptionRecords.length) {\n            this.select(this.lastUserSetValue);\n            // User has set `.selectedIndex` directly, but internals have not yet\n            // booted up.\n        }\n        else if (this.lastUserSetSelectedIndex !== null &&\n            !this.lastSelectedOptionRecords.length) {\n            this.selectIndex(this.lastUserSetSelectedIndex);\n            // Regular boot up!\n        }\n        else {\n            this.updateValueAndDisplayText();\n        }\n    }\n    handleIconChange() {\n        this.hasLeadingIcon = this.leadingIcons.length > 0;\n    }\n    /**\n     * Dispatches the `input` and `change` events.\n     */\n    dispatchInteractionEvents() {\n        this.dispatchEvent(new Event('input', { bubbles: true, composed: true }));\n        this.dispatchEvent(new Event('change', { bubbles: true }));\n    }\n    getErrorText() {\n        return this.error ? this.errorText : this.nativeErrorText;\n    }\n    [getFormValue]() {\n        return this.value;\n    }\n    formResetCallback() {\n        this.reset();\n    }\n    formStateRestoreCallback(state) {\n        this.value = state;\n    }\n    click() {\n        this.field?.click();\n    }\n    [createValidator]() {\n        return new SelectValidator(() => this);\n    }\n    [getValidityAnchor]() {\n        return this.field;\n    }\n}\n/** @nocollapse */\nSelect.shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n};\n__decorate([\n    property({ type: Boolean })\n], Select.prototype, \"quick\", void 0);\n__decorate([\n    property({ type: Boolean })\n], Select.prototype, \"required\", void 0);\n__decorate([\n    property({ type: String, attribute: 'error-text' })\n], Select.prototype, \"errorText\", void 0);\n__decorate([\n    property()\n], Select.prototype, \"label\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'no-asterisk' })\n], Select.prototype, \"noAsterisk\", void 0);\n__decorate([\n    property({ type: String, attribute: 'supporting-text' })\n], Select.prototype, \"supportingText\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], Select.prototype, \"error\", void 0);\n__decorate([\n    property({ attribute: 'menu-positioning' })\n], Select.prototype, \"menuPositioning\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'clamp-menu-width' })\n], Select.prototype, \"clampMenuWidth\", void 0);\n__decorate([\n    property({ type: Number, attribute: 'typeahead-delay' })\n], Select.prototype, \"typeaheadDelay\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'has-leading-icon' })\n], Select.prototype, \"hasLeadingIcon\", void 0);\n__decorate([\n    property({ attribute: 'display-text' })\n], Select.prototype, \"displayText\", void 0);\n__decorate([\n    property({ attribute: 'menu-align' })\n], Select.prototype, \"menuAlign\", void 0);\n__decorate([\n    property()\n], Select.prototype, \"value\", null);\n__decorate([\n    property({ type: Number, attribute: 'selected-index' })\n], Select.prototype, \"selectedIndex\", null);\n__decorate([\n    state()\n], Select.prototype, \"nativeError\", void 0);\n__decorate([\n    state()\n], Select.prototype, \"nativeErrorText\", void 0);\n__decorate([\n    state()\n], Select.prototype, \"focused\", void 0);\n__decorate([\n    state()\n], Select.prototype, \"open\", void 0);\n__decorate([\n    state()\n], Select.prototype, \"defaultFocus\", void 0);\n__decorate([\n    query('.field')\n], Select.prototype, \"field\", void 0);\n__decorate([\n    query('md-menu')\n], Select.prototype, \"menu\", void 0);\n__decorate([\n    query('#label')\n], Select.prototype, \"labelEl\", void 0);\n__decorate([\n    queryAssignedElements({ slot: 'leading-icon', flatten: true })\n], Select.prototype, \"leadingIcons\", void 0);\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport '../../field/filled-field.js';\nimport { literal } from 'lit/static-html.js';\nimport { Select } from './select.js';\n// tslint:disable-next-line:enforce-comments-on-exported-symbols\nexport class FilledSelect extends Select {\n    constructor() {\n        super(...arguments);\n        this.fieldTag = literal `md-filled-field`;\n    }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./select/internal/filled-select-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{--_text-field-active-indicator-color: var(--md-filled-select-text-field-active-indicator-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-active-indicator-height: var(--md-filled-select-text-field-active-indicator-height, 1px);--_text-field-container-color: var(--md-filled-select-text-field-container-color, var(--md-sys-color-surface-container-highest, #e6e0e9));--_text-field-disabled-active-indicator-color: var(--md-filled-select-text-field-disabled-active-indicator-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-active-indicator-height: var(--md-filled-select-text-field-disabled-active-indicator-height, 1px);--_text-field-disabled-active-indicator-opacity: var(--md-filled-select-text-field-disabled-active-indicator-opacity, 0.38);--_text-field-disabled-container-color: var(--md-filled-select-text-field-disabled-container-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-container-opacity: var(--md-filled-select-text-field-disabled-container-opacity, 0.04);--_text-field-disabled-input-text-color: var(--md-filled-select-text-field-disabled-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-input-text-opacity: var(--md-filled-select-text-field-disabled-input-text-opacity, 0.38);--_text-field-disabled-label-text-color: var(--md-filled-select-text-field-disabled-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-label-text-opacity: var(--md-filled-select-text-field-disabled-label-text-opacity, 0.38);--_text-field-disabled-leading-icon-color: var(--md-filled-select-text-field-disabled-leading-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-leading-icon-opacity: var(--md-filled-select-text-field-disabled-leading-icon-opacity, 0.38);--_text-field-disabled-supporting-text-color: var(--md-filled-select-text-field-disabled-supporting-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-supporting-text-opacity: var(--md-filled-select-text-field-disabled-supporting-text-opacity, 0.38);--_text-field-disabled-trailing-icon-color: var(--md-filled-select-text-field-disabled-trailing-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-trailing-icon-opacity: var(--md-filled-select-text-field-disabled-trailing-icon-opacity, 0.38);--_text-field-error-active-indicator-color: var(--md-filled-select-text-field-error-active-indicator-color, var(--md-sys-color-error, #b3261e));--_text-field-error-focus-active-indicator-color: var(--md-filled-select-text-field-error-focus-active-indicator-color, var(--md-sys-color-error, #b3261e));--_text-field-error-focus-input-text-color: var(--md-filled-select-text-field-error-focus-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-error-focus-label-text-color: var(--md-filled-select-text-field-error-focus-label-text-color, var(--md-sys-color-error, #b3261e));--_text-field-error-focus-leading-icon-color: var(--md-filled-select-text-field-error-focus-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-error-focus-supporting-text-color: var(--md-filled-select-text-field-error-focus-supporting-text-color, var(--md-sys-color-error, #b3261e));--_text-field-error-focus-trailing-icon-color: var(--md-filled-select-text-field-error-focus-trailing-icon-color, var(--md-sys-color-error, #b3261e));--_text-field-error-hover-active-indicator-color: var(--md-filled-select-text-field-error-hover-active-indicator-color, var(--md-sys-color-on-error-container, #410e0b));--_text-field-error-hover-input-text-color: var(--md-filled-select-text-field-error-hover-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-error-hover-label-text-color: var(--md-filled-select-text-field-error-hover-label-text-color, var(--md-sys-color-on-error-container, #410e0b));--_text-field-error-hover-leading-icon-color: var(--md-filled-select-text-field-error-hover-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-error-hover-state-layer-color: var(--md-filled-select-text-field-error-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-error-hover-state-layer-opacity: var(--md-filled-select-text-field-error-hover-state-layer-opacity, 0.08);--_text-field-error-hover-supporting-text-color: var(--md-filled-select-text-field-error-hover-supporting-text-color, var(--md-sys-color-error, #b3261e));--_text-field-error-hover-trailing-icon-color: var(--md-filled-select-text-field-error-hover-trailing-icon-color, var(--md-sys-color-on-error-container, #410e0b));--_text-field-error-input-text-color: var(--md-filled-select-text-field-error-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-error-label-text-color: var(--md-filled-select-text-field-error-label-text-color, var(--md-sys-color-error, #b3261e));--_text-field-error-leading-icon-color: var(--md-filled-select-text-field-error-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-error-supporting-text-color: var(--md-filled-select-text-field-error-supporting-text-color, var(--md-sys-color-error, #b3261e));--_text-field-error-trailing-icon-color: var(--md-filled-select-text-field-error-trailing-icon-color, var(--md-sys-color-error, #b3261e));--_text-field-focus-active-indicator-color: var(--md-filled-select-text-field-focus-active-indicator-color, var(--md-sys-color-primary, #6750a4));--_text-field-focus-active-indicator-height: var(--md-filled-select-text-field-focus-active-indicator-height, 3px);--_text-field-focus-input-text-color: var(--md-filled-select-text-field-focus-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-focus-label-text-color: var(--md-filled-select-text-field-focus-label-text-color, var(--md-sys-color-primary, #6750a4));--_text-field-focus-leading-icon-color: var(--md-filled-select-text-field-focus-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-focus-supporting-text-color: var(--md-filled-select-text-field-focus-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-focus-trailing-icon-color: var(--md-filled-select-text-field-focus-trailing-icon-color, var(--md-sys-color-primary, #6750a4));--_text-field-hover-active-indicator-color: var(--md-filled-select-text-field-hover-active-indicator-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-hover-active-indicator-height: var(--md-filled-select-text-field-hover-active-indicator-height, 1px);--_text-field-hover-input-text-color: var(--md-filled-select-text-field-hover-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-hover-label-text-color: var(--md-filled-select-text-field-hover-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-hover-leading-icon-color: var(--md-filled-select-text-field-hover-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-hover-state-layer-color: var(--md-filled-select-text-field-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-hover-state-layer-opacity: var(--md-filled-select-text-field-hover-state-layer-opacity, 0.08);--_text-field-hover-supporting-text-color: var(--md-filled-select-text-field-hover-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-hover-trailing-icon-color: var(--md-filled-select-text-field-hover-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-input-text-color: var(--md-filled-select-text-field-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-input-text-font: var(--md-filled-select-text-field-input-text-font, var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto)));--_text-field-input-text-line-height: var(--md-filled-select-text-field-input-text-line-height, var(--md-sys-typescale-body-large-line-height, 1.5rem));--_text-field-input-text-size: var(--md-filled-select-text-field-input-text-size, var(--md-sys-typescale-body-large-size, 1rem));--_text-field-input-text-weight: var(--md-filled-select-text-field-input-text-weight, var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400)));--_text-field-label-text-color: var(--md-filled-select-text-field-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-label-text-font: var(--md-filled-select-text-field-label-text-font, var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto)));--_text-field-label-text-line-height: var(--md-filled-select-text-field-label-text-line-height, var(--md-sys-typescale-body-large-line-height, 1.5rem));--_text-field-label-text-populated-line-height: var(--md-filled-select-text-field-label-text-populated-line-height, var(--md-sys-typescale-body-small-line-height, 1rem));--_text-field-label-text-populated-size: var(--md-filled-select-text-field-label-text-populated-size, var(--md-sys-typescale-body-small-size, 0.75rem));--_text-field-label-text-size: var(--md-filled-select-text-field-label-text-size, var(--md-sys-typescale-body-large-size, 1rem));--_text-field-label-text-weight: var(--md-filled-select-text-field-label-text-weight, var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400)));--_text-field-leading-icon-color: var(--md-filled-select-text-field-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-leading-icon-size: var(--md-filled-select-text-field-leading-icon-size, 24px);--_text-field-supporting-text-color: var(--md-filled-select-text-field-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-supporting-text-font: var(--md-filled-select-text-field-supporting-text-font, var(--md-sys-typescale-body-small-font, var(--md-ref-typeface-plain, Roboto)));--_text-field-supporting-text-line-height: var(--md-filled-select-text-field-supporting-text-line-height, var(--md-sys-typescale-body-small-line-height, 1rem));--_text-field-supporting-text-size: var(--md-filled-select-text-field-supporting-text-size, var(--md-sys-typescale-body-small-size, 0.75rem));--_text-field-supporting-text-weight: var(--md-filled-select-text-field-supporting-text-weight, var(--md-sys-typescale-body-small-weight, var(--md-ref-typeface-weight-regular, 400)));--_text-field-trailing-icon-color: var(--md-filled-select-text-field-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-trailing-icon-size: var(--md-filled-select-text-field-trailing-icon-size, 24px);--_text-field-container-shape-start-start: var(--md-filled-select-text-field-container-shape-start-start, var(--md-filled-select-text-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)));--_text-field-container-shape-start-end: var(--md-filled-select-text-field-container-shape-start-end, var(--md-filled-select-text-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)));--_text-field-container-shape-end-end: var(--md-filled-select-text-field-container-shape-end-end, var(--md-filled-select-text-field-container-shape, var(--md-sys-shape-corner-none, 0px)));--_text-field-container-shape-end-start: var(--md-filled-select-text-field-container-shape-end-start, var(--md-filled-select-text-field-container-shape, var(--md-sys-shape-corner-none, 0px)));--md-filled-field-active-indicator-color: var(--_text-field-active-indicator-color);--md-filled-field-active-indicator-height: var(--_text-field-active-indicator-height);--md-filled-field-container-color: var(--_text-field-container-color);--md-filled-field-container-shape-end-end: var(--_text-field-container-shape-end-end);--md-filled-field-container-shape-end-start: var(--_text-field-container-shape-end-start);--md-filled-field-container-shape-start-end: var(--_text-field-container-shape-start-end);--md-filled-field-container-shape-start-start: var(--_text-field-container-shape-start-start);--md-filled-field-content-color: var(--_text-field-input-text-color);--md-filled-field-content-font: var(--_text-field-input-text-font);--md-filled-field-content-line-height: var(--_text-field-input-text-line-height);--md-filled-field-content-size: var(--_text-field-input-text-size);--md-filled-field-content-weight: var(--_text-field-input-text-weight);--md-filled-field-disabled-active-indicator-color: var(--_text-field-disabled-active-indicator-color);--md-filled-field-disabled-active-indicator-height: var(--_text-field-disabled-active-indicator-height);--md-filled-field-disabled-active-indicator-opacity: var(--_text-field-disabled-active-indicator-opacity);--md-filled-field-disabled-container-color: var(--_text-field-disabled-container-color);--md-filled-field-disabled-container-opacity: var(--_text-field-disabled-container-opacity);--md-filled-field-disabled-content-color: var(--_text-field-disabled-input-text-color);--md-filled-field-disabled-content-opacity: var(--_text-field-disabled-input-text-opacity);--md-filled-field-disabled-label-text-color: var(--_text-field-disabled-label-text-color);--md-filled-field-disabled-label-text-opacity: var(--_text-field-disabled-label-text-opacity);--md-filled-field-disabled-leading-content-color: var(--_text-field-disabled-leading-icon-color);--md-filled-field-disabled-leading-content-opacity: var(--_text-field-disabled-leading-icon-opacity);--md-filled-field-disabled-supporting-text-color: var(--_text-field-disabled-supporting-text-color);--md-filled-field-disabled-supporting-text-opacity: var(--_text-field-disabled-supporting-text-opacity);--md-filled-field-disabled-trailing-content-color: var(--_text-field-disabled-trailing-icon-color);--md-filled-field-disabled-trailing-content-opacity: var(--_text-field-disabled-trailing-icon-opacity);--md-filled-field-error-active-indicator-color: var(--_text-field-error-active-indicator-color);--md-filled-field-error-content-color: var(--_text-field-error-input-text-color);--md-filled-field-error-focus-active-indicator-color: var(--_text-field-error-focus-active-indicator-color);--md-filled-field-error-focus-content-color: var(--_text-field-error-focus-input-text-color);--md-filled-field-error-focus-label-text-color: var(--_text-field-error-focus-label-text-color);--md-filled-field-error-focus-leading-content-color: var(--_text-field-error-focus-leading-icon-color);--md-filled-field-error-focus-supporting-text-color: var(--_text-field-error-focus-supporting-text-color);--md-filled-field-error-focus-trailing-content-color: var(--_text-field-error-focus-trailing-icon-color);--md-filled-field-error-hover-active-indicator-color: var(--_text-field-error-hover-active-indicator-color);--md-filled-field-error-hover-content-color: var(--_text-field-error-hover-input-text-color);--md-filled-field-error-hover-label-text-color: var(--_text-field-error-hover-label-text-color);--md-filled-field-error-hover-leading-content-color: var(--_text-field-error-hover-leading-icon-color);--md-filled-field-error-hover-state-layer-color: var(--_text-field-error-hover-state-layer-color);--md-filled-field-error-hover-state-layer-opacity: var(--_text-field-error-hover-state-layer-opacity);--md-filled-field-error-hover-supporting-text-color: var(--_text-field-error-hover-supporting-text-color);--md-filled-field-error-hover-trailing-content-color: var(--_text-field-error-hover-trailing-icon-color);--md-filled-field-error-label-text-color: var(--_text-field-error-label-text-color);--md-filled-field-error-leading-content-color: var(--_text-field-error-leading-icon-color);--md-filled-field-error-supporting-text-color: var(--_text-field-error-supporting-text-color);--md-filled-field-error-trailing-content-color: var(--_text-field-error-trailing-icon-color);--md-filled-field-focus-active-indicator-color: var(--_text-field-focus-active-indicator-color);--md-filled-field-focus-active-indicator-height: var(--_text-field-focus-active-indicator-height);--md-filled-field-focus-content-color: var(--_text-field-focus-input-text-color);--md-filled-field-focus-label-text-color: var(--_text-field-focus-label-text-color);--md-filled-field-focus-leading-content-color: var(--_text-field-focus-leading-icon-color);--md-filled-field-focus-supporting-text-color: var(--_text-field-focus-supporting-text-color);--md-filled-field-focus-trailing-content-color: var(--_text-field-focus-trailing-icon-color);--md-filled-field-hover-active-indicator-color: var(--_text-field-hover-active-indicator-color);--md-filled-field-hover-active-indicator-height: var(--_text-field-hover-active-indicator-height);--md-filled-field-hover-content-color: var(--_text-field-hover-input-text-color);--md-filled-field-hover-label-text-color: var(--_text-field-hover-label-text-color);--md-filled-field-hover-leading-content-color: var(--_text-field-hover-leading-icon-color);--md-filled-field-hover-state-layer-color: var(--_text-field-hover-state-layer-color);--md-filled-field-hover-state-layer-opacity: var(--_text-field-hover-state-layer-opacity);--md-filled-field-hover-supporting-text-color: var(--_text-field-hover-supporting-text-color);--md-filled-field-hover-trailing-content-color: var(--_text-field-hover-trailing-icon-color);--md-filled-field-label-text-color: var(--_text-field-label-text-color);--md-filled-field-label-text-font: var(--_text-field-label-text-font);--md-filled-field-label-text-line-height: var(--_text-field-label-text-line-height);--md-filled-field-label-text-populated-line-height: var(--_text-field-label-text-populated-line-height);--md-filled-field-label-text-populated-size: var(--_text-field-label-text-populated-size);--md-filled-field-label-text-size: var(--_text-field-label-text-size);--md-filled-field-label-text-weight: var(--_text-field-label-text-weight);--md-filled-field-leading-content-color: var(--_text-field-leading-icon-color);--md-filled-field-supporting-text-color: var(--_text-field-supporting-text-color);--md-filled-field-supporting-text-font: var(--_text-field-supporting-text-font);--md-filled-field-supporting-text-line-height: var(--_text-field-supporting-text-line-height);--md-filled-field-supporting-text-size: var(--_text-field-supporting-text-size);--md-filled-field-supporting-text-weight: var(--_text-field-supporting-text-weight);--md-filled-field-trailing-content-color: var(--_text-field-trailing-icon-color)}[has-start] .icon.leading{font-size:var(--_text-field-leading-icon-size);height:var(--_text-field-leading-icon-size);width:var(--_text-field-leading-icon-size)}.icon.trailing{font-size:var(--_text-field-trailing-icon-size);height:var(--_text-field-trailing-icon-size);width:var(--_text-field-trailing-icon-size)}\n`;\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./select/internal/shared-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{color:unset;min-width:210px;display:flex}.field{cursor:default;outline:none}.select{position:relative;flex-direction:column}.icon.trailing svg,.icon ::slotted(*){fill:currentColor}.icon ::slotted(*){width:inherit;height:inherit;font-size:inherit}.icon slot{display:flex;height:100%;width:100%;align-items:center;justify-content:center}.icon.trailing :is(.up,.down){opacity:0;transition:opacity 75ms linear 75ms}.select:not(.open) .down,.select.open .up{opacity:1}.field,.select,md-menu{min-width:inherit;width:inherit;max-width:inherit;display:flex}md-menu{min-width:var(--__menu-min-width);max-width:var(--__menu-max-width, inherit)}.menu-wrapper{width:0px;height:0px;max-width:inherit}md-menu ::slotted(:not[disabled]){cursor:pointer}.field,.select{width:100%}:host{display:inline-flex}:host([disabled]){pointer-events:none}\n`;\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { FilledSelect } from './internal/filled-select.js';\nimport { styles } from './internal/filled-select-styles.js';\nimport { styles as sharedStyles } from './internal/shared-styles.js';\n/**\n * @summary\n * Select menus display a list of choices on temporary surfaces and display the\n * currently selected menu item above the menu.\n *\n * @description\n * The select component allows users to choose a value from a fixed list of\n * available options. Composed of an interactive anchor button and a menu, it is\n * analogous to the native HTML `<select>` element. This is the \"filled\"\n * variant.\n *\n * @example\n * ```html\n * <md-filled-select label=\"fruits\">\n *   <!-- An empty selected option will give select an \"un-filled\" state -->\n *   <md-select-option selected></md-select-option>\n *   <md-select-option value=\"apple\" headline=\"Apple\"></md-select-option>\n *   <md-select-option value=\"banana\" headline=\"Banana\"></md-select-option>\n *   <md-select-option value=\"kiwi\" headline=\"Kiwi\"></md-select-option>\n *   <md-select-option value=\"orange\" headline=\"Orange\"></md-select-option>\n *   <md-select-option value=\"tomato\" headline=\"Tomato\"></md-select-option>\n * </md-filled-select>\n * ```\n *\n * @final\n * @suppress {visibility}\n */\nexport let MdFilledSelect = class MdFilledSelect extends FilledSelect {\n};\nMdFilledSelect.styles = [sharedStyles, styles];\nMdFilledSelect = __decorate([\n    customElement('md-filled-select')\n], MdFilledSelect);\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport '../../field/outlined-field.js';\nimport { literal } from 'lit/static-html.js';\nimport { Select } from './select.js';\n// tslint:disable-next-line:enforce-comments-on-exported-symbols\nexport class OutlinedSelect extends Select {\n    constructor() {\n        super(...arguments);\n        this.fieldTag = literal `md-outlined-field`;\n    }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./select/internal/outlined-select-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{--_text-field-disabled-input-text-color: var(--md-outlined-select-text-field-disabled-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-input-text-opacity: var(--md-outlined-select-text-field-disabled-input-text-opacity, 0.38);--_text-field-disabled-label-text-color: var(--md-outlined-select-text-field-disabled-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-label-text-opacity: var(--md-outlined-select-text-field-disabled-label-text-opacity, 0.38);--_text-field-disabled-leading-icon-color: var(--md-outlined-select-text-field-disabled-leading-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-leading-icon-opacity: var(--md-outlined-select-text-field-disabled-leading-icon-opacity, 0.38);--_text-field-disabled-outline-color: var(--md-outlined-select-text-field-disabled-outline-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-outline-opacity: var(--md-outlined-select-text-field-disabled-outline-opacity, 0.12);--_text-field-disabled-outline-width: var(--md-outlined-select-text-field-disabled-outline-width, 1px);--_text-field-disabled-supporting-text-color: var(--md-outlined-select-text-field-disabled-supporting-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-supporting-text-opacity: var(--md-outlined-select-text-field-disabled-supporting-text-opacity, 0.38);--_text-field-disabled-trailing-icon-color: var(--md-outlined-select-text-field-disabled-trailing-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-trailing-icon-opacity: var(--md-outlined-select-text-field-disabled-trailing-icon-opacity, 0.38);--_text-field-error-focus-input-text-color: var(--md-outlined-select-text-field-error-focus-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-error-focus-label-text-color: var(--md-outlined-select-text-field-error-focus-label-text-color, var(--md-sys-color-error, #b3261e));--_text-field-error-focus-leading-icon-color: var(--md-outlined-select-text-field-error-focus-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-error-focus-outline-color: var(--md-outlined-select-text-field-error-focus-outline-color, var(--md-sys-color-error, #b3261e));--_text-field-error-focus-supporting-text-color: var(--md-outlined-select-text-field-error-focus-supporting-text-color, var(--md-sys-color-error, #b3261e));--_text-field-error-focus-trailing-icon-color: var(--md-outlined-select-text-field-error-focus-trailing-icon-color, var(--md-sys-color-error, #b3261e));--_text-field-error-hover-input-text-color: var(--md-outlined-select-text-field-error-hover-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-error-hover-label-text-color: var(--md-outlined-select-text-field-error-hover-label-text-color, var(--md-sys-color-on-error-container, #410e0b));--_text-field-error-hover-leading-icon-color: var(--md-outlined-select-text-field-error-hover-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-error-hover-outline-color: var(--md-outlined-select-text-field-error-hover-outline-color, var(--md-sys-color-on-error-container, #410e0b));--_text-field-error-hover-supporting-text-color: var(--md-outlined-select-text-field-error-hover-supporting-text-color, var(--md-sys-color-error, #b3261e));--_text-field-error-hover-trailing-icon-color: var(--md-outlined-select-text-field-error-hover-trailing-icon-color, var(--md-sys-color-on-error-container, #410e0b));--_text-field-error-input-text-color: var(--md-outlined-select-text-field-error-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-error-label-text-color: var(--md-outlined-select-text-field-error-label-text-color, var(--md-sys-color-error, #b3261e));--_text-field-error-leading-icon-color: var(--md-outlined-select-text-field-error-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-error-outline-color: var(--md-outlined-select-text-field-error-outline-color, var(--md-sys-color-error, #b3261e));--_text-field-error-supporting-text-color: var(--md-outlined-select-text-field-error-supporting-text-color, var(--md-sys-color-error, #b3261e));--_text-field-error-trailing-icon-color: var(--md-outlined-select-text-field-error-trailing-icon-color, var(--md-sys-color-error, #b3261e));--_text-field-focus-input-text-color: var(--md-outlined-select-text-field-focus-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-focus-label-text-color: var(--md-outlined-select-text-field-focus-label-text-color, var(--md-sys-color-primary, #6750a4));--_text-field-focus-leading-icon-color: var(--md-outlined-select-text-field-focus-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-focus-outline-color: var(--md-outlined-select-text-field-focus-outline-color, var(--md-sys-color-primary, #6750a4));--_text-field-focus-outline-width: var(--md-outlined-select-text-field-focus-outline-width, 3px);--_text-field-focus-supporting-text-color: var(--md-outlined-select-text-field-focus-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-focus-trailing-icon-color: var(--md-outlined-select-text-field-focus-trailing-icon-color, var(--md-sys-color-primary, #6750a4));--_text-field-hover-input-text-color: var(--md-outlined-select-text-field-hover-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-hover-label-text-color: var(--md-outlined-select-text-field-hover-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-hover-leading-icon-color: var(--md-outlined-select-text-field-hover-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-hover-outline-color: var(--md-outlined-select-text-field-hover-outline-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-hover-outline-width: var(--md-outlined-select-text-field-hover-outline-width, 1px);--_text-field-hover-supporting-text-color: var(--md-outlined-select-text-field-hover-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-hover-trailing-icon-color: var(--md-outlined-select-text-field-hover-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-input-text-color: var(--md-outlined-select-text-field-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-input-text-font: var(--md-outlined-select-text-field-input-text-font, var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto)));--_text-field-input-text-line-height: var(--md-outlined-select-text-field-input-text-line-height, var(--md-sys-typescale-body-large-line-height, 1.5rem));--_text-field-input-text-size: var(--md-outlined-select-text-field-input-text-size, var(--md-sys-typescale-body-large-size, 1rem));--_text-field-input-text-weight: var(--md-outlined-select-text-field-input-text-weight, var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400)));--_text-field-label-text-color: var(--md-outlined-select-text-field-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-label-text-font: var(--md-outlined-select-text-field-label-text-font, var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto)));--_text-field-label-text-line-height: var(--md-outlined-select-text-field-label-text-line-height, var(--md-sys-typescale-body-large-line-height, 1.5rem));--_text-field-label-text-populated-line-height: var(--md-outlined-select-text-field-label-text-populated-line-height, var(--md-sys-typescale-body-small-line-height, 1rem));--_text-field-label-text-populated-size: var(--md-outlined-select-text-field-label-text-populated-size, var(--md-sys-typescale-body-small-size, 0.75rem));--_text-field-label-text-size: var(--md-outlined-select-text-field-label-text-size, var(--md-sys-typescale-body-large-size, 1rem));--_text-field-label-text-weight: var(--md-outlined-select-text-field-label-text-weight, var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400)));--_text-field-leading-icon-color: var(--md-outlined-select-text-field-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-leading-icon-size: var(--md-outlined-select-text-field-leading-icon-size, 24px);--_text-field-outline-color: var(--md-outlined-select-text-field-outline-color, var(--md-sys-color-outline, #79747e));--_text-field-outline-width: var(--md-outlined-select-text-field-outline-width, 1px);--_text-field-supporting-text-color: var(--md-outlined-select-text-field-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-supporting-text-font: var(--md-outlined-select-text-field-supporting-text-font, var(--md-sys-typescale-body-small-font, var(--md-ref-typeface-plain, Roboto)));--_text-field-supporting-text-line-height: var(--md-outlined-select-text-field-supporting-text-line-height, var(--md-sys-typescale-body-small-line-height, 1rem));--_text-field-supporting-text-size: var(--md-outlined-select-text-field-supporting-text-size, var(--md-sys-typescale-body-small-size, 0.75rem));--_text-field-supporting-text-weight: var(--md-outlined-select-text-field-supporting-text-weight, var(--md-sys-typescale-body-small-weight, var(--md-ref-typeface-weight-regular, 400)));--_text-field-trailing-icon-color: var(--md-outlined-select-text-field-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-trailing-icon-size: var(--md-outlined-select-text-field-trailing-icon-size, 24px);--_text-field-container-shape-start-start: var(--md-outlined-select-text-field-container-shape-start-start, var(--md-outlined-select-text-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)));--_text-field-container-shape-start-end: var(--md-outlined-select-text-field-container-shape-start-end, var(--md-outlined-select-text-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)));--_text-field-container-shape-end-end: var(--md-outlined-select-text-field-container-shape-end-end, var(--md-outlined-select-text-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)));--_text-field-container-shape-end-start: var(--md-outlined-select-text-field-container-shape-end-start, var(--md-outlined-select-text-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)));--md-outlined-field-container-shape-end-end: var(--_text-field-container-shape-end-end);--md-outlined-field-container-shape-end-start: var(--_text-field-container-shape-end-start);--md-outlined-field-container-shape-start-end: var(--_text-field-container-shape-start-end);--md-outlined-field-container-shape-start-start: var(--_text-field-container-shape-start-start);--md-outlined-field-content-color: var(--_text-field-input-text-color);--md-outlined-field-content-font: var(--_text-field-input-text-font);--md-outlined-field-content-line-height: var(--_text-field-input-text-line-height);--md-outlined-field-content-size: var(--_text-field-input-text-size);--md-outlined-field-content-weight: var(--_text-field-input-text-weight);--md-outlined-field-disabled-content-color: var(--_text-field-disabled-input-text-color);--md-outlined-field-disabled-content-opacity: var(--_text-field-disabled-input-text-opacity);--md-outlined-field-disabled-label-text-color: var(--_text-field-disabled-label-text-color);--md-outlined-field-disabled-label-text-opacity: var(--_text-field-disabled-label-text-opacity);--md-outlined-field-disabled-leading-content-color: var(--_text-field-disabled-leading-icon-color);--md-outlined-field-disabled-leading-content-opacity: var(--_text-field-disabled-leading-icon-opacity);--md-outlined-field-disabled-outline-color: var(--_text-field-disabled-outline-color);--md-outlined-field-disabled-outline-opacity: var(--_text-field-disabled-outline-opacity);--md-outlined-field-disabled-outline-width: var(--_text-field-disabled-outline-width);--md-outlined-field-disabled-supporting-text-color: var(--_text-field-disabled-supporting-text-color);--md-outlined-field-disabled-supporting-text-opacity: var(--_text-field-disabled-supporting-text-opacity);--md-outlined-field-disabled-trailing-content-color: var(--_text-field-disabled-trailing-icon-color);--md-outlined-field-disabled-trailing-content-opacity: var(--_text-field-disabled-trailing-icon-opacity);--md-outlined-field-error-content-color: var(--_text-field-error-input-text-color);--md-outlined-field-error-focus-content-color: var(--_text-field-error-focus-input-text-color);--md-outlined-field-error-focus-label-text-color: var(--_text-field-error-focus-label-text-color);--md-outlined-field-error-focus-leading-content-color: var(--_text-field-error-focus-leading-icon-color);--md-outlined-field-error-focus-outline-color: var(--_text-field-error-focus-outline-color);--md-outlined-field-error-focus-supporting-text-color: var(--_text-field-error-focus-supporting-text-color);--md-outlined-field-error-focus-trailing-content-color: var(--_text-field-error-focus-trailing-icon-color);--md-outlined-field-error-hover-content-color: var(--_text-field-error-hover-input-text-color);--md-outlined-field-error-hover-label-text-color: var(--_text-field-error-hover-label-text-color);--md-outlined-field-error-hover-leading-content-color: var(--_text-field-error-hover-leading-icon-color);--md-outlined-field-error-hover-outline-color: var(--_text-field-error-hover-outline-color);--md-outlined-field-error-hover-supporting-text-color: var(--_text-field-error-hover-supporting-text-color);--md-outlined-field-error-hover-trailing-content-color: var(--_text-field-error-hover-trailing-icon-color);--md-outlined-field-error-label-text-color: var(--_text-field-error-label-text-color);--md-outlined-field-error-leading-content-color: var(--_text-field-error-leading-icon-color);--md-outlined-field-error-outline-color: var(--_text-field-error-outline-color);--md-outlined-field-error-supporting-text-color: var(--_text-field-error-supporting-text-color);--md-outlined-field-error-trailing-content-color: var(--_text-field-error-trailing-icon-color);--md-outlined-field-focus-content-color: var(--_text-field-focus-input-text-color);--md-outlined-field-focus-label-text-color: var(--_text-field-focus-label-text-color);--md-outlined-field-focus-leading-content-color: var(--_text-field-focus-leading-icon-color);--md-outlined-field-focus-outline-color: var(--_text-field-focus-outline-color);--md-outlined-field-focus-outline-width: var(--_text-field-focus-outline-width);--md-outlined-field-focus-supporting-text-color: var(--_text-field-focus-supporting-text-color);--md-outlined-field-focus-trailing-content-color: var(--_text-field-focus-trailing-icon-color);--md-outlined-field-hover-content-color: var(--_text-field-hover-input-text-color);--md-outlined-field-hover-label-text-color: var(--_text-field-hover-label-text-color);--md-outlined-field-hover-leading-content-color: var(--_text-field-hover-leading-icon-color);--md-outlined-field-hover-outline-color: var(--_text-field-hover-outline-color);--md-outlined-field-hover-outline-width: var(--_text-field-hover-outline-width);--md-outlined-field-hover-supporting-text-color: var(--_text-field-hover-supporting-text-color);--md-outlined-field-hover-trailing-content-color: var(--_text-field-hover-trailing-icon-color);--md-outlined-field-label-text-color: var(--_text-field-label-text-color);--md-outlined-field-label-text-font: var(--_text-field-label-text-font);--md-outlined-field-label-text-line-height: var(--_text-field-label-text-line-height);--md-outlined-field-label-text-populated-line-height: var(--_text-field-label-text-populated-line-height);--md-outlined-field-label-text-populated-size: var(--_text-field-label-text-populated-size);--md-outlined-field-label-text-size: var(--_text-field-label-text-size);--md-outlined-field-label-text-weight: var(--_text-field-label-text-weight);--md-outlined-field-leading-content-color: var(--_text-field-leading-icon-color);--md-outlined-field-outline-color: var(--_text-field-outline-color);--md-outlined-field-outline-width: var(--_text-field-outline-width);--md-outlined-field-supporting-text-color: var(--_text-field-supporting-text-color);--md-outlined-field-supporting-text-font: var(--_text-field-supporting-text-font);--md-outlined-field-supporting-text-line-height: var(--_text-field-supporting-text-line-height);--md-outlined-field-supporting-text-size: var(--_text-field-supporting-text-size);--md-outlined-field-supporting-text-weight: var(--_text-field-supporting-text-weight);--md-outlined-field-trailing-content-color: var(--_text-field-trailing-icon-color)}[has-start] .icon.leading{font-size:var(--_text-field-leading-icon-size);height:var(--_text-field-leading-icon-size);width:var(--_text-field-leading-icon-size)}.icon.trailing{font-size:var(--_text-field-trailing-icon-size);height:var(--_text-field-trailing-icon-size);width:var(--_text-field-trailing-icon-size)}\n`;\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { OutlinedSelect } from './internal/outlined-select.js';\nimport { styles } from './internal/outlined-select-styles.js';\nimport { styles as sharedStyles } from './internal/shared-styles.js';\n/**\n * @summary\n * Select menus display a list of choices on temporary surfaces and display the\n * currently selected menu item above the menu.\n *\n * @description\n * The select component allows users to choose a value from a fixed list of\n * available options. Composed of an interactive anchor button and a menu, it is\n * analogous to the native HTML `<select>` element. This is the \"outlined\"\n * variant.\n *\n * @example\n * ```html\n * <md-outlined-select label=\"fruits\">\n *   <!-- An empty selected option will give select an \"un-filled\" state -->\n *   <md-select-option selected></md-select-option>\n *   <md-select-option value=\"apple\" headline=\"Apple\"></md-select-option>\n *   <md-select-option value=\"banana\" headline=\"Banana\"></md-select-option>\n *   <md-select-option value=\"kiwi\" headline=\"Kiwi\"></md-select-option>\n *   <md-select-option value=\"orange\" headline=\"Orange\"></md-select-option>\n *   <md-select-option value=\"tomato\" headline=\"Tomato\"></md-select-option>\n * </md-outlined-select>\n * ```\n *\n * @final\n * @suppress {visibility}\n */\nexport let MdOutlinedSelect = class MdOutlinedSelect extends OutlinedSelect {\n};\nMdOutlinedSelect.styles = [sharedStyles, styles];\nMdOutlinedSelect = __decorate([\n    customElement('md-outlined-select')\n], MdOutlinedSelect);\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { MenuItemController, } from '../../../menu/internal/controllers/menuItemController.js';\n/**\n * Creates an event fired by a SelectOption to request selection from md-select.\n * Typically fired after `selected` changes from `false` to `true`.\n */\nexport function createRequestSelectionEvent() {\n    return new Event('request-selection', {\n        bubbles: true,\n        composed: true,\n    });\n}\n/**\n * Creates an event fired by a SelectOption to request deselection from\n * md-select. Typically fired after `selected` changes from `true` to `false`.\n */\nexport function createRequestDeselectionEvent() {\n    return new Event('request-deselection', {\n        bubbles: true,\n        composed: true,\n    });\n}\n/**\n * A controller that provides most functionality and md-select compatibility for\n * an element that implements the SelectOption interface.\n */\nexport class SelectOptionController {\n    /**\n     * The recommended role of the select option.\n     */\n    get role() {\n        return this.menuItemController.role;\n    }\n    /**\n     * The text that is selectable via typeahead. If not set, defaults to the\n     * innerText of the item slotted into the `\"headline\"` slot, and if there are\n     * no slotted elements into headline, then it checks the _default_ slot, and\n     * then the `\"supporting-text\"` slot if nothing is in _default_.\n     */\n    get typeaheadText() {\n        return this.menuItemController.typeaheadText;\n    }\n    setTypeaheadText(text) {\n        this.menuItemController.setTypeaheadText(text);\n    }\n    /**\n     * The text that is displayed in the select field when selected. If not set,\n     * defaults to the textContent of the item slotted into the `\"headline\"` slot,\n     * and if there are no slotted elements into headline, then it checks the\n     * _default_ slot, and then the `\"supporting-text\"` slot if nothing is in\n     * _default_.\n     */\n    get displayText() {\n        if (this.internalDisplayText !== null) {\n            return this.internalDisplayText;\n        }\n        return this.menuItemController.typeaheadText;\n    }\n    setDisplayText(text) {\n        this.internalDisplayText = text;\n    }\n    /**\n     * @param host The SelectOption in which to attach this controller to.\n     * @param config The object that configures this controller's behavior.\n     */\n    constructor(host, config) {\n        this.host = host;\n        this.internalDisplayText = null;\n        this.firstUpdate = true;\n        /**\n         * Bind this click listener to the interactive element. Handles closing the\n         * menu.\n         */\n        this.onClick = () => {\n            this.menuItemController.onClick();\n        };\n        /**\n         * Bind this click listener to the interactive element. Handles closing the\n         * menu.\n         */\n        this.onKeydown = (e) => {\n            this.menuItemController.onKeydown(e);\n        };\n        this.lastSelected = this.host.selected;\n        this.menuItemController = new MenuItemController(host, config);\n        host.addController(this);\n    }\n    hostUpdate() {\n        if (this.lastSelected !== this.host.selected) {\n            this.host.ariaSelected = this.host.selected ? 'true' : 'false';\n        }\n    }\n    hostUpdated() {\n        // Do not dispatch event on first update / boot-up.\n        if (this.lastSelected !== this.host.selected && !this.firstUpdate) {\n            // This section is really useful for when the user sets selected on the\n            // option programmatically. Most other cases (click and keyboard) are\n            // handled by md-select because it needs to coordinate the\n            // single-selection behavior.\n            if (this.host.selected) {\n                this.host.dispatchEvent(createRequestSelectionEvent());\n            }\n            else {\n                this.host.dispatchEvent(createRequestDeselectionEvent());\n            }\n        }\n        this.lastSelected = this.host.selected;\n        this.firstUpdate = false;\n    }\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport '../../../focus/md-focus-ring.js';\nimport '../../../labs/item/item.js';\nimport '../../../ripple/ripple.js';\nimport { html, LitElement, nothing } from 'lit';\nimport { property, query, queryAssignedElements, queryAssignedNodes, } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { mixinDelegatesAria } from '../../../internal/aria/delegate.js';\nimport { SelectOptionController } from './selectOptionController.js';\n// Separate variable needed for closure.\nconst selectOptionBaseClass = mixinDelegatesAria(LitElement);\n/**\n * @fires close-menu {CustomEvent<{initiator: SelectOption, reason: Reason, itemPath: SelectOption[]}>}\n * Closes the encapsulating menu on closable interaction. --bubbles --composed\n * @fires request-selection {Event} Requests the parent md-select to select this\n * element (and deselect others if single-selection) when `selected` changed to\n * `true`. --bubbles --composed\n * @fires request-deselection {Event} Requests the parent md-select to deselect\n * this element when `selected` changed to `false`. --bubbles --composed\n */\nexport class SelectOptionEl extends selectOptionBaseClass {\n    constructor() {\n        super(...arguments);\n        /**\n         * Disables the item and makes it non-selectable and non-interactive.\n         */\n        this.disabled = false;\n        /**\n         * READONLY: self-identifies as a menu item and sets its identifying attribute\n         */\n        this.isMenuItem = true;\n        /**\n         * Sets the item in the selected visual state when a submenu is opened.\n         */\n        this.selected = false;\n        /**\n         * Form value of the option.\n         */\n        this.value = '';\n        this.type = 'option';\n        this.selectOptionController = new SelectOptionController(this, {\n            getHeadlineElements: () => {\n                return this.headlineElements;\n            },\n            getSupportingTextElements: () => {\n                return this.supportingTextElements;\n            },\n            getDefaultElements: () => {\n                return this.defaultElements;\n            },\n            getInteractiveElement: () => this.listItemRoot,\n        });\n    }\n    /**\n     * The text that is selectable via typeahead. If not set, defaults to the\n     * innerText of the item slotted into the `\"headline\"` slot.\n     */\n    get typeaheadText() {\n        return this.selectOptionController.typeaheadText;\n    }\n    set typeaheadText(text) {\n        this.selectOptionController.setTypeaheadText(text);\n    }\n    /**\n     * The text that is displayed in the select field when selected. If not set,\n     * defaults to the textContent of the item slotted into the `\"headline\"` slot.\n     */\n    get displayText() {\n        return this.selectOptionController.displayText;\n    }\n    set displayText(text) {\n        this.selectOptionController.setDisplayText(text);\n    }\n    render() {\n        return this.renderListItem(html `\n      <md-item>\n        <div slot=\"container\">\n          ${this.renderRipple()} ${this.renderFocusRing()}\n        </div>\n        <slot name=\"start\" slot=\"start\"></slot>\n        <slot name=\"end\" slot=\"end\"></slot>\n        ${this.renderBody()}\n      </md-item>\n    `);\n    }\n    /**\n     * Renders the root list item.\n     *\n     * @param content the child content of the list item.\n     */\n    renderListItem(content) {\n        return html `\n      <li\n        id=\"item\"\n        tabindex=${this.disabled ? -1 : 0}\n        role=${this.selectOptionController.role}\n        aria-label=${this.ariaLabel || nothing}\n        aria-selected=${this.ariaSelected || nothing}\n        aria-checked=${this.ariaChecked || nothing}\n        aria-expanded=${this.ariaExpanded || nothing}\n        aria-haspopup=${this.ariaHasPopup || nothing}\n        class=\"list-item ${classMap(this.getRenderClasses())}\"\n        @click=${this.selectOptionController.onClick}\n        @keydown=${this.selectOptionController.onKeydown}\n        >${content}</li\n      >\n    `;\n    }\n    /**\n     * Handles rendering of the ripple element.\n     */\n    renderRipple() {\n        return html ` <md-ripple\n      part=\"ripple\"\n      for=\"item\"\n      ?disabled=${this.disabled}></md-ripple>`;\n    }\n    /**\n     * Handles rendering of the focus ring.\n     */\n    renderFocusRing() {\n        return html ` <md-focus-ring\n      part=\"focus-ring\"\n      for=\"item\"\n      inward></md-focus-ring>`;\n    }\n    /**\n     * Classes applied to the list item root.\n     */\n    getRenderClasses() {\n        return {\n            'disabled': this.disabled,\n            'selected': this.selected,\n        };\n    }\n    /**\n     * Handles rendering the headline and supporting text.\n     */\n    renderBody() {\n        return html `\n      <slot></slot>\n      <slot name=\"overline\" slot=\"overline\"></slot>\n      <slot name=\"headline\" slot=\"headline\"></slot>\n      <slot name=\"supporting-text\" slot=\"supporting-text\"></slot>\n      <slot\n        name=\"trailing-supporting-text\"\n        slot=\"trailing-supporting-text\"></slot>\n    `;\n    }\n    focus() {\n        // TODO(b/300334509): needed for some cases where delegatesFocus doesn't\n        // work programmatically like in FF and select-option\n        this.listItemRoot?.focus();\n    }\n}\n/** @nocollapse */\nSelectOptionEl.shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n};\n__decorate([\n    property({ type: Boolean, reflect: true })\n], SelectOptionEl.prototype, \"disabled\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'md-menu-item', reflect: true })\n], SelectOptionEl.prototype, \"isMenuItem\", void 0);\n__decorate([\n    property({ type: Boolean })\n], SelectOptionEl.prototype, \"selected\", void 0);\n__decorate([\n    property()\n], SelectOptionEl.prototype, \"value\", void 0);\n__decorate([\n    query('.list-item')\n], SelectOptionEl.prototype, \"listItemRoot\", void 0);\n__decorate([\n    queryAssignedElements({ slot: 'headline' })\n], SelectOptionEl.prototype, \"headlineElements\", void 0);\n__decorate([\n    queryAssignedElements({ slot: 'supporting-text' })\n], SelectOptionEl.prototype, \"supportingTextElements\", void 0);\n__decorate([\n    queryAssignedNodes({ slot: '' })\n], SelectOptionEl.prototype, \"defaultElements\", void 0);\n__decorate([\n    property({ attribute: 'typeahead-text' })\n], SelectOptionEl.prototype, \"typeaheadText\", null);\n__decorate([\n    property({ attribute: 'display-text' })\n], SelectOptionEl.prototype, \"displayText\", null);\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { styles } from '../menu/internal/menuitem/menu-item-styles.js';\nimport { SelectOptionEl } from './internal/selectoption/select-option.js';\n/**\n * @summary\n * Select menus display a list of choices on temporary surfaces and display the\n * currently selected menu item above the menu.\n *\n * @description\n * The select component allows users to choose a value from a fixed list of\n * available options. Composed of an interactive anchor button and a menu, it is\n * analogous to the native HTML `<select>` element. This is the option that\n * can be placed inside of an md-select.\n *\n * This component is a subclass of `md-menu-item` and can accept the same slots,\n * properties, and events as `md-menu-item`.\n *\n * @example\n * ```html\n * <md-outlined-select label=\"fruits\">\n *   <!-- An empty selected option will give select an \"un-filled\" state -->\n *   <md-select-option selected></md-select-option>\n *   <md-select-option value=\"apple\" headline=\"Apple\"></md-select-option>\n *   <md-select-option value=\"banana\" headline=\"Banana\"></md-select-option>\n *   <md-select-option value=\"kiwi\" headline=\"Kiwi\"></md-select-option>\n *   <md-select-option value=\"orange\" headline=\"Orange\"></md-select-option>\n *   <md-select-option value=\"tomato\" headline=\"Tomato\"></md-select-option>\n * </md-outlined-select>\n * ```\n *\n * @final\n * @suppress {visibility}\n */\nexport let MdSelectOption = class MdSelectOption extends SelectOptionEl {\n};\nMdSelectOption.styles = [styles];\nMdSelectOption = __decorate([\n    customElement('md-select-option')\n], MdSelectOption);\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./slider/internal/forced-colors-styles.css.\nimport { css } from 'lit';\nexport const styles = css `@media(forced-colors: active){:host{--md-slider-active-track-color: CanvasText;--md-slider-disabled-active-track-color: GrayText;--md-slider-disabled-active-track-opacity: 1;--md-slider-disabled-handle-color: GrayText;--md-slider-disabled-inactive-track-color: GrayText;--md-slider-disabled-inactive-track-opacity: 1;--md-slider-focus-handle-color: CanvasText;--md-slider-handle-color: CanvasText;--md-slider-handle-shadow-color: Canvas;--md-slider-hover-handle-color: CanvasText;--md-slider-hover-state-layer-color: Canvas;--md-slider-hover-state-layer-opacity: 1;--md-slider-inactive-track-color: Canvas;--md-slider-label-container-color: Canvas;--md-slider-label-text-color: CanvasText;--md-slider-pressed-handle-color: CanvasText;--md-slider-pressed-state-layer-color: Canvas;--md-slider-pressed-state-layer-opacity: 1;--md-slider-with-overlap-handle-outline-color: CanvasText}.label,.label::before{border:var(--_with-overlap-handle-outline-color) solid var(--_with-overlap-handle-outline-width)}:host(:not([disabled])) .track::before{border:1px solid var(--_active-track-color)}.tickmarks::before{background-image:url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='CanvasText'%3E%3Ccircle cx='2' cy='2'  r='1'/%3E%3C/svg%3E\")}.tickmarks::after{background-image:url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='Canvas'%3E%3Ccircle cx='2' cy='2' r='1'/%3E%3C/svg%3E\")}:host([disabled]) .tickmarks::before{background-image:url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='Canvas'%3E%3Ccircle cx='2' cy='2'  r='1'/%3E%3C/svg%3E\")}}\n`;\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nexport function when(condition, trueCase, falseCase) {\n    return condition ? trueCase(condition) : falseCase?.(condition);\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport '../../elevation/elevation.js';\nimport '../../focus/md-focus-ring.js';\nimport '../../ripple/ripple.js';\nimport { html, isServer, LitElement, nothing } from 'lit';\nimport { property, query, queryAsync, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { when } from 'lit/directives/when.js';\nimport { mixinDelegatesAria } from '../../internal/aria/delegate.js';\nimport { dispatchActivationClick, isActivationClick, } from '../../internal/events/form-label-activation.js';\nimport { redispatchEvent } from '../../internal/events/redispatch-event.js';\nimport { mixinElementInternals } from '../../labs/behaviors/element-internals.js';\nimport { getFormValue, mixinFormAssociated, } from '../../labs/behaviors/form-associated.js';\n// Disable warning for classMap with destructuring\n// tslint:disable:no-implicit-dictionary-conversion\n// Separate variable needed for closure.\nconst sliderBaseClass = mixinDelegatesAria(mixinFormAssociated(mixinElementInternals(LitElement)));\n/**\n * Slider component.\n *\n *\n * @fires change {Event} The native `change` event on\n * [`<input>`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event)\n * --bubbles\n * @fires input {InputEvent} The native `input` event on\n * [`<input>`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event)\n * --bubbles --composed\n */\nexport class Slider extends sliderBaseClass {\n    /**\n     * The HTML name to use in form submission for a range slider's starting\n     * value. Use `name` instead if both the start and end values should use the\n     * same name.\n     */\n    get nameStart() {\n        return this.getAttribute('name-start') ?? this.name;\n    }\n    set nameStart(name) {\n        this.setAttribute('name-start', name);\n    }\n    /**\n     * The HTML name to use in form submission for a range slider's ending value.\n     * Use `name` instead if both the start and end values should use the same\n     * name.\n     */\n    get nameEnd() {\n        return this.getAttribute('name-end') ?? this.nameStart;\n    }\n    set nameEnd(name) {\n        this.setAttribute('name-end', name);\n    }\n    // Note: start aria-* properties are only applied when range=true, which is\n    // why they do not need to handle both cases.\n    get renderAriaLabelStart() {\n        // Needed for closure conformance\n        const { ariaLabel } = this;\n        return (this.ariaLabelStart ||\n            (ariaLabel && `${ariaLabel} start`) ||\n            this.valueLabelStart ||\n            String(this.valueStart));\n    }\n    get renderAriaValueTextStart() {\n        return (this.ariaValueTextStart || this.valueLabelStart || String(this.valueStart));\n    }\n    // Note: end aria-* properties are applied for single and range sliders, which\n    // is why it needs to handle `this.range` (while start aria-* properties do\n    // not).\n    get renderAriaLabelEnd() {\n        // Needed for closure conformance\n        const { ariaLabel } = this;\n        if (this.range) {\n            return (this.ariaLabelEnd ||\n                (ariaLabel && `${ariaLabel} end`) ||\n                this.valueLabelEnd ||\n                String(this.valueEnd));\n        }\n        return ariaLabel || this.valueLabel || String(this.value);\n    }\n    get renderAriaValueTextEnd() {\n        if (this.range) {\n            return (this.ariaValueTextEnd || this.valueLabelEnd || String(this.valueEnd));\n        }\n        // Needed for conformance\n        const { ariaValueText } = this;\n        return ariaValueText || this.valueLabel || String(this.value);\n    }\n    constructor() {\n        super();\n        /**\n         * The slider minimum value\n         */\n        this.min = 0;\n        /**\n         * The slider maximum value\n         */\n        this.max = 100;\n        /**\n         * An optional label for the slider's value displayed when range is\n         * false; if not set, the label is the value itself.\n         */\n        this.valueLabel = '';\n        /**\n         * An optional label for the slider's start value displayed when\n         * range is true; if not set, the label is the valueStart itself.\n         */\n        this.valueLabelStart = '';\n        /**\n         * An optional label for the slider's end value displayed when\n         * range is true; if not set, the label is the valueEnd itself.\n         */\n        this.valueLabelEnd = '';\n        /**\n         * Aria label for the slider's start handle displayed when\n         * range is true.\n         */\n        this.ariaLabelStart = '';\n        /**\n         * Aria value text for the slider's start value displayed when\n         * range is true.\n         */\n        this.ariaValueTextStart = '';\n        /**\n         * Aria label for the slider's end handle displayed when\n         * range is true.\n         */\n        this.ariaLabelEnd = '';\n        /**\n         * Aria value text for the slider's end value displayed when\n         * range is true.\n         */\n        this.ariaValueTextEnd = '';\n        /**\n         * The step between values.\n         */\n        this.step = 1;\n        /**\n         * Whether or not to show tick marks.\n         */\n        this.ticks = false;\n        /**\n         * Whether or not to show a value label when activated.\n         */\n        this.labeled = false;\n        /**\n         * Whether or not to show a value range. When false, the slider displays\n         * a slideable handle for the value property; when true, it displays\n         * slideable handles for the valueStart and valueEnd properties.\n         */\n        this.range = false;\n        // handle hover/pressed states are set manually since the handle\n        // does not receive pointer events so that the native inputs are\n        // interaction targets.\n        this.handleStartHover = false;\n        this.handleEndHover = false;\n        this.startOnTop = false;\n        this.handlesOverlapping = false;\n        // used in synthetic events generated to control ripple hover state.\n        this.ripplePointerId = 1;\n        // flag to prevent processing of re-dispatched input event.\n        this.isRedispatchingEvent = false;\n        if (!isServer) {\n            this.addEventListener('click', (event) => {\n                if (!isActivationClick(event) || !this.inputEnd) {\n                    return;\n                }\n                this.focus();\n                dispatchActivationClick(this.inputEnd);\n            });\n        }\n    }\n    focus() {\n        this.inputEnd?.focus();\n    }\n    willUpdate(changed) {\n        this.renderValueStart = changed.has('valueStart')\n            ? this.valueStart\n            : this.inputStart?.valueAsNumber;\n        const endValueChanged = (changed.has('valueEnd') && this.range) || changed.has('value');\n        this.renderValueEnd = endValueChanged\n            ? this.range\n                ? this.valueEnd\n                : this.value\n            : this.inputEnd?.valueAsNumber;\n        // manually handle ripple hover state since the handle is pointer events\n        // none.\n        if (changed.get('handleStartHover') !== undefined) {\n            this.toggleRippleHover(this.rippleStart, this.handleStartHover);\n        }\n        else if (changed.get('handleEndHover') !== undefined) {\n            this.toggleRippleHover(this.rippleEnd, this.handleEndHover);\n        }\n    }\n    updated(changed) {\n        // Validate input rendered value and re-render if necessary. This ensures\n        // the rendred handle stays in sync with the input thumb which is used for\n        // interaction. These can get out of sync if a supplied value does not\n        // map to an exactly stepped value between min and max.\n        if (this.range) {\n            this.renderValueStart = this.inputStart.valueAsNumber;\n        }\n        this.renderValueEnd = this.inputEnd.valueAsNumber;\n        // update values if they are unset\n        // when using a range, default to equi-distant between\n        // min - valueStart - valueEnd - max\n        if (this.range) {\n            const segment = (this.max - this.min) / 3;\n            if (this.valueStart === undefined) {\n                this.inputStart.valueAsNumber = this.min + segment;\n                // read actual value from input\n                const v = this.inputStart.valueAsNumber;\n                this.valueStart = this.renderValueStart = v;\n            }\n            if (this.valueEnd === undefined) {\n                this.inputEnd.valueAsNumber = this.min + 2 * segment;\n                // read actual value from input\n                const v = this.inputEnd.valueAsNumber;\n                this.valueEnd = this.renderValueEnd = v;\n            }\n        }\n        else {\n            this.value ??= this.renderValueEnd;\n        }\n        if (changed.has('range') ||\n            changed.has('renderValueStart') ||\n            changed.has('renderValueEnd') ||\n            this.isUpdatePending) {\n            // Only check if the handle nubs are overlapping, as the ripple touch\n            // target extends subtantially beyond the boundary of the handle nub.\n            const startNub = this.handleStart?.querySelector('.handleNub');\n            const endNub = this.handleEnd?.querySelector('.handleNub');\n            this.handlesOverlapping = isOverlapping(startNub, endNub);\n        }\n        // called to finish the update imediately;\n        // note, this is a no-op unless an update is scheduled\n        this.performUpdate();\n    }\n    render() {\n        const step = this.step === 0 ? 1 : this.step;\n        const range = Math.max(this.max - this.min, step);\n        const startFraction = this.range\n            ? ((this.renderValueStart ?? this.min) - this.min) / range\n            : 0;\n        const endFraction = ((this.renderValueEnd ?? this.min) - this.min) / range;\n        const containerStyles = {\n            // for clipping inputs and active track.\n            '--_start-fraction': String(startFraction),\n            '--_end-fraction': String(endFraction),\n            // for generating tick marks\n            '--_tick-count': String(range / step),\n        };\n        const containerClasses = { ranged: this.range };\n        // optional label values to show in place of the value.\n        const labelStart = this.valueLabelStart || String(this.renderValueStart);\n        const labelEnd = (this.range ? this.valueLabelEnd : this.valueLabel) ||\n            String(this.renderValueEnd);\n        const inputStartProps = {\n            start: true,\n            value: this.renderValueStart,\n            ariaLabel: this.renderAriaLabelStart,\n            ariaValueText: this.renderAriaValueTextStart,\n            ariaMin: this.min,\n            ariaMax: this.valueEnd ?? this.max,\n        };\n        const inputEndProps = {\n            start: false,\n            value: this.renderValueEnd,\n            ariaLabel: this.renderAriaLabelEnd,\n            ariaValueText: this.renderAriaValueTextEnd,\n            ariaMin: this.range ? this.valueStart ?? this.min : this.min,\n            ariaMax: this.max,\n        };\n        const handleStartProps = {\n            start: true,\n            hover: this.handleStartHover,\n            label: labelStart,\n        };\n        const handleEndProps = {\n            start: false,\n            hover: this.handleEndHover,\n            label: labelEnd,\n        };\n        const handleContainerClasses = {\n            hover: this.handleStartHover || this.handleEndHover,\n        };\n        return html ` <div\n      class=\"container ${classMap(containerClasses)}\"\n      style=${styleMap(containerStyles)}>\n      ${when(this.range, () => this.renderInput(inputStartProps))}\n      ${this.renderInput(inputEndProps)} ${this.renderTrack()}\n      <div class=\"handleContainerPadded\">\n        <div class=\"handleContainerBlock\">\n          <div class=\"handleContainer ${classMap(handleContainerClasses)}\">\n            ${when(this.range, () => this.renderHandle(handleStartProps))}\n            ${this.renderHandle(handleEndProps)}\n          </div>\n        </div>\n      </div>\n    </div>`;\n    }\n    renderTrack() {\n        return html `\n      <div class=\"track\"></div>\n      ${this.ticks ? html `<div class=\"tickmarks\"></div>` : nothing}\n    `;\n    }\n    renderLabel(value) {\n        return html `<div class=\"label\" aria-hidden=\"true\">\n      <span class=\"labelContent\" part=\"label\">${value}</span>\n    </div>`;\n    }\n    renderHandle({ start, hover, label, }) {\n        const onTop = !this.disabled && start === this.startOnTop;\n        const isOverlapping = !this.disabled && this.handlesOverlapping;\n        const name = start ? 'start' : 'end';\n        return html `<div\n      class=\"handle ${classMap({\n            [name]: true,\n            hover,\n            onTop,\n            isOverlapping,\n        })}\">\n      <md-focus-ring part=\"focus-ring\" for=${name}></md-focus-ring>\n      <md-ripple\n        for=${name}\n        class=${name}\n        ?disabled=${this.disabled}></md-ripple>\n      <div class=\"handleNub\">\n        <md-elevation part=\"elevation\"></md-elevation>\n      </div>\n      ${when(this.labeled, () => this.renderLabel(label))}\n    </div>`;\n    }\n    renderInput({ start, value, ariaLabel, ariaValueText, ariaMin, ariaMax, }) {\n        // Slider requires min/max set to the overall min/max for both inputs.\n        // This is reported to screen readers, which is why we need aria-valuemin\n        // and aria-valuemax.\n        const name = start ? `start` : `end`;\n        return html `<input\n      type=\"range\"\n      class=\"${classMap({\n            start,\n            end: !start,\n        })}\"\n      @focus=${this.handleFocus}\n      @pointerdown=${this.handleDown}\n      @pointerup=${this.handleUp}\n      @pointerenter=${this.handleEnter}\n      @pointermove=${this.handleMove}\n      @pointerleave=${this.handleLeave}\n      @keydown=${this.handleKeydown}\n      @keyup=${this.handleKeyup}\n      @input=${this.handleInput}\n      @change=${this.handleChange}\n      id=${name}\n      .disabled=${this.disabled}\n      .min=${String(this.min)}\n      aria-valuemin=${ariaMin}\n      .max=${String(this.max)}\n      aria-valuemax=${ariaMax}\n      .step=${String(this.step)}\n      .value=${String(value)}\n      .tabIndex=${start ? 1 : 0}\n      aria-label=${ariaLabel || nothing}\n      aria-valuetext=${ariaValueText} />`;\n    }\n    async toggleRippleHover(ripple, hovering) {\n        const rippleEl = await ripple;\n        if (!rippleEl) {\n            return;\n        }\n        // TODO(b/269799771): improve slider ripple connection\n        if (hovering) {\n            rippleEl.handlePointerenter(new PointerEvent('pointerenter', {\n                isPrimary: true,\n                pointerId: this.ripplePointerId,\n            }));\n        }\n        else {\n            rippleEl.handlePointerleave(new PointerEvent('pointerleave', {\n                isPrimary: true,\n                pointerId: this.ripplePointerId,\n            }));\n        }\n    }\n    handleFocus(event) {\n        this.updateOnTop(event.target);\n    }\n    startAction(event) {\n        const target = event.target;\n        const fixed = target === this.inputStart ? this.inputEnd : this.inputStart;\n        this.action = {\n            canFlip: event.type === 'pointerdown',\n            flipped: false,\n            target,\n            fixed,\n            values: new Map([\n                [target, target.valueAsNumber],\n                [fixed, fixed?.valueAsNumber],\n            ]),\n        };\n    }\n    finishAction(event) {\n        this.action = undefined;\n    }\n    handleKeydown(event) {\n        this.startAction(event);\n    }\n    handleKeyup(event) {\n        this.finishAction(event);\n    }\n    handleDown(event) {\n        this.startAction(event);\n        this.ripplePointerId = event.pointerId;\n        const isStart = event.target === this.inputStart;\n        // Since handle moves to pointer on down and there may not be a move,\n        // it needs to be considered hovered..\n        this.handleStartHover =\n            !this.disabled && isStart && Boolean(this.handleStart);\n        this.handleEndHover = !this.disabled && !isStart && Boolean(this.handleEnd);\n    }\n    async handleUp(event) {\n        if (!this.action) {\n            return;\n        }\n        const { target, values, flipped } = this.action;\n        //  Async here for Firefox because input can be after pointerup\n        //  when value is calmped.\n        await new Promise(requestAnimationFrame);\n        if (target !== undefined) {\n            // Ensure Safari focuses input so label renders.\n            // Ensure any flipped input is focused so the tab order is right.\n            target.focus();\n            // When action is flipped, change must be fired manually since the\n            // real event target did not change.\n            if (flipped && target.valueAsNumber !== values.get(target)) {\n                target.dispatchEvent(new Event('change', { bubbles: true }));\n            }\n        }\n        this.finishAction(event);\n    }\n    /**\n     * The move handler tracks handle hovering to facilitate proper ripple\n     * behavior on the slider handle. This is needed because user interaction with\n     * the native input is leveraged to position the handle. Because the separate\n     * displayed handle element has pointer events disabled (to allow interaction\n     * with the input) and the input's handle is a pseudo-element, neither can be\n     * the ripple's interactive element. Therefore the input is the ripple's\n     * interactive element and has a `ripple` directive; however the ripple\n     * is gated on the handle being hovered. In addition, because the ripple\n     * hover state is being specially handled, it must be triggered independent\n     * of the directive. This is done based on the hover state when the\n     * slider is updated.\n     */\n    handleMove(event) {\n        this.handleStartHover = !this.disabled && inBounds(event, this.handleStart);\n        this.handleEndHover = !this.disabled && inBounds(event, this.handleEnd);\n    }\n    handleEnter(event) {\n        this.handleMove(event);\n    }\n    handleLeave() {\n        this.handleStartHover = false;\n        this.handleEndHover = false;\n    }\n    updateOnTop(input) {\n        this.startOnTop = input.classList.contains('start');\n    }\n    needsClamping() {\n        if (!this.action) {\n            return false;\n        }\n        const { target, fixed } = this.action;\n        const isStart = target === this.inputStart;\n        return isStart\n            ? target.valueAsNumber > fixed.valueAsNumber\n            : target.valueAsNumber < fixed.valueAsNumber;\n    }\n    // if start/end start coincident and the first drag input would e.g. move\n    // start > end, avoid clamping and \"flip\" to use the other input\n    // as the action target.\n    isActionFlipped() {\n        const { action } = this;\n        if (!action) {\n            return false;\n        }\n        const { target, fixed, values } = action;\n        if (action.canFlip) {\n            const coincident = values.get(target) === values.get(fixed);\n            if (coincident && this.needsClamping()) {\n                action.canFlip = false;\n                action.flipped = true;\n                action.target = fixed;\n                action.fixed = target;\n            }\n        }\n        return action.flipped;\n    }\n    // when flipped, apply the drag input to the flipped target and reset\n    // the actual target.\n    flipAction() {\n        if (!this.action) {\n            return false;\n        }\n        const { target, fixed, values } = this.action;\n        const changed = target.valueAsNumber !== fixed.valueAsNumber;\n        target.valueAsNumber = fixed.valueAsNumber;\n        fixed.valueAsNumber = values.get(fixed);\n        return changed;\n    }\n    // clamp such that start does not move beyond end and visa versa.\n    clampAction() {\n        if (!this.needsClamping() || !this.action) {\n            return false;\n        }\n        const { target, fixed } = this.action;\n        target.valueAsNumber = fixed.valueAsNumber;\n        return true;\n    }\n    handleInput(event) {\n        // avoid processing a re-dispatched event\n        if (this.isRedispatchingEvent) {\n            return;\n        }\n        let stopPropagation = false;\n        let redispatch = false;\n        if (this.range) {\n            if (this.isActionFlipped()) {\n                stopPropagation = true;\n                redispatch = this.flipAction();\n            }\n            if (this.clampAction()) {\n                stopPropagation = true;\n                redispatch = false;\n            }\n        }\n        const target = event.target;\n        this.updateOnTop(target);\n        // update value only on interaction\n        if (this.range) {\n            this.valueStart = this.inputStart.valueAsNumber;\n            this.valueEnd = this.inputEnd.valueAsNumber;\n        }\n        else {\n            this.value = this.inputEnd.valueAsNumber;\n        }\n        // control external visibility of input event\n        if (stopPropagation) {\n            event.stopPropagation();\n        }\n        // ensure event path is correct when flipped.\n        if (redispatch) {\n            this.isRedispatchingEvent = true;\n            redispatchEvent(target, event);\n            this.isRedispatchingEvent = false;\n        }\n    }\n    handleChange(event) {\n        // prevent keyboard triggered changes from dispatching for\n        // clamped values; note, this only occurs for keyboard\n        const changeTarget = event.target;\n        const { target, values } = this.action ?? {};\n        const squelch = target && target.valueAsNumber === values.get(changeTarget);\n        if (!squelch) {\n            redispatchEvent(this, event);\n        }\n        // ensure keyboard triggered change clears action.\n        this.finishAction(event);\n    }\n    [getFormValue]() {\n        if (this.range) {\n            const data = new FormData();\n            data.append(this.nameStart, String(this.valueStart));\n            data.append(this.nameEnd, String(this.valueEnd));\n            return data;\n        }\n        return String(this.value);\n    }\n    formResetCallback() {\n        if (this.range) {\n            const valueStart = this.getAttribute('value-start');\n            this.valueStart = valueStart !== null ? Number(valueStart) : undefined;\n            const valueEnd = this.getAttribute('value-end');\n            this.valueEnd = valueEnd !== null ? Number(valueEnd) : undefined;\n            return;\n        }\n        const value = this.getAttribute('value');\n        this.value = value !== null ? Number(value) : undefined;\n    }\n    formStateRestoreCallback(state) {\n        if (Array.isArray(state)) {\n            const [[, valueStart], [, valueEnd]] = state;\n            this.valueStart = Number(valueStart);\n            this.valueEnd = Number(valueEnd);\n            this.range = true;\n            return;\n        }\n        this.value = Number(state);\n        this.range = false;\n    }\n}\n/** @nocollapse */\nSlider.shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n};\n__decorate([\n    property({ type: Number })\n], Slider.prototype, \"min\", void 0);\n__decorate([\n    property({ type: Number })\n], Slider.prototype, \"max\", void 0);\n__decorate([\n    property({ type: Number })\n], Slider.prototype, \"value\", void 0);\n__decorate([\n    property({ type: Number, attribute: 'value-start' })\n], Slider.prototype, \"valueStart\", void 0);\n__decorate([\n    property({ type: Number, attribute: 'value-end' })\n], Slider.prototype, \"valueEnd\", void 0);\n__decorate([\n    property({ attribute: 'value-label' })\n], Slider.prototype, \"valueLabel\", void 0);\n__decorate([\n    property({ attribute: 'value-label-start' })\n], Slider.prototype, \"valueLabelStart\", void 0);\n__decorate([\n    property({ attribute: 'value-label-end' })\n], Slider.prototype, \"valueLabelEnd\", void 0);\n__decorate([\n    property({ attribute: 'aria-label-start' })\n], Slider.prototype, \"ariaLabelStart\", void 0);\n__decorate([\n    property({ attribute: 'aria-valuetext-start' })\n], Slider.prototype, \"ariaValueTextStart\", void 0);\n__decorate([\n    property({ attribute: 'aria-label-end' })\n], Slider.prototype, \"ariaLabelEnd\", void 0);\n__decorate([\n    property({ attribute: 'aria-valuetext-end' })\n], Slider.prototype, \"ariaValueTextEnd\", void 0);\n__decorate([\n    property({ type: Number })\n], Slider.prototype, \"step\", void 0);\n__decorate([\n    property({ type: Boolean })\n], Slider.prototype, \"ticks\", void 0);\n__decorate([\n    property({ type: Boolean })\n], Slider.prototype, \"labeled\", void 0);\n__decorate([\n    property({ type: Boolean })\n], Slider.prototype, \"range\", void 0);\n__decorate([\n    query('input.start')\n], Slider.prototype, \"inputStart\", void 0);\n__decorate([\n    query('.handle.start')\n], Slider.prototype, \"handleStart\", void 0);\n__decorate([\n    queryAsync('md-ripple.start')\n], Slider.prototype, \"rippleStart\", void 0);\n__decorate([\n    query('input.end')\n], Slider.prototype, \"inputEnd\", void 0);\n__decorate([\n    query('.handle.end')\n], Slider.prototype, \"handleEnd\", void 0);\n__decorate([\n    queryAsync('md-ripple.end')\n], Slider.prototype, \"rippleEnd\", void 0);\n__decorate([\n    state()\n], Slider.prototype, \"handleStartHover\", void 0);\n__decorate([\n    state()\n], Slider.prototype, \"handleEndHover\", void 0);\n__decorate([\n    state()\n], Slider.prototype, \"startOnTop\", void 0);\n__decorate([\n    state()\n], Slider.prototype, \"handlesOverlapping\", void 0);\n__decorate([\n    state()\n], Slider.prototype, \"renderValueStart\", void 0);\n__decorate([\n    state()\n], Slider.prototype, \"renderValueEnd\", void 0);\nfunction inBounds({ x, y }, element) {\n    if (!element) {\n        return false;\n    }\n    const { top, left, bottom, right } = element.getBoundingClientRect();\n    return x >= left && x <= right && y >= top && y <= bottom;\n}\nfunction isOverlapping(elA, elB) {\n    if (!(elA && elB)) {\n        return false;\n    }\n    const a = elA.getBoundingClientRect();\n    const b = elB.getBoundingClientRect();\n    return !(a.top > b.bottom ||\n        a.right < b.left ||\n        a.bottom < b.top ||\n        a.left > b.right);\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./slider/internal/slider-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{--_active-track-color: var(--md-slider-active-track-color, var(--md-sys-color-primary, #6750a4));--_active-track-height: var(--md-slider-active-track-height, 4px);--_active-track-shape: var(--md-slider-active-track-shape, var(--md-sys-shape-corner-full, 9999px));--_disabled-active-track-color: var(--md-slider-disabled-active-track-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-active-track-opacity: var(--md-slider-disabled-active-track-opacity, 0.38);--_disabled-handle-color: var(--md-slider-disabled-handle-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-handle-elevation: var(--md-slider-disabled-handle-elevation, 0);--_disabled-inactive-track-color: var(--md-slider-disabled-inactive-track-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-inactive-track-opacity: var(--md-slider-disabled-inactive-track-opacity, 0.12);--_focus-handle-color: var(--md-slider-focus-handle-color, var(--md-sys-color-primary, #6750a4));--_handle-color: var(--md-slider-handle-color, var(--md-sys-color-primary, #6750a4));--_handle-elevation: var(--md-slider-handle-elevation, 1);--_handle-height: var(--md-slider-handle-height, 20px);--_handle-shadow-color: var(--md-slider-handle-shadow-color, var(--md-sys-color-shadow, #000));--_handle-shape: var(--md-slider-handle-shape, var(--md-sys-shape-corner-full, 9999px));--_handle-width: var(--md-slider-handle-width, 20px);--_hover-handle-color: var(--md-slider-hover-handle-color, var(--md-sys-color-primary, #6750a4));--_hover-state-layer-color: var(--md-slider-hover-state-layer-color, var(--md-sys-color-primary, #6750a4));--_hover-state-layer-opacity: var(--md-slider-hover-state-layer-opacity, 0.08);--_inactive-track-color: var(--md-slider-inactive-track-color, var(--md-sys-color-surface-container-highest, #e6e0e9));--_inactive-track-height: var(--md-slider-inactive-track-height, 4px);--_inactive-track-shape: var(--md-slider-inactive-track-shape, var(--md-sys-shape-corner-full, 9999px));--_label-container-color: var(--md-slider-label-container-color, var(--md-sys-color-primary, #6750a4));--_label-container-height: var(--md-slider-label-container-height, 28px);--_pressed-handle-color: var(--md-slider-pressed-handle-color, var(--md-sys-color-primary, #6750a4));--_pressed-state-layer-color: var(--md-slider-pressed-state-layer-color, var(--md-sys-color-primary, #6750a4));--_pressed-state-layer-opacity: var(--md-slider-pressed-state-layer-opacity, 0.12);--_state-layer-size: var(--md-slider-state-layer-size, 40px);--_with-overlap-handle-outline-color: var(--md-slider-with-overlap-handle-outline-color, var(--md-sys-color-on-primary, #fff));--_with-overlap-handle-outline-width: var(--md-slider-with-overlap-handle-outline-width, 1px);--_with-tick-marks-active-container-color: var(--md-slider-with-tick-marks-active-container-color, var(--md-sys-color-on-primary, #fff));--_with-tick-marks-container-size: var(--md-slider-with-tick-marks-container-size, 2px);--_with-tick-marks-disabled-container-color: var(--md-slider-with-tick-marks-disabled-container-color, var(--md-sys-color-on-surface, #1d1b20));--_with-tick-marks-inactive-container-color: var(--md-slider-with-tick-marks-inactive-container-color, var(--md-sys-color-on-surface-variant, #49454f));--_label-text-color: var(--md-slider-label-text-color, var(--md-sys-color-on-primary, #fff));--_label-text-font: var(--md-slider-label-text-font, var(--md-sys-typescale-label-medium-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-slider-label-text-line-height, var(--md-sys-typescale-label-medium-line-height, 1rem));--_label-text-size: var(--md-slider-label-text-size, var(--md-sys-typescale-label-medium-size, 0.75rem));--_label-text-weight: var(--md-slider-label-text-weight, var(--md-sys-typescale-label-medium-weight, var(--md-ref-typeface-weight-medium, 500)));--_start-fraction: 0;--_end-fraction: 0;--_tick-count: 0;display:inline-flex;vertical-align:middle;min-inline-size:200px;--md-elevation-level: var(--_handle-elevation);--md-elevation-shadow-color: var(--_handle-shadow-color)}md-focus-ring{height:48px;inset:unset;width:48px}md-elevation{transition-duration:250ms}@media(prefers-reduced-motion){.label{transition-duration:0}}:host([disabled]){opacity:var(--_disabled-active-track-opacity);--md-elevation-level: var(--_disabled-handle-elevation)}.container{flex:1;display:flex;align-items:center;position:relative;block-size:var(--_state-layer-size);pointer-events:none;touch-action:none}.track,.tickmarks{position:absolute;inset:0;display:flex;align-items:center}.track::before,.tickmarks::before,.track::after,.tickmarks::after{position:absolute;content:\"\";inset-inline-start:calc(var(--_state-layer-size)/2 - var(--_with-tick-marks-container-size));inset-inline-end:calc(var(--_state-layer-size)/2 - var(--_with-tick-marks-container-size));background-size:calc((100% - var(--_with-tick-marks-container-size)*2)/var(--_tick-count)) 100%}.track::before,.tickmarks::before{block-size:var(--_inactive-track-height);border-radius:var(--_inactive-track-shape)}.track::before{background:var(--_inactive-track-color)}.tickmarks::before{background-image:radial-gradient(circle at var(--_with-tick-marks-container-size) center, var(--_with-tick-marks-inactive-container-color) 0, var(--_with-tick-marks-inactive-container-color) calc(var(--_with-tick-marks-container-size) / 2), transparent calc(var(--_with-tick-marks-container-size) / 2))}:host([disabled]) .track::before{opacity:calc(1/var(--_disabled-active-track-opacity)*var(--_disabled-inactive-track-opacity));background:var(--_disabled-inactive-track-color)}.track::after,.tickmarks::after{block-size:var(--_active-track-height);border-radius:var(--_active-track-shape);clip-path:inset(0 calc(var(--_with-tick-marks-container-size) * min((1 - var(--_end-fraction)) * 1000000000, 1) + (100% - var(--_with-tick-marks-container-size) * 2) * (1 - var(--_end-fraction))) 0 calc(var(--_with-tick-marks-container-size) * min(var(--_start-fraction) * 1000000000, 1) + (100% - var(--_with-tick-marks-container-size) * 2) * var(--_start-fraction)))}.track::after{background:var(--_active-track-color)}.tickmarks::after{background-image:radial-gradient(circle at var(--_with-tick-marks-container-size) center, var(--_with-tick-marks-active-container-color) 0, var(--_with-tick-marks-active-container-color) calc(var(--_with-tick-marks-container-size) / 2), transparent calc(var(--_with-tick-marks-container-size) / 2))}.track:dir(rtl)::after{clip-path:inset(0 calc(var(--_with-tick-marks-container-size) * min(var(--_start-fraction) * 1000000000, 1) + (100% - var(--_with-tick-marks-container-size) * 2) * var(--_start-fraction)) 0 calc(var(--_with-tick-marks-container-size) * min((1 - var(--_end-fraction)) * 1000000000, 1) + (100% - var(--_with-tick-marks-container-size) * 2) * (1 - var(--_end-fraction))))}.tickmarks:dir(rtl)::after{clip-path:inset(0 calc(var(--_with-tick-marks-container-size) * min(var(--_start-fraction) * 1000000000, 1) + (100% - var(--_with-tick-marks-container-size) * 2) * var(--_start-fraction)) 0 calc(var(--_with-tick-marks-container-size) * min((1 - var(--_end-fraction)) * 1000000000, 1) + (100% - var(--_with-tick-marks-container-size) * 2) * (1 - var(--_end-fraction))))}:host([disabled]) .track::after{background:var(--_disabled-active-track-color)}:host([disabled]) .tickmarks::before{background-image:radial-gradient(circle at var(--_with-tick-marks-container-size) center, var(--_with-tick-marks-disabled-container-color) 0, var(--_with-tick-marks-disabled-container-color) calc(var(--_with-tick-marks-container-size) / 2), transparent calc(var(--_with-tick-marks-container-size) / 2))}.handleContainerPadded{position:relative;block-size:100%;inline-size:100%;padding-inline:calc(var(--_state-layer-size)/2)}.handleContainerBlock{position:relative;block-size:100%;inline-size:100%}.handleContainer{position:absolute;inset-block-start:0;inset-block-end:0;inset-inline-start:calc(100%*var(--_start-fraction));inline-size:calc(100%*(var(--_end-fraction) - var(--_start-fraction)))}.handle{position:absolute;block-size:var(--_state-layer-size);inline-size:var(--_state-layer-size);border-radius:var(--_handle-shape);display:flex;place-content:center;place-items:center}.handleNub{position:absolute;height:var(--_handle-height);width:var(--_handle-width);border-radius:var(--_handle-shape);background:var(--_handle-color)}:host([disabled]) .handleNub{background:var(--_disabled-handle-color)}input.end:focus~.handleContainerPadded .handle.end>.handleNub,input.start:focus~.handleContainerPadded .handle.start>.handleNub{background:var(--_focus-handle-color)}.container>.handleContainerPadded .handle.hover>.handleNub{background:var(--_hover-handle-color)}:host(:not([disabled])) input.end:active~.handleContainerPadded .handle.end>.handleNub,:host(:not([disabled])) input.start:active~.handleContainerPadded .handle.start>.handleNub{background:var(--_pressed-handle-color)}.onTop.isOverlapping .label,.onTop.isOverlapping .label::before{outline:var(--_with-overlap-handle-outline-color) solid var(--_with-overlap-handle-outline-width)}.onTop.isOverlapping .handleNub{border:var(--_with-overlap-handle-outline-color) solid var(--_with-overlap-handle-outline-width)}.handle.start{inset-inline-start:calc(0px - var(--_state-layer-size)/2)}.handle.end{inset-inline-end:calc(0px - var(--_state-layer-size)/2)}.label{position:absolute;box-sizing:border-box;display:flex;padding:4px;place-content:center;place-items:center;border-radius:var(--md-sys-shape-corner-full, 9999px);color:var(--_label-text-color);font-family:var(--_label-text-font);font-size:var(--_label-text-size);line-height:var(--_label-text-line-height);font-weight:var(--_label-text-weight);inset-block-end:100%;min-inline-size:var(--_label-container-height);min-block-size:var(--_label-container-height);background:var(--_label-container-color);transition:transform 100ms cubic-bezier(0.2, 0, 0, 1);transform-origin:center bottom;transform:scale(0)}:host(:focus-within) .label,.handleContainer.hover .label,:where(:has(input:active)) .label{transform:scale(1)}.label::before,.label::after{position:absolute;display:block;content:\"\";background:inherit}.label::before{inline-size:calc(var(--_label-container-height)/2);block-size:calc(var(--_label-container-height)/2);bottom:calc(var(--_label-container-height)/-10);transform:rotate(45deg)}.label::after{inset:0px;border-radius:inherit}.labelContent{z-index:1}input[type=range]{opacity:0;-webkit-tap-highlight-color:rgba(0,0,0,0);position:absolute;box-sizing:border-box;height:100%;width:100%;margin:0;background:rgba(0,0,0,0);cursor:pointer;pointer-events:auto;appearance:none}input[type=range]:focus{outline:none}::-webkit-slider-runnable-track{-webkit-appearance:none}::-moz-range-track{appearance:none}::-webkit-slider-thumb{-webkit-appearance:none;appearance:none;block-size:var(--_handle-height);inline-size:var(--_handle-width);opacity:0;z-index:2}input.end::-webkit-slider-thumb{--_track-and-knob-padding: calc( (var(--_state-layer-size) - var(--_handle-width)) / 2 );--_x-translate: calc( var(--_track-and-knob-padding) - 2 * var(--_end-fraction) * var(--_track-and-knob-padding) );transform:translateX(var(--_x-translate))}input.end:dir(rtl)::-webkit-slider-thumb{transform:translateX(calc(-1 * var(--_x-translate)))}input.start::-webkit-slider-thumb{--_track-and-knob-padding: calc( (var(--_state-layer-size) - var(--_handle-width)) / 2 );--_x-translate: calc( var(--_track-and-knob-padding) - 2 * var(--_start-fraction) * var(--_track-and-knob-padding) );transform:translateX(var(--_x-translate))}input.start:dir(rtl)::-webkit-slider-thumb{transform:translateX(calc(-1 * var(--_x-translate)))}::-moz-range-thumb{appearance:none;block-size:var(--_state-layer-size);inline-size:var(--_state-layer-size);transform:scaleX(0);opacity:0;z-index:2}.ranged input.start{clip-path:inset(0 calc(100% - (var(--_state-layer-size) / 2 + (100% - var(--_state-layer-size)) * (var(--_start-fraction) + (var(--_end-fraction) - var(--_start-fraction)) / 2))) 0 0)}.ranged input.start:dir(rtl){clip-path:inset(0 0 0 calc(100% - (var(--_state-layer-size) / 2 + (100% - var(--_state-layer-size)) * (var(--_start-fraction) + (var(--_end-fraction) - var(--_start-fraction)) / 2))))}.ranged input.end{clip-path:inset(0 0 0 calc(var(--_state-layer-size) / 2 + (100% - var(--_state-layer-size)) * (var(--_start-fraction) + (var(--_end-fraction) - var(--_start-fraction)) / 2)))}.ranged input.end:dir(rtl){clip-path:inset(0 calc(var(--_state-layer-size) / 2 + (100% - var(--_state-layer-size)) * (var(--_start-fraction) + (var(--_end-fraction) - var(--_start-fraction)) / 2)) 0 0)}.onTop{z-index:1}.handle{--md-ripple-hover-color: var(--_hover-state-layer-color);--md-ripple-hover-opacity: var(--_hover-state-layer-opacity);--md-ripple-pressed-color: var(--_pressed-state-layer-color);--md-ripple-pressed-opacity: var(--_pressed-state-layer-opacity)}md-ripple{border-radius:50%;height:var(--_state-layer-size);width:var(--_state-layer-size)}\n`;\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { styles as forcedColorsStyles } from './internal/forced-colors-styles.js';\nimport { Slider } from './internal/slider.js';\nimport { styles } from './internal/slider-styles.js';\n/**\n * @summary Sliders allow users to view and select a value (or range) along\n * a track.\n *\n * @description\n * Changes made with sliders are immediate, allowing the user to make slider\n * adjustments while determining a selection. Sliders shouldn’t be used to\n * adjust settings with any delay in providing user feedback. Sliders reflect\n * the current state of the settings they control.\n *\n * __Example usages:__\n * - Sliders are ideal for adjusting settings such as volume and brightness, or\n * for applying image filters.\n *\n * @final\n * @suppress {visibility}\n */\nexport let MdSlider = class MdSlider extends Slider {\n};\nMdSlider.styles = [styles, forcedColorsStyles];\nMdSlider = __decorate([\n    customElement('md-slider')\n], MdSlider);\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * A symbol used to access dispatch hooks on an event.\n */\nconst dispatchHooks = Symbol('dispatchHooks');\n/**\n * Add a hook for an event that is called after the event is dispatched and\n * propagates to other event listeners.\n *\n * This is useful for behaviors that need to check if an event is canceled.\n *\n * The callback is invoked synchronously, which allows for better integration\n * with synchronous platform APIs (like `<form>` or `<label>` clicking).\n *\n * Note: `setupDispatchHooks()` must be called on the element before adding any\n * other event listeners. Call it in the constructor of an element or\n * controller.\n *\n * @example\n * ```ts\n * class MyControl extends LitElement {\n *   constructor() {\n *     super();\n *     setupDispatchHooks(this, 'click');\n *     this.addEventListener('click', event => {\n *       afterDispatch(event, () => {\n *         if (event.defaultPrevented) {\n *           return\n *         }\n *\n *         // ... perform logic\n *       });\n *     });\n *   }\n * }\n * ```\n *\n * @example\n * ```ts\n * class MyController implements ReactiveController {\n *   constructor(host: ReactiveElement) {\n *     // setupDispatchHooks() may be called multiple times for the same\n *     // element and events, making it safe for multiple controllers to use it.\n *     setupDispatchHooks(host, 'click');\n *     host.addEventListener('click', event => {\n *       afterDispatch(event, () => {\n *         if (event.defaultPrevented) {\n *           return;\n *         }\n *\n *         // ... perform logic\n *       });\n *     });\n *   }\n * }\n * ```\n *\n * @param event The event to add a hook to.\n * @param callback A hook that is called after the event finishes dispatching.\n */\nexport function afterDispatch(event, callback) {\n    const hooks = event[dispatchHooks];\n    if (!hooks) {\n        throw new Error(`'${event.type}' event needs setupDispatchHooks().`);\n    }\n    hooks.addEventListener('after', callback);\n}\n/**\n * A lookup map of elements and event types that have a dispatch hook listener\n * set up. Used to ensure we don't set up multiple hook listeners on the same\n * element for the same event.\n */\nconst ELEMENT_DISPATCH_HOOK_TYPES = new WeakMap();\n/**\n * Sets up an element to add dispatch hooks to given event types. This must be\n * called before adding any event listeners that need to use dispatch hooks\n * like `afterDispatch()`.\n *\n * This function is safe to call multiple times with the same element or event\n * types. Call it in the constructor of elements, mixins, and controllers to\n * ensure it is set up before external listeners.\n *\n * @example\n * ```ts\n * class MyControl extends LitElement {\n *   constructor() {\n *     super();\n *     setupDispatchHooks(this, 'click');\n *     this.addEventListener('click', this.listenerUsingAfterDispatch);\n *   }\n * }\n * ```\n *\n * @param element The element to set up event dispatch hooks for.\n * @param eventTypes The event types to add dispatch hooks to.\n */\nexport function setupDispatchHooks(element, ...eventTypes) {\n    let typesAlreadySetUp = ELEMENT_DISPATCH_HOOK_TYPES.get(element);\n    if (!typesAlreadySetUp) {\n        typesAlreadySetUp = new Set();\n        ELEMENT_DISPATCH_HOOK_TYPES.set(element, typesAlreadySetUp);\n    }\n    for (const eventType of eventTypes) {\n        // Don't register multiple dispatch hook listeners. A second registration\n        // would lead to the second listener re-dispatching a re-dispatched event,\n        // which can cause an infinite loop inside the other one.\n        if (typesAlreadySetUp.has(eventType)) {\n            continue;\n        }\n        // When we re-dispatch the event, it's going to immediately trigger this\n        // listener again. Use a flag to ignore it.\n        let isRedispatching = false;\n        element.addEventListener(eventType, (event) => {\n            if (isRedispatching) {\n                return;\n            }\n            // Do not let the event propagate to any other listener (not just\n            // bubbling listeners with `stopPropagation()`).\n            event.stopImmediatePropagation();\n            // Make a copy.\n            const eventCopy = Reflect.construct(event.constructor, [\n                event.type,\n                event,\n            ]);\n            // Add hooks onto the event.\n            const hooks = new EventTarget();\n            eventCopy[dispatchHooks] = hooks;\n            // Re-dispatch the event. We can't reuse `redispatchEvent()` since we\n            // need to add the hooks to the copy before it's dispatched.\n            isRedispatching = true;\n            const dispatched = element.dispatchEvent(eventCopy);\n            isRedispatching = false;\n            if (!dispatched) {\n                event.preventDefault();\n            }\n            // Synchronously call afterDispatch() hooks.\n            hooks.dispatchEvent(new Event('after'));\n        }, {\n            // Ensure this listener runs before other listeners.\n            // `setupDispatchHooks()` should be called in constructors to also\n            // ensure they run before any other externally-added capture listeners.\n            capture: true,\n        });\n        typesAlreadySetUp.add(eventType);\n    }\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport '../../focus/md-focus-ring.js';\nimport '../../ripple/ripple.js';\nimport { html, isServer, LitElement, nothing } from 'lit';\nimport { property, query } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { mixinDelegatesAria } from '../../internal/aria/delegate.js';\nimport { afterDispatch, setupDispatchHooks, } from '../../internal/events/dispatch-hooks.js';\nimport { dispatchActivationClick, isActivationClick, } from '../../internal/events/form-label-activation.js';\nimport { redispatchEvent } from '../../internal/events/redispatch-event.js';\nimport { createValidator, getValidityAnchor, mixinConstraintValidation, } from '../../labs/behaviors/constraint-validation.js';\nimport { mixinElementInternals } from '../../labs/behaviors/element-internals.js';\nimport { getFormState, getFormValue, mixinFormAssociated, } from '../../labs/behaviors/form-associated.js';\nimport { CheckboxValidator } from '../../labs/behaviors/validators/checkbox-validator.js';\n// Separate variable needed for closure.\nconst switchBaseClass = mixinDelegatesAria(mixinConstraintValidation(mixinFormAssociated(mixinElementInternals(LitElement))));\n/**\n * @fires input {InputEvent} Fired whenever `selected` changes due to user\n * interaction (bubbles and composed).\n * @fires change {Event} Fired whenever `selected` changes due to user\n * interaction (bubbles).\n */\nexport class Switch extends switchBaseClass {\n    constructor() {\n        super();\n        /**\n         * Puts the switch in the selected state and sets the form submission value to\n         * the `value` property.\n         */\n        this.selected = false;\n        /**\n         * Shows both the selected and deselected icons.\n         */\n        this.icons = false;\n        /**\n         * Shows only the selected icon, and not the deselected icon. If `true`,\n         * overrides the behavior of the `icons` property.\n         */\n        this.showOnlySelectedIcon = false;\n        /**\n         * When true, require the switch to be selected when participating in\n         * form submission.\n         *\n         * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#validation\n         */\n        this.required = false;\n        /**\n         * The value associated with this switch on form submission. `null` is\n         * submitted when `selected` is `false`.\n         */\n        this.value = 'on';\n        if (isServer) {\n            return;\n        }\n        // This click listener does not currently need dispatch hooks since it does\n        // not check `event.defaultPrevented`.\n        this.addEventListener('click', (event) => {\n            if (!isActivationClick(event) || !this.input) {\n                return;\n            }\n            this.focus();\n            dispatchActivationClick(this.input);\n        });\n        // Add the aria keyboard interaction pattern for switch and the Enter key.\n        // See https://www.w3.org/WAI/ARIA/apg/patterns/switch/.\n        setupDispatchHooks(this, 'keydown');\n        this.addEventListener('keydown', (event) => {\n            afterDispatch(event, () => {\n                const ignoreEvent = event.defaultPrevented || event.key !== 'Enter';\n                if (ignoreEvent || this.disabled || !this.input) {\n                    return;\n                }\n                this.input.click();\n            });\n        });\n    }\n    render() {\n        return html `\n      <div class=\"switch ${classMap(this.getRenderClasses())}\">\n        <input\n          id=\"switch\"\n          class=\"touch\"\n          type=\"checkbox\"\n          role=\"switch\"\n          aria-label=${this.ariaLabel || nothing}\n          ?checked=${this.selected}\n          ?disabled=${this.disabled}\n          ?required=${this.required}\n          @input=${this.handleInput}\n          @change=${this.handleChange} />\n\n        <md-focus-ring part=\"focus-ring\" for=\"switch\"></md-focus-ring>\n        <span class=\"track\"> ${this.renderHandle()} </span>\n      </div>\n    `;\n    }\n    getRenderClasses() {\n        return {\n            'selected': this.selected,\n            'unselected': !this.selected,\n            'disabled': this.disabled,\n        };\n    }\n    renderHandle() {\n        const classes = {\n            'with-icon': this.showOnlySelectedIcon ? this.selected : this.icons,\n        };\n        return html `\n      ${this.renderTouchTarget()}\n      <span class=\"handle-container\">\n        <md-ripple for=\"switch\" ?disabled=\"${this.disabled}\"></md-ripple>\n        <span class=\"handle ${classMap(classes)}\">\n          ${this.shouldShowIcons() ? this.renderIcons() : html ``}\n        </span>\n      </span>\n    `;\n    }\n    renderIcons() {\n        return html `\n      <div class=\"icons\">\n        ${this.renderOnIcon()}\n        ${this.showOnlySelectedIcon ? html `` : this.renderOffIcon()}\n      </div>\n    `;\n    }\n    /**\n     * https://fonts.google.com/icons?selected=Material%20Symbols%20Outlined%3Acheck%3AFILL%400%3Bwght%40500%3BGRAD%400%3Bopsz%4024\n     */\n    renderOnIcon() {\n        return html `\n      <slot class=\"icon icon--on\" name=\"on-icon\">\n        <svg viewBox=\"0 0 24 24\">\n          <path\n            d=\"M9.55 18.2 3.65 12.3 5.275 10.675 9.55 14.95 18.725 5.775 20.35 7.4Z\" />\n        </svg>\n      </slot>\n    `;\n    }\n    /**\n     * https://fonts.google.com/icons?selected=Material%20Symbols%20Outlined%3Aclose%3AFILL%400%3Bwght%40500%3BGRAD%400%3Bopsz%4024\n     */\n    renderOffIcon() {\n        return html `\n      <slot class=\"icon icon--off\" name=\"off-icon\">\n        <svg viewBox=\"0 0 24 24\">\n          <path\n            d=\"M6.4 19.2 4.8 17.6 10.4 12 4.8 6.4 6.4 4.8 12 10.4 17.6 4.8 19.2 6.4 13.6 12 19.2 17.6 17.6 19.2 12 13.6Z\" />\n        </svg>\n      </slot>\n    `;\n    }\n    renderTouchTarget() {\n        return html `<span class=\"touch\"></span>`;\n    }\n    shouldShowIcons() {\n        return this.icons || this.showOnlySelectedIcon;\n    }\n    handleInput(event) {\n        const target = event.target;\n        this.selected = target.checked;\n        // <input> 'input' event bubbles and is composed, don't re-dispatch it.\n    }\n    handleChange(event) {\n        // <input> 'change' event is not composed, re-dispatch it.\n        redispatchEvent(this, event);\n    }\n    [getFormValue]() {\n        return this.selected ? this.value : null;\n    }\n    [getFormState]() {\n        return String(this.selected);\n    }\n    formResetCallback() {\n        // The selected property does not reflect, so the original attribute set by\n        // the user is used to determine the default value.\n        this.selected = this.hasAttribute('selected');\n    }\n    formStateRestoreCallback(state) {\n        this.selected = state === 'true';\n    }\n    [createValidator]() {\n        return new CheckboxValidator(() => ({\n            checked: this.selected,\n            required: this.required,\n        }));\n    }\n    [getValidityAnchor]() {\n        return this.input;\n    }\n}\n/** @nocollapse */\nSwitch.shadowRootOptions = {\n    mode: 'open',\n    delegatesFocus: true,\n};\n__decorate([\n    property({ type: Boolean })\n], Switch.prototype, \"selected\", void 0);\n__decorate([\n    property({ type: Boolean })\n], Switch.prototype, \"icons\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'show-only-selected-icon' })\n], Switch.prototype, \"showOnlySelectedIcon\", void 0);\n__decorate([\n    property({ type: Boolean })\n], Switch.prototype, \"required\", void 0);\n__decorate([\n    property()\n], Switch.prototype, \"value\", void 0);\n__decorate([\n    query('input')\n], Switch.prototype, \"input\", void 0);\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./switch/internal/switch-styles.css.\nimport { css } from 'lit';\nexport const styles = css `@layer styles, hcm;@layer styles{:host{display:inline-flex;outline:none;vertical-align:top;-webkit-tap-highlight-color:rgba(0,0,0,0);cursor:pointer}:host([disabled]){cursor:default}:host([touch-target=wrapper]){margin:max(0px,(48px - var(--md-switch-track-height, 32px))/2) 0px}md-focus-ring{--md-focus-ring-shape-start-start: var(--md-switch-track-shape-start-start, var(--md-switch-track-shape, var(--md-sys-shape-corner-full, 9999px)));--md-focus-ring-shape-start-end: var(--md-switch-track-shape-start-end, var(--md-switch-track-shape, var(--md-sys-shape-corner-full, 9999px)));--md-focus-ring-shape-end-end: var(--md-switch-track-shape-end-end, var(--md-switch-track-shape, var(--md-sys-shape-corner-full, 9999px)));--md-focus-ring-shape-end-start: var(--md-switch-track-shape-end-start, var(--md-switch-track-shape, var(--md-sys-shape-corner-full, 9999px)))}.switch{align-items:center;display:inline-flex;flex-shrink:0;position:relative;width:var(--md-switch-track-width, 52px);height:var(--md-switch-track-height, 32px);border-start-start-radius:var(--md-switch-track-shape-start-start, var(--md-switch-track-shape, var(--md-sys-shape-corner-full, 9999px)));border-start-end-radius:var(--md-switch-track-shape-start-end, var(--md-switch-track-shape, var(--md-sys-shape-corner-full, 9999px)));border-end-end-radius:var(--md-switch-track-shape-end-end, var(--md-switch-track-shape, var(--md-sys-shape-corner-full, 9999px)));border-end-start-radius:var(--md-switch-track-shape-end-start, var(--md-switch-track-shape, var(--md-sys-shape-corner-full, 9999px)))}input{appearance:none;height:max(100%,var(--md-switch-touch-target-size, 48px));outline:none;margin:0;position:absolute;width:max(100%,var(--md-switch-touch-target-size, 48px));z-index:1;cursor:inherit;top:50%;left:50%;transform:translate(-50%, -50%)}:host([touch-target=none]) input{display:none}}@layer styles{.track{position:absolute;width:100%;height:100%;box-sizing:border-box;border-radius:inherit;display:flex;justify-content:center;align-items:center}.track::before{content:\"\";display:flex;position:absolute;height:100%;width:100%;border-radius:inherit;box-sizing:border-box;transition-property:opacity,background-color;transition-timing-function:linear;transition-duration:67ms}.disabled .track{background-color:rgba(0,0,0,0);border-color:rgba(0,0,0,0)}.disabled .track::before,.disabled .track::after{transition:none;opacity:var(--md-switch-disabled-track-opacity, 0.12)}.disabled .track::before{background-clip:content-box}.selected .track::before{background-color:var(--md-switch-selected-track-color, var(--md-sys-color-primary, #6750a4))}.selected:hover .track::before{background-color:var(--md-switch-selected-hover-track-color, var(--md-sys-color-primary, #6750a4))}.selected:focus-within .track::before{background-color:var(--md-switch-selected-focus-track-color, var(--md-sys-color-primary, #6750a4))}.selected:active .track::before{background-color:var(--md-switch-selected-pressed-track-color, var(--md-sys-color-primary, #6750a4))}.selected.disabled .track{background-clip:border-box}.selected.disabled .track::before{background-color:var(--md-switch-disabled-selected-track-color, var(--md-sys-color-on-surface, #1d1b20))}.unselected .track::before{background-color:var(--md-switch-track-color, var(--md-sys-color-surface-container-highest, #e6e0e9));border-color:var(--md-switch-track-outline-color, var(--md-sys-color-outline, #79747e));border-style:solid;border-width:var(--md-switch-track-outline-width, 2px)}.unselected:hover .track::before{background-color:var(--md-switch-hover-track-color, var(--md-sys-color-surface-container-highest, #e6e0e9));border-color:var(--md-switch-hover-track-outline-color, var(--md-sys-color-outline, #79747e))}.unselected:focus-visible .track::before{background-color:var(--md-switch-focus-track-color, var(--md-sys-color-surface-container-highest, #e6e0e9));border-color:var(--md-switch-focus-track-outline-color, var(--md-sys-color-outline, #79747e))}.unselected:active .track::before{background-color:var(--md-switch-pressed-track-color, var(--md-sys-color-surface-container-highest, #e6e0e9));border-color:var(--md-switch-pressed-track-outline-color, var(--md-sys-color-outline, #79747e))}.unselected.disabled .track::before{background-color:var(--md-switch-disabled-track-color, var(--md-sys-color-surface-container-highest, #e6e0e9));border-color:var(--md-switch-disabled-track-outline-color, var(--md-sys-color-on-surface, #1d1b20))}}@layer hcm{@media(forced-colors: active){.selected .track::before{background:ButtonText;border-color:ButtonText}.disabled .track::before{border-color:GrayText;opacity:1}.disabled.selected .track::before{background:GrayText}}}@layer styles{.handle-container{display:flex;place-content:center;place-items:center;position:relative;transition:margin 300ms cubic-bezier(0.175, 0.885, 0.32, 1.275)}.selected .handle-container{margin-inline-start:calc(var(--md-switch-track-width, 52px) - var(--md-switch-track-height, 32px))}.unselected .handle-container{margin-inline-end:calc(var(--md-switch-track-width, 52px) - var(--md-switch-track-height, 32px))}.disabled .handle-container{transition:none}.handle{border-start-start-radius:var(--md-switch-handle-shape-start-start, var(--md-switch-handle-shape, var(--md-sys-shape-corner-full, 9999px)));border-start-end-radius:var(--md-switch-handle-shape-start-end, var(--md-switch-handle-shape, var(--md-sys-shape-corner-full, 9999px)));border-end-end-radius:var(--md-switch-handle-shape-end-end, var(--md-switch-handle-shape, var(--md-sys-shape-corner-full, 9999px)));border-end-start-radius:var(--md-switch-handle-shape-end-start, var(--md-switch-handle-shape, var(--md-sys-shape-corner-full, 9999px)));height:var(--md-switch-handle-height, 16px);width:var(--md-switch-handle-width, 16px);transform-origin:center;transition-property:height,width;transition-duration:250ms,250ms;transition-timing-function:cubic-bezier(0.2, 0, 0, 1),cubic-bezier(0.2, 0, 0, 1);z-index:0}.handle::before{content:\"\";display:flex;inset:0;position:absolute;border-radius:inherit;box-sizing:border-box;transition:background-color 67ms linear}.disabled .handle,.disabled .handle::before{transition:none}.selected .handle{height:var(--md-switch-selected-handle-height, 24px);width:var(--md-switch-selected-handle-width, 24px)}.handle.with-icon{height:var(--md-switch-with-icon-handle-height, 24px);width:var(--md-switch-with-icon-handle-width, 24px)}.selected:not(.disabled):active .handle,.unselected:not(.disabled):active .handle{height:var(--md-switch-pressed-handle-height, 28px);width:var(--md-switch-pressed-handle-width, 28px);transition-timing-function:linear;transition-duration:100ms}.selected .handle::before{background-color:var(--md-switch-selected-handle-color, var(--md-sys-color-on-primary, #fff))}.selected:hover .handle::before{background-color:var(--md-switch-selected-hover-handle-color, var(--md-sys-color-primary-container, #eaddff))}.selected:focus-within .handle::before{background-color:var(--md-switch-selected-focus-handle-color, var(--md-sys-color-primary-container, #eaddff))}.selected:active .handle::before{background-color:var(--md-switch-selected-pressed-handle-color, var(--md-sys-color-primary-container, #eaddff))}.selected.disabled .handle::before{background-color:var(--md-switch-disabled-selected-handle-color, var(--md-sys-color-surface, #fef7ff));opacity:var(--md-switch-disabled-selected-handle-opacity, 1)}.unselected .handle::before{background-color:var(--md-switch-handle-color, var(--md-sys-color-outline, #79747e))}.unselected:hover .handle::before{background-color:var(--md-switch-hover-handle-color, var(--md-sys-color-on-surface-variant, #49454f))}.unselected:focus-within .handle::before{background-color:var(--md-switch-focus-handle-color, var(--md-sys-color-on-surface-variant, #49454f))}.unselected:active .handle::before{background-color:var(--md-switch-pressed-handle-color, var(--md-sys-color-on-surface-variant, #49454f))}.unselected.disabled .handle::before{background-color:var(--md-switch-disabled-handle-color, var(--md-sys-color-on-surface, #1d1b20));opacity:var(--md-switch-disabled-handle-opacity, 0.38)}md-ripple{border-radius:var(--md-switch-state-layer-shape, var(--md-sys-shape-corner-full, 9999px));height:var(--md-switch-state-layer-size, 40px);inset:unset;width:var(--md-switch-state-layer-size, 40px)}.selected md-ripple{--md-ripple-hover-color: var(--md-switch-selected-hover-state-layer-color, var(--md-sys-color-primary, #6750a4));--md-ripple-pressed-color: var(--md-switch-selected-pressed-state-layer-color, var(--md-sys-color-primary, #6750a4));--md-ripple-hover-opacity: var(--md-switch-selected-hover-state-layer-opacity, 0.08);--md-ripple-pressed-opacity: var(--md-switch-selected-pressed-state-layer-opacity, 0.12)}.unselected md-ripple{--md-ripple-hover-color: var(--md-switch-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--md-ripple-pressed-color: var(--md-switch-pressed-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--md-ripple-hover-opacity: var(--md-switch-hover-state-layer-opacity, 0.08);--md-ripple-pressed-opacity: var(--md-switch-pressed-state-layer-opacity, 0.12)}}@layer hcm{@media(forced-colors: active){.unselected .handle::before{background:ButtonText}.disabled .handle::before{opacity:1}.disabled.unselected .handle::before{background:GrayText}}}@layer styles{.icons{position:relative;height:100%;width:100%}.icon{position:absolute;inset:0;margin:auto;display:flex;align-items:center;justify-content:center;fill:currentColor;transition:fill 67ms linear,opacity 33ms linear,transform 167ms cubic-bezier(0.2, 0, 0, 1);opacity:0}.disabled .icon{transition:none}.selected .icon--on,.unselected .icon--off{opacity:1}.unselected .handle:not(.with-icon) .icon--on{transform:rotate(-45deg)}.icon--off{width:var(--md-switch-icon-size, 16px);height:var(--md-switch-icon-size, 16px);color:var(--md-switch-icon-color, var(--md-sys-color-surface-container-highest, #e6e0e9))}.unselected:hover .icon--off{color:var(--md-switch-hover-icon-color, var(--md-sys-color-surface-container-highest, #e6e0e9))}.unselected:focus-within .icon--off{color:var(--md-switch-focus-icon-color, var(--md-sys-color-surface-container-highest, #e6e0e9))}.unselected:active .icon--off{color:var(--md-switch-pressed-icon-color, var(--md-sys-color-surface-container-highest, #e6e0e9))}.unselected.disabled .icon--off{color:var(--md-switch-disabled-icon-color, var(--md-sys-color-surface-container-highest, #e6e0e9));opacity:var(--md-switch-disabled-icon-opacity, 0.38)}.icon--on{width:var(--md-switch-selected-icon-size, 16px);height:var(--md-switch-selected-icon-size, 16px);color:var(--md-switch-selected-icon-color, var(--md-sys-color-on-primary-container, #21005d))}.selected:hover .icon--on{color:var(--md-switch-selected-hover-icon-color, var(--md-sys-color-on-primary-container, #21005d))}.selected:focus-within .icon--on{color:var(--md-switch-selected-focus-icon-color, var(--md-sys-color-on-primary-container, #21005d))}.selected:active .icon--on{color:var(--md-switch-selected-pressed-icon-color, var(--md-sys-color-on-primary-container, #21005d))}.selected.disabled .icon--on{color:var(--md-switch-disabled-selected-icon-color, var(--md-sys-color-on-surface, #1d1b20));opacity:var(--md-switch-disabled-selected-icon-opacity, 0.38)}}@layer hcm{@media(forced-colors: active){.icon--off{fill:Canvas}.icon--on{fill:ButtonText}.disabled.unselected .icon--off,.disabled.selected .icon--on{opacity:1}.disabled .icon--on{fill:GrayText}}}\n`;\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { Switch } from './internal/switch.js';\nimport { styles } from './internal/switch-styles.js';\n/**\n * @summary Switches toggle the state of a single item on or off.\n *\n * @description\n * There's one type of switch in Material. Use this selection control when the\n * user needs to toggle a single item on or off.\n *\n * @final\n * @suppress {visibility}\n */\nexport let MdSwitch = class MdSwitch extends Switch {\n};\nMdSwitch.styles = [styles];\nMdSwitch = __decorate([\n    customElement('md-switch')\n], MdSwitch);\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nvar _a;\nimport { __decorate } from \"tslib\";\nimport '../../elevation/elevation.js';\nimport '../../focus/md-focus-ring.js';\nimport '../../ripple/ripple.js';\nimport { html, isServer, LitElement, nothing } from 'lit';\nimport { property, query, queryAssignedElements, queryAssignedNodes, state, } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { EASING } from '../../internal/motion/animation.js';\nimport { mixinFocusable } from '../../labs/behaviors/focusable.js';\n/**\n * Symbol for tabs to use to animate their indicators based off another tab's\n * indicator.\n */\nconst INDICATOR = Symbol('indicator');\n/**\n * Symbol used by the tab bar to request a tab to animate its indicator from a\n * previously selected tab.\n */\nexport const ANIMATE_INDICATOR = Symbol('animateIndicator');\n// Separate variable needed for closure.\nconst tabBaseClass = mixinFocusable(LitElement);\n/**\n * Tab component.\n */\nexport class Tab extends tabBaseClass {\n    /**\n     * @deprecated use `active`\n     */\n    get selected() {\n        return this.active;\n    }\n    set selected(active) {\n        this.active = active;\n    }\n    constructor() {\n        super();\n        /**\n         * The attribute `md-tab` indicates that the element is a tab for the parent\n         * element, `<md-tabs>`. Make sure if you're implementing your own `md-tab`\n         * component that you have an `md-tab` attribute set.\n         */\n        this.isTab = true;\n        /**\n         * Whether or not the tab is selected.\n         **/\n        this.active = false;\n        /**\n         * In SSR, set this to true when an icon is present.\n         */\n        this.hasIcon = false;\n        /**\n         * In SSR, set this to true when there is no label and only an icon.\n         */\n        this.iconOnly = false;\n        this.fullWidthIndicator = false;\n        this.internals = \n        // Cast needed for closure\n        this.attachInternals();\n        if (!isServer) {\n            this.internals.role = 'tab';\n            this.addEventListener('keydown', this.handleKeydown.bind(this));\n        }\n    }\n    render() {\n        const indicator = html `<div class=\"indicator\"></div>`;\n        return html `<div\n      class=\"button\"\n      role=\"presentation\"\n      @click=${this.handleContentClick}>\n      <md-focus-ring part=\"focus-ring\" inward .control=${this}></md-focus-ring>\n      <md-elevation part=\"elevation\"></md-elevation>\n      <md-ripple .control=${this}></md-ripple>\n      <div\n        class=\"content ${classMap(this.getContentClasses())}\"\n        role=\"presentation\">\n        <slot name=\"icon\" @slotchange=${this.handleIconSlotChange}></slot>\n        <slot @slotchange=${this.handleSlotChange}></slot>\n        ${this.fullWidthIndicator ? nothing : indicator}\n      </div>\n      ${this.fullWidthIndicator ? indicator : nothing}\n    </div>`;\n    }\n    getContentClasses() {\n        return {\n            'has-icon': this.hasIcon,\n            'has-label': !this.iconOnly,\n        };\n    }\n    updated() {\n        this.internals.ariaSelected = String(this.active);\n    }\n    async handleKeydown(event) {\n        // Allow event to bubble.\n        await 0;\n        if (event.defaultPrevented) {\n            return;\n        }\n        if (event.key === 'Enter' || event.key === ' ') {\n            // Prevent default behavior such as scrolling when pressing spacebar.\n            event.preventDefault();\n            this.click();\n        }\n    }\n    handleContentClick(event) {\n        // Ensure the \"click\" target is always the tab, and not content, by stopping\n        // propagation of content clicks and re-clicking the host.\n        event.stopPropagation();\n        this.click();\n    }\n    [(_a = INDICATOR, ANIMATE_INDICATOR)](previousTab) {\n        if (!this[INDICATOR]) {\n            return;\n        }\n        this[INDICATOR].getAnimations().forEach((a) => {\n            a.cancel();\n        });\n        const frames = this.getKeyframes(previousTab);\n        if (frames !== null) {\n            this[INDICATOR].animate(frames, {\n                duration: 250,\n                easing: EASING.EMPHASIZED,\n            });\n        }\n    }\n    getKeyframes(previousTab) {\n        const reduceMotion = shouldReduceMotion();\n        if (!this.active) {\n            return reduceMotion ? [{ 'opacity': 1 }, { 'transform': 'none' }] : null;\n        }\n        const from = {};\n        const fromRect = previousTab[INDICATOR]?.getBoundingClientRect() ?? {};\n        const fromPos = fromRect.left;\n        const fromExtent = fromRect.width;\n        const toRect = this[INDICATOR].getBoundingClientRect();\n        const toPos = toRect.left;\n        const toExtent = toRect.width;\n        const scale = fromExtent / toExtent;\n        if (!reduceMotion &&\n            fromPos !== undefined &&\n            toPos !== undefined &&\n            !isNaN(scale)) {\n            from['transform'] = `translateX(${(fromPos - toPos).toFixed(4)}px) scaleX(${scale.toFixed(4)})`;\n        }\n        else {\n            from['opacity'] = 0;\n        }\n        // note, including `transform: none` avoids quirky Safari behavior\n        // that can hide the animation.\n        return [from, { 'transform': 'none' }];\n    }\n    handleSlotChange() {\n        this.iconOnly = false;\n        // Check if there's any label text or elements. If not, then there is only\n        // an icon.\n        for (const node of this.assignedDefaultNodes) {\n            const hasTextContent = node.nodeType === Node.TEXT_NODE &&\n                !!node.wholeText.match(/\\S/);\n            if (node.nodeType === Node.ELEMENT_NODE || hasTextContent) {\n                return;\n            }\n        }\n        this.iconOnly = true;\n    }\n    handleIconSlotChange() {\n        this.hasIcon = this.assignedIcons.length > 0;\n    }\n}\n__decorate([\n    property({ type: Boolean, reflect: true, attribute: 'md-tab' })\n], Tab.prototype, \"isTab\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], Tab.prototype, \"active\", void 0);\n__decorate([\n    property({ type: Boolean })\n], Tab.prototype, \"selected\", null);\n__decorate([\n    property({ type: Boolean, attribute: 'has-icon' })\n], Tab.prototype, \"hasIcon\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'icon-only' })\n], Tab.prototype, \"iconOnly\", void 0);\n__decorate([\n    query('.indicator')\n], Tab.prototype, _a, void 0);\n__decorate([\n    state()\n], Tab.prototype, \"fullWidthIndicator\", void 0);\n__decorate([\n    queryAssignedNodes({ flatten: true })\n], Tab.prototype, \"assignedDefaultNodes\", void 0);\n__decorate([\n    queryAssignedElements({ slot: 'icon', flatten: true })\n], Tab.prototype, \"assignedIcons\", void 0);\nfunction shouldReduceMotion() {\n    return window.matchMedia('(prefers-reduced-motion: reduce)').matches;\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { property } from 'lit/decorators.js';\nimport { Tab } from './tab.js';\n/**\n * A primary tab component.\n */\nexport class PrimaryTab extends Tab {\n    constructor() {\n        super(...arguments);\n        /**\n         * Whether or not the icon renders inline with label or stacked vertically.\n         */\n        this.inlineIcon = false;\n    }\n    getContentClasses() {\n        return {\n            ...super.getContentClasses(),\n            'stacked': !this.inlineIcon,\n        };\n    }\n}\n__decorate([\n    property({ type: Boolean, attribute: 'inline-icon' })\n], PrimaryTab.prototype, \"inlineIcon\", void 0);\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./tabs/internal/primary-tab-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{--_active-indicator-color: var(--md-primary-tab-active-indicator-color, var(--md-sys-color-primary, #6750a4));--_active-indicator-height: var(--md-primary-tab-active-indicator-height, 3px);--_active-indicator-shape: var(--md-primary-tab-active-indicator-shape, 3px 3px 0px 0px);--_active-hover-state-layer-color: var(--md-primary-tab-active-hover-state-layer-color, var(--md-sys-color-primary, #6750a4));--_active-hover-state-layer-opacity: var(--md-primary-tab-active-hover-state-layer-opacity, 0.08);--_active-pressed-state-layer-color: var(--md-primary-tab-active-pressed-state-layer-color, var(--md-sys-color-primary, #6750a4));--_active-pressed-state-layer-opacity: var(--md-primary-tab-active-pressed-state-layer-opacity, 0.12);--_container-color: var(--md-primary-tab-container-color, var(--md-sys-color-surface, #fef7ff));--_container-elevation: var(--md-primary-tab-container-elevation, 0);--_container-height: var(--md-primary-tab-container-height, 48px);--_with-icon-and-label-text-container-height: var(--md-primary-tab-with-icon-and-label-text-container-height, 64px);--_hover-state-layer-color: var(--md-primary-tab-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-state-layer-opacity: var(--md-primary-tab-hover-state-layer-opacity, 0.08);--_pressed-state-layer-color: var(--md-primary-tab-pressed-state-layer-color, var(--md-sys-color-primary, #6750a4));--_pressed-state-layer-opacity: var(--md-primary-tab-pressed-state-layer-opacity, 0.12);--_active-focus-icon-color: var(--md-primary-tab-active-focus-icon-color, var(--md-sys-color-primary, #6750a4));--_active-hover-icon-color: var(--md-primary-tab-active-hover-icon-color, var(--md-sys-color-primary, #6750a4));--_active-icon-color: var(--md-primary-tab-active-icon-color, var(--md-sys-color-primary, #6750a4));--_active-pressed-icon-color: var(--md-primary-tab-active-pressed-icon-color, var(--md-sys-color-primary, #6750a4));--_icon-size: var(--md-primary-tab-icon-size, 24px);--_focus-icon-color: var(--md-primary-tab-focus-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-icon-color: var(--md-primary-tab-hover-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_icon-color: var(--md-primary-tab-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_pressed-icon-color: var(--md-primary-tab-pressed-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_label-text-font: var(--md-primary-tab-label-text-font, var(--md-sys-typescale-title-small-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-primary-tab-label-text-line-height, var(--md-sys-typescale-title-small-line-height, 1.25rem));--_label-text-size: var(--md-primary-tab-label-text-size, var(--md-sys-typescale-title-small-size, 0.875rem));--_label-text-weight: var(--md-primary-tab-label-text-weight, var(--md-sys-typescale-title-small-weight, var(--md-ref-typeface-weight-medium, 500)));--_active-focus-label-text-color: var(--md-primary-tab-active-focus-label-text-color, var(--md-sys-color-primary, #6750a4));--_active-hover-label-text-color: var(--md-primary-tab-active-hover-label-text-color, var(--md-sys-color-primary, #6750a4));--_active-label-text-color: var(--md-primary-tab-active-label-text-color, var(--md-sys-color-primary, #6750a4));--_active-pressed-label-text-color: var(--md-primary-tab-active-pressed-label-text-color, var(--md-sys-color-primary, #6750a4));--_focus-label-text-color: var(--md-primary-tab-focus-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-label-text-color: var(--md-primary-tab-hover-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_label-text-color: var(--md-primary-tab-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_pressed-label-text-color: var(--md-primary-tab-pressed-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_container-shape-start-start: var(--md-primary-tab-container-shape-start-start, var(--md-primary-tab-container-shape, var(--md-sys-shape-corner-none, 0px)));--_container-shape-start-end: var(--md-primary-tab-container-shape-start-end, var(--md-primary-tab-container-shape, var(--md-sys-shape-corner-none, 0px)));--_container-shape-end-end: var(--md-primary-tab-container-shape-end-end, var(--md-primary-tab-container-shape, var(--md-sys-shape-corner-none, 0px)));--_container-shape-end-start: var(--md-primary-tab-container-shape-end-start, var(--md-primary-tab-container-shape, var(--md-sys-shape-corner-none, 0px)))}.content.stacked{flex-direction:column;gap:2px}.content.stacked.has-icon.has-label{height:var(--_with-icon-and-label-text-container-height)}\n`;\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./tabs/internal/tab-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{display:inline-flex;align-items:center;justify-content:center;outline:none;padding:0 16px;position:relative;-webkit-tap-highlight-color:rgba(0,0,0,0);vertical-align:middle;user-select:none;font-family:var(--_label-text-font);font-size:var(--_label-text-size);line-height:var(--_label-text-line-height);font-weight:var(--_label-text-weight);color:var(--_label-text-color);z-index:0;--md-ripple-hover-color: var(--_hover-state-layer-color);--md-ripple-hover-opacity: var(--_hover-state-layer-opacity);--md-ripple-pressed-color: var(--_pressed-state-layer-color);--md-ripple-pressed-opacity: var(--_pressed-state-layer-opacity);--md-elevation-level: var(--_container-elevation)}md-focus-ring{--md-focus-ring-shape: 8px}:host([active]) md-focus-ring{margin-bottom:calc(var(--_active-indicator-height) + 1px)}.button::before{background:var(--_container-color);content:\"\";inset:0;position:absolute;z-index:-1}.button::before,md-ripple,md-elevation{border-start-start-radius:var(--_container-shape-start-start);border-start-end-radius:var(--_container-shape-start-end);border-end-end-radius:var(--_container-shape-end-end);border-end-start-radius:var(--_container-shape-end-start)}.content{position:relative;box-sizing:border-box;display:inline-flex;flex-direction:row;align-items:center;justify-content:center;height:var(--_container-height);gap:8px}.indicator{position:absolute;box-sizing:border-box;z-index:-1;transform-origin:bottom left;background:var(--_active-indicator-color);border-radius:var(--_active-indicator-shape);height:var(--_active-indicator-height);inset:auto 0 0 0;opacity:0}::slotted([slot=icon]){display:inline-flex;position:relative;writing-mode:horizontal-tb;fill:currentColor;color:var(--_icon-color);font-size:var(--_icon-size);width:var(--_icon-size);height:var(--_icon-size)}:host(:hover){color:var(--_hover-label-text-color);cursor:pointer}:host(:hover) ::slotted([slot=icon]){color:var(--_hover-icon-color)}:host(:focus){color:var(--_focus-label-text-color)}:host(:focus) ::slotted([slot=icon]){color:var(--_focus-icon-color)}:host(:active){color:var(--_pressed-label-text-color)}:host(:active) ::slotted([slot=icon]){color:var(--_pressed-icon-color)}:host([active]) .indicator{opacity:1}:host([active]){color:var(--_active-label-text-color);--md-ripple-hover-color: var(--_active-hover-state-layer-color);--md-ripple-hover-opacity: var(--_active-hover-state-layer-opacity);--md-ripple-pressed-color: var(--_active-pressed-state-layer-color);--md-ripple-pressed-opacity: var(--_active-pressed-state-layer-opacity)}:host([active]) ::slotted([slot=icon]){color:var(--_active-icon-color)}:host([active]:hover){color:var(--_active-hover-label-text-color)}:host([active]:hover) ::slotted([slot=icon]){color:var(--_active-hover-icon-color)}:host([active]:focus){color:var(--_active-focus-label-text-color)}:host([active]:focus) ::slotted([slot=icon]){color:var(--_active-focus-icon-color)}:host([active]:active){color:var(--_active-pressed-label-text-color)}:host([active]:active) ::slotted([slot=icon]){color:var(--_active-pressed-icon-color)}:host,::slotted(*){white-space:nowrap}@media(forced-colors: active){.indicator{background:CanvasText}}\n`;\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { PrimaryTab } from './internal/primary-tab.js';\nimport { styles as primaryStyles } from './internal/primary-tab-styles.js';\nimport { styles as sharedStyles } from './internal/tab-styles.js';\n// TODO(b/267336507): add docs\n/**\n * @summary Tab allow users to display a tab within a Tabs.\n *\n * @final\n * @suppress {visibility}\n */\nexport let MdPrimaryTab = class MdPrimaryTab extends PrimaryTab {\n};\nMdPrimaryTab.styles = [sharedStyles, primaryStyles];\nMdPrimaryTab = __decorate([\n    customElement('md-primary-tab')\n], MdPrimaryTab);\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { Tab } from './tab.js';\n/**\n * A secondary tab component.\n */\nexport class SecondaryTab extends Tab {\n    constructor() {\n        super(...arguments);\n        this.fullWidthIndicator = true;\n    }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./tabs/internal/secondary-tab-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{--_active-indicator-color: var(--md-secondary-tab-active-indicator-color, var(--md-sys-color-primary, #6750a4));--_active-indicator-height: var(--md-secondary-tab-active-indicator-height, 2px);--_active-label-text-color: var(--md-secondary-tab-active-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_container-color: var(--md-secondary-tab-container-color, var(--md-sys-color-surface, #fef7ff));--_container-elevation: var(--md-secondary-tab-container-elevation, 0);--_container-height: var(--md-secondary-tab-container-height, 48px);--_focus-label-text-color: var(--md-secondary-tab-focus-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-label-text-color: var(--md-secondary-tab-hover-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-state-layer-color: var(--md-secondary-tab-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-state-layer-opacity: var(--md-secondary-tab-hover-state-layer-opacity, 0.08);--_label-text-font: var(--md-secondary-tab-label-text-font, var(--md-sys-typescale-title-small-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-secondary-tab-label-text-line-height, var(--md-sys-typescale-title-small-line-height, 1.25rem));--_label-text-size: var(--md-secondary-tab-label-text-size, var(--md-sys-typescale-title-small-size, 0.875rem));--_label-text-weight: var(--md-secondary-tab-label-text-weight, var(--md-sys-typescale-title-small-weight, var(--md-ref-typeface-weight-medium, 500)));--_pressed-label-text-color: var(--md-secondary-tab-pressed-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_pressed-state-layer-color: var(--md-secondary-tab-pressed-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_pressed-state-layer-opacity: var(--md-secondary-tab-pressed-state-layer-opacity, 0.12);--_active-focus-icon-color: var(--md-secondary-tab-active-focus-icon-color, );--_active-focus-label-text-color: var(--md-secondary-tab-active-focus-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_active-hover-icon-color: var(--md-secondary-tab-active-hover-icon-color, );--_active-hover-label-text-color: var(--md-secondary-tab-active-hover-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_active-hover-state-layer-color: var(--md-secondary-tab-active-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_active-hover-state-layer-opacity: var(--md-secondary-tab-active-hover-state-layer-opacity, 0.08);--_active-icon-color: var(--md-secondary-tab-active-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_active-indicator-shape: var(--md-secondary-tab-active-indicator-shape, 0);--_active-pressed-icon-color: var(--md-secondary-tab-active-pressed-icon-color, );--_active-pressed-label-text-color: var(--md-secondary-tab-active-pressed-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_active-pressed-state-layer-color: var(--md-secondary-tab-active-pressed-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_active-pressed-state-layer-opacity: var(--md-secondary-tab-active-pressed-state-layer-opacity, 0.12);--_label-text-color: var(--md-secondary-tab-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_focus-icon-color: var(--md-secondary-tab-focus-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-icon-color: var(--md-secondary-tab-hover-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_icon-size: var(--md-secondary-tab-icon-size, 24px);--_icon-color: var(--md-secondary-tab-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_pressed-icon-color: var(--md-secondary-tab-pressed-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_container-shape-start-start: var(--md-secondary-tab-container-shape-start-start, var(--md-secondary-tab-container-shape, var(--md-sys-shape-corner-none, 0px)));--_container-shape-start-end: var(--md-secondary-tab-container-shape-start-end, var(--md-secondary-tab-container-shape, var(--md-sys-shape-corner-none, 0px)));--_container-shape-end-end: var(--md-secondary-tab-container-shape-end-end, var(--md-secondary-tab-container-shape, var(--md-sys-shape-corner-none, 0px)));--_container-shape-end-start: var(--md-secondary-tab-container-shape-end-start, var(--md-secondary-tab-container-shape, var(--md-sys-shape-corner-none, 0px)))}\n`;\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { SecondaryTab } from './internal/secondary-tab.js';\nimport { styles as secondaryStyles } from './internal/secondary-tab-styles.js';\nimport { styles as sharedStyles } from './internal/tab-styles.js';\n// TODO(b/267336507): add docs\n/**\n * @summary Tab allow users to display a tab within a Tabs.\n *\n * @final\n * @suppress {visibility}\n */\nexport let MdSecondaryTab = class MdSecondaryTab extends SecondaryTab {\n};\nMdSecondaryTab.styles = [sharedStyles, secondaryStyles];\nMdSecondaryTab = __decorate([\n    customElement('md-secondary-tab')\n], MdSecondaryTab);\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport '../../divider/divider.js';\nimport { html, isServer, LitElement } from 'lit';\nimport { property, query, queryAssignedElements } from 'lit/decorators.js';\nimport { ANIMATE_INDICATOR } from './tab.js';\n/**\n * @fires change {Event} Fired when the selected tab changes. The target's\n * `activeTabIndex` or `activeTab` provide information about the selection\n * change. The change event is fired when a user interaction like a space/enter\n * key or click cause a selection change. The tab selection based on these\n * actions can be cancelled by calling preventDefault on the triggering\n * `keydown` or `click` event. --bubbles\n *\n * @example\n * // perform an action if a tab is clicked\n * tabs.addEventListener('change', (event: Event) => {\n *   if (event.target.activeTabIndex === 2)\n *     takeAction();\n *   }\n * });\n *\n * // prevent a click from triggering tab selection under some condition\n * tabs.addEventListener('click', (event: Event) => {\n *   if (notReady)\n *     event.preventDefault();\n *   }\n * });\n *\n */\nexport class Tabs extends LitElement {\n    /**\n     * The currently selected tab, `null` only when there are no tab children.\n     *\n     * @export\n     */\n    get activeTab() {\n        return this.tabs.find((tab) => tab.active) ?? null;\n    }\n    set activeTab(tab) {\n        // Ignore setting activeTab to null. As long as there are children, one tab\n        // must be selected.\n        if (tab) {\n            this.activateTab(tab);\n        }\n    }\n    /**\n     * The index of the currently selected tab.\n     *\n     * @export\n     */\n    get activeTabIndex() {\n        return this.tabs.findIndex((tab) => tab.active);\n    }\n    set activeTabIndex(index) {\n        const activateTabAtIndex = () => {\n            const tab = this.tabs[index];\n            // Ignore out-of-bound indices.\n            if (tab) {\n                this.activateTab(tab);\n            }\n        };\n        if (!this.slotElement) {\n            // This is needed to support setting the activeTabIndex via a lit property\n            // binding.\n            //\n            // ```ts\n            // html`\n            //   <md-tabs .activeTabIndex=${1}>\n            //     <md-tab>First</md-tab>\n            //     <md-tab>Second</md-tab>\n            //   </md-tabs>\n            // `;\n            // ```\n            //\n            // It's needed since lit's rendering lifecycle is asynchronous, and the\n            // `<slot>` element hasn't rendered, so `tabs` is empty.\n            this.updateComplete.then(activateTabAtIndex);\n            return;\n        }\n        activateTabAtIndex();\n    }\n    get focusedTab() {\n        return this.tabs.find((tab) => tab.matches(':focus-within'));\n    }\n    constructor() {\n        super();\n        /**\n         * Whether or not to automatically select a tab when it is focused.\n         */\n        this.autoActivate = false;\n        this.internals = \n        // Cast needed for closure\n        this.attachInternals();\n        if (!isServer) {\n            this.internals.role = 'tablist';\n            this.addEventListener('keydown', this.handleKeydown.bind(this));\n            this.addEventListener('keyup', this.handleKeyup.bind(this));\n            this.addEventListener('focusout', this.handleFocusout.bind(this));\n        }\n    }\n    /**\n     * Scrolls the toolbar, if overflowing, to the active tab, or the provided\n     * tab.\n     *\n     * @param tabToScrollTo The tab that should be scrolled to. Defaults to the\n     *     active tab.\n     * @return A Promise that resolves after the tab has been scrolled to.\n     */\n    async scrollToTab(tabToScrollTo) {\n        await this.updateComplete;\n        const { tabs } = this;\n        tabToScrollTo ??= this.activeTab;\n        if (!tabToScrollTo ||\n            !tabs.includes(tabToScrollTo) ||\n            !this.tabsScrollerElement) {\n            return;\n        }\n        // wait for tabs to render.\n        for (const tab of this.tabs) {\n            await tab.updateComplete;\n        }\n        const offset = tabToScrollTo.offsetLeft;\n        const extent = tabToScrollTo.offsetWidth;\n        const scroll = this.scrollLeft;\n        const hostExtent = this.offsetWidth;\n        const scrollMargin = 48;\n        const min = offset - scrollMargin;\n        const max = offset + extent - hostExtent + scrollMargin;\n        const to = Math.min(min, Math.max(max, scroll));\n        // When a tab is focused, use 'auto' to use the CSS `scroll-behavior`. The\n        // default behavior is smooth scrolling. However, when there is not a tab\n        // focused on initialization, use 'instant' to immediately bring the focused\n        // tab into view.\n        const behavior = !this.focusedTab ? 'instant' : 'auto';\n        this.tabsScrollerElement.scrollTo({ behavior, top: 0, left: to });\n    }\n    render() {\n        return html `\n      <div class=\"tabs\">\n        <slot\n          @slotchange=${this.handleSlotChange}\n          @click=${this.handleTabClick}></slot>\n      </div>\n      <md-divider part=\"divider\"></md-divider>\n    `;\n    }\n    async handleTabClick(event) {\n        const tab = event.target;\n        // Allow event to bubble\n        await 0;\n        if (event.defaultPrevented || !isTab(tab) || tab.active) {\n            return;\n        }\n        this.activateTab(tab);\n    }\n    activateTab(activeTab) {\n        const { tabs } = this;\n        const previousTab = this.activeTab;\n        if (!tabs.includes(activeTab) || previousTab === activeTab) {\n            // Ignore setting activeTab to a tab element that is not a child.\n            return;\n        }\n        for (const tab of tabs) {\n            tab.active = tab === activeTab;\n        }\n        if (previousTab) {\n            // Don't dispatch a change event if activating a tab when no previous tabs\n            // were selected, such as when md-tabs auto-selects the first tab.\n            const defaultPrevented = !this.dispatchEvent(new Event('change', { bubbles: true, cancelable: true }));\n            if (defaultPrevented) {\n                for (const tab of tabs) {\n                    tab.active = tab === previousTab;\n                }\n                return;\n            }\n            activeTab[ANIMATE_INDICATOR](previousTab);\n        }\n        this.updateFocusableTab(activeTab);\n        this.scrollToTab(activeTab);\n    }\n    updateFocusableTab(focusableTab) {\n        for (const tab of this.tabs) {\n            tab.tabIndex = tab === focusableTab ? 0 : -1;\n        }\n    }\n    // focus item on keydown and optionally select it\n    async handleKeydown(event) {\n        // Allow event to bubble.\n        await 0;\n        const isLeft = event.key === 'ArrowLeft';\n        const isRight = event.key === 'ArrowRight';\n        const isHome = event.key === 'Home';\n        const isEnd = event.key === 'End';\n        // Ignore non-navigation keys\n        if (event.defaultPrevented || (!isLeft && !isRight && !isHome && !isEnd)) {\n            return;\n        }\n        const { tabs } = this;\n        // Don't try to select another tab if there aren't any.\n        if (tabs.length < 2) {\n            return;\n        }\n        // Prevent default interactions, such as scrolling.\n        event.preventDefault();\n        let indexToFocus;\n        if (isHome || isEnd) {\n            indexToFocus = isHome ? 0 : tabs.length - 1;\n        }\n        else {\n            // Check if moving forwards or backwards\n            const isRtl = getComputedStyle(this).direction === 'rtl';\n            const forwards = isRtl ? isLeft : isRight;\n            const { focusedTab } = this;\n            if (!focusedTab) {\n                // If there is not already a tab focused, select the first or last tab\n                // based on the direction we're traveling.\n                indexToFocus = forwards ? 0 : tabs.length - 1;\n            }\n            else {\n                const focusedIndex = this.tabs.indexOf(focusedTab);\n                indexToFocus = forwards ? focusedIndex + 1 : focusedIndex - 1;\n                if (indexToFocus >= tabs.length) {\n                    // Return to start if moving past the last item.\n                    indexToFocus = 0;\n                }\n                else if (indexToFocus < 0) {\n                    // Go to end if moving before the first item.\n                    indexToFocus = tabs.length - 1;\n                }\n            }\n        }\n        const tabToFocus = tabs[indexToFocus];\n        tabToFocus.focus();\n        if (this.autoActivate) {\n            this.activateTab(tabToFocus);\n        }\n        else {\n            this.updateFocusableTab(tabToFocus);\n        }\n    }\n    // scroll to item on keyup.\n    handleKeyup() {\n        this.scrollToTab(this.focusedTab ?? this.activeTab);\n    }\n    handleFocusout() {\n        // restore focus to selected item when blurring the tab bar.\n        if (this.matches(':focus-within')) {\n            return;\n        }\n        const { activeTab } = this;\n        if (activeTab) {\n            this.updateFocusableTab(activeTab);\n        }\n    }\n    handleSlotChange() {\n        const firstTab = this.tabs[0];\n        if (!this.activeTab && firstTab) {\n            // If the active tab was removed, auto-select the first one. There should\n            // always be a selected tab while the bar has children.\n            this.activateTab(firstTab);\n        }\n        // When children shift, ensure the active tab is visible. For example, if\n        // many children are added before the active tab, it'd be pushed off screen.\n        // This ensures it stays visible.\n        this.scrollToTab(this.activeTab);\n    }\n}\n__decorate([\n    queryAssignedElements({ flatten: true, selector: '[md-tab]' })\n], Tabs.prototype, \"tabs\", void 0);\n__decorate([\n    property({ type: Number, attribute: 'active-tab-index' })\n], Tabs.prototype, \"activeTabIndex\", null);\n__decorate([\n    property({ type: Boolean, attribute: 'auto-activate' })\n], Tabs.prototype, \"autoActivate\", void 0);\n__decorate([\n    query('.tabs')\n], Tabs.prototype, \"tabsScrollerElement\", void 0);\n__decorate([\n    query('slot')\n], Tabs.prototype, \"slotElement\", void 0);\nfunction isTab(element) {\n    return element instanceof HTMLElement && element.hasAttribute('md-tab');\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./tabs/internal/tabs-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{box-sizing:border-box;display:flex;flex-direction:column;overflow:auto;scroll-behavior:smooth;scrollbar-width:none;position:relative}:host([hidden]){display:none}:host::-webkit-scrollbar{display:none}.tabs{align-items:end;display:flex;height:100%;overflow:inherit;scroll-behavior:inherit;scrollbar-width:inherit;justify-content:space-between;width:100%}::slotted(*){flex:1}::slotted([active]){z-index:1}\n`;\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { Tabs } from './internal/tabs.js';\nimport { styles } from './internal/tabs-styles.js';\n// TODO(b/267336507): add docs\n/**\n * @summary Tabs displays a list of selectable tabs.\n *\n * @final\n * @suppress {visibility}\n */\nexport let MdTabs = class MdTabs extends Tabs {\n};\nMdTabs.styles = [styles];\nMdTabs = __decorate([\n    customElement('md-tabs')\n], MdTabs);\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./textfield/internal/filled-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{--_active-indicator-color: var(--md-filled-text-field-active-indicator-color, var(--md-sys-color-on-surface-variant, #49454f));--_active-indicator-height: var(--md-filled-text-field-active-indicator-height, 1px);--_caret-color: var(--md-filled-text-field-caret-color, var(--md-sys-color-primary, #6750a4));--_container-color: var(--md-filled-text-field-container-color, var(--md-sys-color-surface-container-highest, #e6e0e9));--_disabled-active-indicator-color: var(--md-filled-text-field-disabled-active-indicator-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-active-indicator-height: var(--md-filled-text-field-disabled-active-indicator-height, 1px);--_disabled-active-indicator-opacity: var(--md-filled-text-field-disabled-active-indicator-opacity, 0.38);--_disabled-container-color: var(--md-filled-text-field-disabled-container-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-container-opacity: var(--md-filled-text-field-disabled-container-opacity, 0.04);--_disabled-input-text-color: var(--md-filled-text-field-disabled-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-input-text-opacity: var(--md-filled-text-field-disabled-input-text-opacity, 0.38);--_disabled-label-text-color: var(--md-filled-text-field-disabled-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-label-text-opacity: var(--md-filled-text-field-disabled-label-text-opacity, 0.38);--_disabled-leading-icon-color: var(--md-filled-text-field-disabled-leading-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-leading-icon-opacity: var(--md-filled-text-field-disabled-leading-icon-opacity, 0.38);--_disabled-supporting-text-color: var(--md-filled-text-field-disabled-supporting-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-supporting-text-opacity: var(--md-filled-text-field-disabled-supporting-text-opacity, 0.38);--_disabled-trailing-icon-color: var(--md-filled-text-field-disabled-trailing-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-trailing-icon-opacity: var(--md-filled-text-field-disabled-trailing-icon-opacity, 0.38);--_error-active-indicator-color: var(--md-filled-text-field-error-active-indicator-color, var(--md-sys-color-error, #b3261e));--_error-focus-active-indicator-color: var(--md-filled-text-field-error-focus-active-indicator-color, var(--md-sys-color-error, #b3261e));--_error-focus-caret-color: var(--md-filled-text-field-error-focus-caret-color, var(--md-sys-color-error, #b3261e));--_error-focus-input-text-color: var(--md-filled-text-field-error-focus-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_error-focus-label-text-color: var(--md-filled-text-field-error-focus-label-text-color, var(--md-sys-color-error, #b3261e));--_error-focus-leading-icon-color: var(--md-filled-text-field-error-focus-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_error-focus-supporting-text-color: var(--md-filled-text-field-error-focus-supporting-text-color, var(--md-sys-color-error, #b3261e));--_error-focus-trailing-icon-color: var(--md-filled-text-field-error-focus-trailing-icon-color, var(--md-sys-color-error, #b3261e));--_error-hover-active-indicator-color: var(--md-filled-text-field-error-hover-active-indicator-color, var(--md-sys-color-on-error-container, #410e0b));--_error-hover-input-text-color: var(--md-filled-text-field-error-hover-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_error-hover-label-text-color: var(--md-filled-text-field-error-hover-label-text-color, var(--md-sys-color-on-error-container, #410e0b));--_error-hover-leading-icon-color: var(--md-filled-text-field-error-hover-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_error-hover-state-layer-color: var(--md-filled-text-field-error-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_error-hover-state-layer-opacity: var(--md-filled-text-field-error-hover-state-layer-opacity, 0.08);--_error-hover-supporting-text-color: var(--md-filled-text-field-error-hover-supporting-text-color, var(--md-sys-color-error, #b3261e));--_error-hover-trailing-icon-color: var(--md-filled-text-field-error-hover-trailing-icon-color, var(--md-sys-color-on-error-container, #410e0b));--_error-input-text-color: var(--md-filled-text-field-error-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_error-label-text-color: var(--md-filled-text-field-error-label-text-color, var(--md-sys-color-error, #b3261e));--_error-leading-icon-color: var(--md-filled-text-field-error-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_error-supporting-text-color: var(--md-filled-text-field-error-supporting-text-color, var(--md-sys-color-error, #b3261e));--_error-trailing-icon-color: var(--md-filled-text-field-error-trailing-icon-color, var(--md-sys-color-error, #b3261e));--_focus-active-indicator-color: var(--md-filled-text-field-focus-active-indicator-color, var(--md-sys-color-primary, #6750a4));--_focus-active-indicator-height: var(--md-filled-text-field-focus-active-indicator-height, 3px);--_focus-input-text-color: var(--md-filled-text-field-focus-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_focus-label-text-color: var(--md-filled-text-field-focus-label-text-color, var(--md-sys-color-primary, #6750a4));--_focus-leading-icon-color: var(--md-filled-text-field-focus-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_focus-supporting-text-color: var(--md-filled-text-field-focus-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_focus-trailing-icon-color: var(--md-filled-text-field-focus-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-active-indicator-color: var(--md-filled-text-field-hover-active-indicator-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-active-indicator-height: var(--md-filled-text-field-hover-active-indicator-height, 1px);--_hover-input-text-color: var(--md-filled-text-field-hover-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-label-text-color: var(--md-filled-text-field-hover-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-leading-icon-color: var(--md-filled-text-field-hover-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-state-layer-color: var(--md-filled-text-field-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-state-layer-opacity: var(--md-filled-text-field-hover-state-layer-opacity, 0.08);--_hover-supporting-text-color: var(--md-filled-text-field-hover-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-trailing-icon-color: var(--md-filled-text-field-hover-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_input-text-color: var(--md-filled-text-field-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_input-text-font: var(--md-filled-text-field-input-text-font, var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto)));--_input-text-line-height: var(--md-filled-text-field-input-text-line-height, var(--md-sys-typescale-body-large-line-height, 1.5rem));--_input-text-placeholder-color: var(--md-filled-text-field-input-text-placeholder-color, var(--md-sys-color-on-surface-variant, #49454f));--_input-text-prefix-color: var(--md-filled-text-field-input-text-prefix-color, var(--md-sys-color-on-surface-variant, #49454f));--_input-text-size: var(--md-filled-text-field-input-text-size, var(--md-sys-typescale-body-large-size, 1rem));--_input-text-suffix-color: var(--md-filled-text-field-input-text-suffix-color, var(--md-sys-color-on-surface-variant, #49454f));--_input-text-weight: var(--md-filled-text-field-input-text-weight, var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400)));--_label-text-color: var(--md-filled-text-field-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_label-text-font: var(--md-filled-text-field-label-text-font, var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-filled-text-field-label-text-line-height, var(--md-sys-typescale-body-large-line-height, 1.5rem));--_label-text-populated-line-height: var(--md-filled-text-field-label-text-populated-line-height, var(--md-sys-typescale-body-small-line-height, 1rem));--_label-text-populated-size: var(--md-filled-text-field-label-text-populated-size, var(--md-sys-typescale-body-small-size, 0.75rem));--_label-text-size: var(--md-filled-text-field-label-text-size, var(--md-sys-typescale-body-large-size, 1rem));--_label-text-weight: var(--md-filled-text-field-label-text-weight, var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400)));--_leading-icon-color: var(--md-filled-text-field-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_leading-icon-size: var(--md-filled-text-field-leading-icon-size, 24px);--_supporting-text-color: var(--md-filled-text-field-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_supporting-text-font: var(--md-filled-text-field-supporting-text-font, var(--md-sys-typescale-body-small-font, var(--md-ref-typeface-plain, Roboto)));--_supporting-text-line-height: var(--md-filled-text-field-supporting-text-line-height, var(--md-sys-typescale-body-small-line-height, 1rem));--_supporting-text-size: var(--md-filled-text-field-supporting-text-size, var(--md-sys-typescale-body-small-size, 0.75rem));--_supporting-text-weight: var(--md-filled-text-field-supporting-text-weight, var(--md-sys-typescale-body-small-weight, var(--md-ref-typeface-weight-regular, 400)));--_trailing-icon-color: var(--md-filled-text-field-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_trailing-icon-size: var(--md-filled-text-field-trailing-icon-size, 24px);--_container-shape-start-start: var(--md-filled-text-field-container-shape-start-start, var(--md-filled-text-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)));--_container-shape-start-end: var(--md-filled-text-field-container-shape-start-end, var(--md-filled-text-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)));--_container-shape-end-end: var(--md-filled-text-field-container-shape-end-end, var(--md-filled-text-field-container-shape, var(--md-sys-shape-corner-none, 0px)));--_container-shape-end-start: var(--md-filled-text-field-container-shape-end-start, var(--md-filled-text-field-container-shape, var(--md-sys-shape-corner-none, 0px)));--_icon-input-space: var(--md-filled-text-field-icon-input-space, 16px);--_leading-space: var(--md-filled-text-field-leading-space, 16px);--_trailing-space: var(--md-filled-text-field-trailing-space, 16px);--_top-space: var(--md-filled-text-field-top-space, 16px);--_bottom-space: var(--md-filled-text-field-bottom-space, 16px);--_input-text-prefix-trailing-space: var(--md-filled-text-field-input-text-prefix-trailing-space, 2px);--_input-text-suffix-leading-space: var(--md-filled-text-field-input-text-suffix-leading-space, 2px);--_with-label-top-space: var(--md-filled-text-field-with-label-top-space, 8px);--_with-label-bottom-space: var(--md-filled-text-field-with-label-bottom-space, 8px);--_focus-caret-color: var(--md-filled-text-field-focus-caret-color, var(--md-sys-color-primary, #6750a4));--_with-leading-icon-leading-space: var(--md-filled-text-field-with-leading-icon-leading-space, 12px);--_with-trailing-icon-trailing-space: var(--md-filled-text-field-with-trailing-icon-trailing-space, 12px);--md-filled-field-active-indicator-color: var(--_active-indicator-color);--md-filled-field-active-indicator-height: var(--_active-indicator-height);--md-filled-field-bottom-space: var(--_bottom-space);--md-filled-field-container-color: var(--_container-color);--md-filled-field-container-shape-end-end: var(--_container-shape-end-end);--md-filled-field-container-shape-end-start: var(--_container-shape-end-start);--md-filled-field-container-shape-start-end: var(--_container-shape-start-end);--md-filled-field-container-shape-start-start: var(--_container-shape-start-start);--md-filled-field-content-color: var(--_input-text-color);--md-filled-field-content-font: var(--_input-text-font);--md-filled-field-content-line-height: var(--_input-text-line-height);--md-filled-field-content-size: var(--_input-text-size);--md-filled-field-content-space: var(--_icon-input-space);--md-filled-field-content-weight: var(--_input-text-weight);--md-filled-field-disabled-active-indicator-color: var(--_disabled-active-indicator-color);--md-filled-field-disabled-active-indicator-height: var(--_disabled-active-indicator-height);--md-filled-field-disabled-active-indicator-opacity: var(--_disabled-active-indicator-opacity);--md-filled-field-disabled-container-color: var(--_disabled-container-color);--md-filled-field-disabled-container-opacity: var(--_disabled-container-opacity);--md-filled-field-disabled-content-color: var(--_disabled-input-text-color);--md-filled-field-disabled-content-opacity: var(--_disabled-input-text-opacity);--md-filled-field-disabled-label-text-color: var(--_disabled-label-text-color);--md-filled-field-disabled-label-text-opacity: var(--_disabled-label-text-opacity);--md-filled-field-disabled-leading-content-color: var(--_disabled-leading-icon-color);--md-filled-field-disabled-leading-content-opacity: var(--_disabled-leading-icon-opacity);--md-filled-field-disabled-supporting-text-color: var(--_disabled-supporting-text-color);--md-filled-field-disabled-supporting-text-opacity: var(--_disabled-supporting-text-opacity);--md-filled-field-disabled-trailing-content-color: var(--_disabled-trailing-icon-color);--md-filled-field-disabled-trailing-content-opacity: var(--_disabled-trailing-icon-opacity);--md-filled-field-error-active-indicator-color: var(--_error-active-indicator-color);--md-filled-field-error-content-color: var(--_error-input-text-color);--md-filled-field-error-focus-active-indicator-color: var(--_error-focus-active-indicator-color);--md-filled-field-error-focus-content-color: var(--_error-focus-input-text-color);--md-filled-field-error-focus-label-text-color: var(--_error-focus-label-text-color);--md-filled-field-error-focus-leading-content-color: var(--_error-focus-leading-icon-color);--md-filled-field-error-focus-supporting-text-color: var(--_error-focus-supporting-text-color);--md-filled-field-error-focus-trailing-content-color: var(--_error-focus-trailing-icon-color);--md-filled-field-error-hover-active-indicator-color: var(--_error-hover-active-indicator-color);--md-filled-field-error-hover-content-color: var(--_error-hover-input-text-color);--md-filled-field-error-hover-label-text-color: var(--_error-hover-label-text-color);--md-filled-field-error-hover-leading-content-color: var(--_error-hover-leading-icon-color);--md-filled-field-error-hover-state-layer-color: var(--_error-hover-state-layer-color);--md-filled-field-error-hover-state-layer-opacity: var(--_error-hover-state-layer-opacity);--md-filled-field-error-hover-supporting-text-color: var(--_error-hover-supporting-text-color);--md-filled-field-error-hover-trailing-content-color: var(--_error-hover-trailing-icon-color);--md-filled-field-error-label-text-color: var(--_error-label-text-color);--md-filled-field-error-leading-content-color: var(--_error-leading-icon-color);--md-filled-field-error-supporting-text-color: var(--_error-supporting-text-color);--md-filled-field-error-trailing-content-color: var(--_error-trailing-icon-color);--md-filled-field-focus-active-indicator-color: var(--_focus-active-indicator-color);--md-filled-field-focus-active-indicator-height: var(--_focus-active-indicator-height);--md-filled-field-focus-content-color: var(--_focus-input-text-color);--md-filled-field-focus-label-text-color: var(--_focus-label-text-color);--md-filled-field-focus-leading-content-color: var(--_focus-leading-icon-color);--md-filled-field-focus-supporting-text-color: var(--_focus-supporting-text-color);--md-filled-field-focus-trailing-content-color: var(--_focus-trailing-icon-color);--md-filled-field-hover-active-indicator-color: var(--_hover-active-indicator-color);--md-filled-field-hover-active-indicator-height: var(--_hover-active-indicator-height);--md-filled-field-hover-content-color: var(--_hover-input-text-color);--md-filled-field-hover-label-text-color: var(--_hover-label-text-color);--md-filled-field-hover-leading-content-color: var(--_hover-leading-icon-color);--md-filled-field-hover-state-layer-color: var(--_hover-state-layer-color);--md-filled-field-hover-state-layer-opacity: var(--_hover-state-layer-opacity);--md-filled-field-hover-supporting-text-color: var(--_hover-supporting-text-color);--md-filled-field-hover-trailing-content-color: var(--_hover-trailing-icon-color);--md-filled-field-label-text-color: var(--_label-text-color);--md-filled-field-label-text-font: var(--_label-text-font);--md-filled-field-label-text-line-height: var(--_label-text-line-height);--md-filled-field-label-text-populated-line-height: var(--_label-text-populated-line-height);--md-filled-field-label-text-populated-size: var(--_label-text-populated-size);--md-filled-field-label-text-size: var(--_label-text-size);--md-filled-field-label-text-weight: var(--_label-text-weight);--md-filled-field-leading-content-color: var(--_leading-icon-color);--md-filled-field-leading-space: var(--_leading-space);--md-filled-field-supporting-text-color: var(--_supporting-text-color);--md-filled-field-supporting-text-font: var(--_supporting-text-font);--md-filled-field-supporting-text-line-height: var(--_supporting-text-line-height);--md-filled-field-supporting-text-size: var(--_supporting-text-size);--md-filled-field-supporting-text-weight: var(--_supporting-text-weight);--md-filled-field-top-space: var(--_top-space);--md-filled-field-trailing-content-color: var(--_trailing-icon-color);--md-filled-field-trailing-space: var(--_trailing-space);--md-filled-field-with-label-bottom-space: var(--_with-label-bottom-space);--md-filled-field-with-label-top-space: var(--_with-label-top-space);--md-filled-field-with-leading-content-leading-space: var(--_with-leading-icon-leading-space);--md-filled-field-with-trailing-content-trailing-space: var(--_with-trailing-icon-trailing-space)}\n`;\n", "/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport { _$LH, } from './lit-html.js';\nconst { _ChildPart: ChildPart } = _$LH;\nconst ENABLE_SHADYDOM_NOPATCH = true;\nconst wrap = ENABLE_SHADYDOM_NOPATCH &&\n    window.ShadyDOM?.inUse &&\n    window.ShadyDOM?.noPatch === true\n    ? window.ShadyDOM.wrap\n    : (node) => node;\n/**\n * Tests if a value is a primitive value.\n *\n * See https://tc39.github.io/ecma262/#sec-typeof-operator\n */\nexport const isPrimitive = (value) => value === null || (typeof value != 'object' && typeof value != 'function');\nexport const TemplateResultType = {\n    HTML: 1,\n    SVG: 2,\n    MATHML: 3,\n};\n/**\n * Tests if a value is a TemplateResult or a CompiledTemplateResult.\n */\nexport const isTemplateResult = (value, type) => type === undefined\n    ? // This property needs to remain unminified.\n        value?.['_$litType$'] !== undefined\n    : value?.['_$litType$'] === type;\n/**\n * Tests if a value is a CompiledTemplateResult.\n */\nexport const isCompiledTemplateResult = (value) => {\n    return value?.['_$litType$']?.h != null;\n};\n/**\n * Tests if a value is a DirectiveResult.\n */\nexport const isDirectiveResult = (value) => \n// This property needs to remain unminified.\nvalue?.['_$litDirective$'] !== undefined;\n/**\n * Retrieves the Directive class for a DirectiveResult\n */\nexport const getDirectiveClass = (value) => \n// This property needs to remain unminified.\nvalue?.['_$litDirective$'];\n/**\n * Tests whether a part has only a single-expression with no strings to\n * interpolate between.\n *\n * Only AttributePart and PropertyPart can have multiple expressions.\n * Multi-expression parts have a `strings` property and single-expression\n * parts do not.\n */\nexport const isSingleExpression = (part) => part.strings === undefined;\nconst createMarker = () => document.createComment('');\n/**\n * Inserts a ChildPart into the given container ChildPart's DOM, either at the\n * end of the container ChildPart, or before the optional `refPart`.\n *\n * This does not add the part to the containerPart's committed value. That must\n * be done by callers.\n *\n * @param containerPart Part within which to add the new ChildPart\n * @param refPart Part before which to add the new ChildPart; when omitted the\n *     part added to the end of the `containerPart`\n * @param part Part to insert, or undefined to create a new part\n */\nexport const insertPart = (containerPart, refPart, part) => {\n    const container = wrap(containerPart._$startNode).parentNode;\n    const refNode = refPart === undefined ? containerPart._$endNode : refPart._$startNode;\n    if (part === undefined) {\n        const startNode = wrap(container).insertBefore(createMarker(), refNode);\n        const endNode = wrap(container).insertBefore(createMarker(), refNode);\n        part = new ChildPart(startNode, endNode, containerPart, containerPart.options);\n    }\n    else {\n        const endNode = wrap(part._$endNode).nextSibling;\n        const oldParent = part._$parent;\n        const parentChanged = oldParent !== containerPart;\n        if (parentChanged) {\n            part._$reparentDisconnectables?.(containerPart);\n            // Note that although `_$reparentDisconnectables` updates the part's\n            // `_$parent` reference after unlinking from its current parent, that\n            // method only exists if Disconnectables are present, so we need to\n            // unconditionally set it here\n            part._$parent = containerPart;\n            // Since the _$isConnected getter is somewhat costly, only\n            // read it once we know the subtree has directives that need\n            // to be notified\n            let newConnectionState;\n            if (part._$notifyConnectionChanged !== undefined &&\n                (newConnectionState = containerPart._$isConnected) !==\n                    oldParent._$isConnected) {\n                part._$notifyConnectionChanged(newConnectionState);\n            }\n        }\n        if (endNode !== refNode || parentChanged) {\n            let start = part._$startNode;\n            while (start !== endNode) {\n                const n = wrap(start).nextSibling;\n                wrap(container).insertBefore(start, refNode);\n                start = n;\n            }\n        }\n    }\n    return part;\n};\n/**\n * Sets the value of a Part.\n *\n * Note that this should only be used to set/update the value of user-created\n * parts (i.e. those created using `insertPart`); it should not be used\n * by directives to set the value of the directive's container part. Directives\n * should return a value from `update`/`render` to update their part state.\n *\n * For directives that require setting their part value asynchronously, they\n * should extend `AsyncDirective` and call `this.setValue()`.\n *\n * @param part Part to set\n * @param value Value to set\n * @param index For `AttributePart`s, the index to set\n * @param directiveParent Used internally; should not be set by user\n */\nexport const setChildPartValue = (part, value, directiveParent = part) => {\n    part._$setValue(value, directiveParent);\n    return part;\n};\n// A sentinel value that can never appear as a part value except when set by\n// live(). Used to force a dirty-check to fail and cause a re-render.\nconst RESET_VALUE = {};\n/**\n * Sets the committed value of a ChildPart directly without triggering the\n * commit stage of the part.\n *\n * This is useful in cases where a directive needs to update the part such\n * that the next update detects a value change or not. When value is omitted,\n * the next update will be guaranteed to be detected as a change.\n *\n * @param part\n * @param value\n */\nexport const setCommittedValue = (part, value = RESET_VALUE) => (part._$committedValue = value);\n/**\n * Returns the committed value of a ChildPart.\n *\n * The committed value is used for change detection and efficient updates of\n * the part. It can differ from the value set by the template or directive in\n * cases where the template value is transformed before being committed.\n *\n * - `TemplateResult`s are committed as a `TemplateInstance`\n * - Iterables are committed as `Array<ChildPart>`\n * - All other types are committed as the template value or value returned or\n *   set by a directive.\n *\n * @param part\n */\nexport const getCommittedValue = (part) => part._$committedValue;\n/**\n * Removes a ChildPart from the DOM, including any of its content.\n *\n * @param part The Part to remove\n */\nexport const removePart = (part) => {\n    part._$notifyConnectionChanged?.(false, true);\n    let start = part._$startNode;\n    const end = wrap(part._$endNode).nextSibling;\n    while (start !== end) {\n        const n = wrap(start).nextSibling;\n        wrap(start).remove();\n        start = n;\n    }\n};\nexport const clearPart = (part) => {\n    part._$clear();\n};\n", "/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport { noChange, nothing } from '../lit-html.js';\nimport { directive, Directive, PartType, } from '../directive.js';\nimport { isSingleExpression, setCommittedValue } from '../directive-helpers.js';\nclass LiveDirective extends Directive {\n    constructor(partInfo) {\n        super(partInfo);\n        if (!(partInfo.type === PartType.PROPERTY ||\n            partInfo.type === PartType.ATTRIBUTE ||\n            partInfo.type === PartType.BOOLEAN_ATTRIBUTE)) {\n            throw new Error('The `live` directive is not allowed on child or event bindings');\n        }\n        if (!isSingleExpression(partInfo)) {\n            throw new Error('`live` bindings can only contain a single expression');\n        }\n    }\n    render(value) {\n        return value;\n    }\n    update(part, [value]) {\n        if (value === noChange || value === nothing) {\n            return value;\n        }\n        const element = part.element;\n        const name = part.name;\n        if (part.type === PartType.PROPERTY) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            if (value === element[name]) {\n                return noChange;\n            }\n        }\n        else if (part.type === PartType.BOOLEAN_ATTRIBUTE) {\n            if (!!value === element.hasAttribute(name)) {\n                return noChange;\n            }\n        }\n        else if (part.type === PartType.ATTRIBUTE) {\n            if (element.getAttribute(name) === String(value)) {\n                return noChange;\n            }\n        }\n        // Resets the part's value, causing its dirty-check to fail so that it\n        // always sets the value.\n        setCommittedValue(part);\n        return value;\n    }\n}\n/**\n * Checks binding values against live DOM values, instead of previously bound\n * values, when determining whether to update the value.\n *\n * This is useful for cases where the DOM value may change from outside of\n * lit-html, such as with a binding to an `<input>` element's `value` property,\n * a content editable elements text, or to a custom element that changes it's\n * own properties or attributes.\n *\n * In these cases if the DOM value changes, but the value set through lit-html\n * bindings hasn't, lit-html won't know to update the DOM value and will leave\n * it alone. If this is not what you want--if you want to overwrite the DOM\n * value with the bound value no matter what--use the `live()` directive:\n *\n * ```js\n * html`<input .value=${live(x)}>`\n * ```\n *\n * `live()` performs a strict equality check against the live DOM value, and if\n * the new value is equal to the live value, does nothing. This means that\n * `live()` should not be used when the binding will cause a type conversion. If\n * you use `live()` with an attribute binding, make sure that only strings are\n * passed in, or the binding will update every render.\n */\nexport const live = directive(LiveDirective);\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nexport const stringConverter = {\n    fromAttribute(value) {\n        return value ?? '';\n    },\n    toAttribute(value) {\n        return value || null;\n    },\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { Validator } from './validator.js';\n/**\n * A validator that provides constraint validation that emulates `<input>` and\n * `<textarea>` validation.\n */\nexport class TextFieldValidator extends Validator {\n    computeValidity({ state, renderedControl }) {\n        let inputOrTextArea = renderedControl;\n        if (isInputState(state) && !inputOrTextArea) {\n            // Get cached <input> or create it.\n            inputOrTextArea = this.inputControl || document.createElement('input');\n            // Cache the <input> to re-use it next time.\n            this.inputControl = inputOrTextArea;\n        }\n        else if (!inputOrTextArea) {\n            // Get cached <textarea> or create it.\n            inputOrTextArea =\n                this.textAreaControl || document.createElement('textarea');\n            // Cache the <textarea> to re-use it next time.\n            this.textAreaControl = inputOrTextArea;\n        }\n        // Set this variable so we can check it for input-specific properties.\n        const input = isInputState(state)\n            ? inputOrTextArea\n            : null;\n        // Set input's \"type\" first, since this can change the other properties\n        if (input) {\n            input.type = state.type;\n        }\n        if (inputOrTextArea.value !== state.value) {\n            // Only programmatically set the value if there's a difference. When using\n            // the rendered control, the value will always be up to date. Setting the\n            // property (even if it's the same string) will reset the internal <input>\n            // dirty flag, making minlength and maxlength validation reset.\n            inputOrTextArea.value = state.value;\n        }\n        inputOrTextArea.required = state.required;\n        // The following IDLAttribute properties will always hydrate an attribute,\n        // even if set to a the default value ('' or -1). The presence of the\n        // attribute triggers constraint validation, so we must remove the attribute\n        // when empty.\n        if (input) {\n            const inputState = state;\n            if (inputState.pattern) {\n                input.pattern = inputState.pattern;\n            }\n            else {\n                input.removeAttribute('pattern');\n            }\n            if (inputState.min) {\n                input.min = inputState.min;\n            }\n            else {\n                input.removeAttribute('min');\n            }\n            if (inputState.max) {\n                input.max = inputState.max;\n            }\n            else {\n                input.removeAttribute('max');\n            }\n            if (inputState.step) {\n                input.step = inputState.step;\n            }\n            else {\n                input.removeAttribute('step');\n            }\n        }\n        // Use -1 to represent no minlength and maxlength, which is what the\n        // platform input returns. However, it will throw an error if you try to\n        // manually set it to -1.\n        //\n        // While the type is `number`, it may actually be `null` at runtime.\n        // `null > -1` is true since `null` coerces to `0`, so we default null and\n        // undefined to -1.\n        //\n        // We set attributes instead of properties since setting a property may\n        // throw an out of bounds error in relation to the other property.\n        // Attributes will not throw errors while the state is updating.\n        if ((state.minLength ?? -1) > -1) {\n            inputOrTextArea.setAttribute('minlength', String(state.minLength));\n        }\n        else {\n            inputOrTextArea.removeAttribute('minlength');\n        }\n        if ((state.maxLength ?? -1) > -1) {\n            inputOrTextArea.setAttribute('maxlength', String(state.maxLength));\n        }\n        else {\n            inputOrTextArea.removeAttribute('maxlength');\n        }\n        return {\n            validity: inputOrTextArea.validity,\n            validationMessage: inputOrTextArea.validationMessage,\n        };\n    }\n    equals({ state: prev }, { state: next }) {\n        // Check shared input and textarea properties\n        const inputOrTextAreaEqual = prev.type === next.type &&\n            prev.value === next.value &&\n            prev.required === next.required &&\n            prev.minLength === next.minLength &&\n            prev.maxLength === next.maxLength;\n        if (!isInputState(prev) || !isInputState(next)) {\n            // Both are textareas, all relevant properties are equal.\n            return inputOrTextAreaEqual;\n        }\n        // Check additional input-specific properties.\n        return (inputOrTextAreaEqual &&\n            prev.pattern === next.pattern &&\n            prev.min === next.min &&\n            prev.max === next.max &&\n            prev.step === next.step);\n    }\n    copy({ state }) {\n        // Don't hold a reference to the rendered control when copying since we\n        // don't use it when checking if the state changed.\n        return {\n            state: isInputState(state)\n                ? this.copyInput(state)\n                : this.copyTextArea(state),\n            renderedControl: null,\n        };\n    }\n    copyInput(state) {\n        const { type, pattern, min, max, step } = state;\n        return {\n            ...this.copySharedState(state),\n            type,\n            pattern,\n            min,\n            max,\n            step,\n        };\n    }\n    copyTextArea(state) {\n        return {\n            ...this.copySharedState(state),\n            type: state.type,\n        };\n    }\n    copySharedState({ value, required, minLength, maxLength, }) {\n        return { value, required, minLength, maxLength };\n    }\n}\nfunction isInputState(state) {\n    return state.type !== 'textarea';\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { LitElement, html, nothing } from 'lit';\nimport { property, query, queryAssignedElements, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { live } from 'lit/directives/live.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { html as staticHtml } from 'lit/static-html.js';\nimport { mixinDelegatesAria } from '../../internal/aria/delegate.js';\nimport { stringConverter } from '../../internal/controller/string-converter.js';\nimport { redispatchEvent } from '../../internal/events/redispatch-event.js';\nimport { createValidator, getValidityAnchor, mixinConstraintValidation, } from '../../labs/behaviors/constraint-validation.js';\nimport { mixinElementInternals } from '../../labs/behaviors/element-internals.js';\nimport { getFormValue, mixinFormAssociated, } from '../../labs/behaviors/form-associated.js';\nimport { mixinOnReportValidity, onReportValidity, } from '../../labs/behaviors/on-report-validity.js';\nimport { TextFieldValidator } from '../../labs/behaviors/validators/text-field-validator.js';\n// Separate variable needed for closure.\nconst textFieldBaseClass = mixinDelegatesAria(mixinOnReportValidity(mixinConstraintValidation(mixinFormAssociated(mixinElementInternals(LitElement)))));\n/**\n * A text field component.\n *\n * @fires select {Event} The native `select` event on\n * [`<input>`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/select_event)\n * --bubbles\n * @fires change {Event} The native `change` event on\n * [`<input>`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event)\n * --bubbles\n * @fires input {InputEvent} The native `input` event on\n * [`<input>`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event)\n * --bubbles --composed\n */\nexport class TextField extends textFieldBaseClass {\n    constructor() {\n        super(...arguments);\n        /**\n         * Gets or sets whether or not the text field is in a visually invalid state.\n         *\n         * This error state overrides the error state controlled by\n         * `reportValidity()`.\n         */\n        this.error = false;\n        /**\n         * The error message that replaces supporting text when `error` is true. If\n         * `errorText` is an empty string, then the supporting text will continue to\n         * show.\n         *\n         * This error message overrides the error message displayed by\n         * `reportValidity()`.\n         */\n        this.errorText = '';\n        /**\n         * The floating Material label of the textfield component. It informs the user\n         * about what information is requested for a text field. It is aligned with\n         * the input text, is always visible, and it floats when focused or when text\n         * is entered into the textfield. This label also sets accessibilty labels,\n         * but the accessible label is overriden by `aria-label`.\n         *\n         * Learn more about floating labels from the Material Design guidelines:\n         * https://m3.material.io/components/text-fields/guidelines\n         */\n        this.label = '';\n        /**\n         * Disables the asterisk on the floating label, when the text field is\n         * required.\n         */\n        this.noAsterisk = false;\n        /**\n         * Indicates that the user must specify a value for the input before the\n         * owning form can be submitted and will render an error state when\n         * `reportValidity()` is invoked when value is empty. Additionally the\n         * floating label will render an asterisk `\"*\"` when true.\n         *\n         * https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/required\n         */\n        this.required = false;\n        /**\n         * The current value of the text field. It is always a string.\n         */\n        this.value = '';\n        /**\n         * An optional prefix to display before the input value.\n         */\n        this.prefixText = '';\n        /**\n         * An optional suffix to display after the input value.\n         */\n        this.suffixText = '';\n        /**\n         * Whether or not the text field has a leading icon. Used for SSR.\n         */\n        this.hasLeadingIcon = false;\n        /**\n         * Whether or not the text field has a trailing icon. Used for SSR.\n         */\n        this.hasTrailingIcon = false;\n        /**\n         * Conveys additional information below the text field, such as how it should\n         * be used.\n         */\n        this.supportingText = '';\n        /**\n         * Override the input text CSS `direction`. Useful for RTL languages that use\n         * LTR notation for fractions.\n         */\n        this.textDirection = '';\n        /**\n         * The number of rows to display for a `type=\"textarea\"` text field.\n         * Defaults to 2.\n         */\n        this.rows = 2;\n        /**\n         * The number of cols to display for a `type=\"textarea\"` text field.\n         * Defaults to 20.\n         */\n        this.cols = 20;\n        // <input> properties\n        this.inputMode = '';\n        /**\n         * Defines the greatest value in the range of permitted values.\n         *\n         * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#max\n         */\n        this.max = '';\n        /**\n         * The maximum number of characters a user can enter into the text field. Set\n         * to -1 for none.\n         *\n         * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#maxlength\n         */\n        this.maxLength = -1;\n        /**\n         * Defines the most negative value in the range of permitted values.\n         *\n         * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#min\n         */\n        this.min = '';\n        /**\n         * The minimum number of characters a user can enter into the text field. Set\n         * to -1 for none.\n         *\n         * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#minlength\n         */\n        this.minLength = -1;\n        /**\n         * When true, hide the spinner for `type=\"number\"` text fields.\n         */\n        this.noSpinner = false;\n        /**\n         * A regular expression that the text field's value must match to pass\n         * constraint validation.\n         *\n         * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#pattern\n         */\n        this.pattern = '';\n        /**\n         * Defines the text displayed in the textfield when it has no value. Provides\n         * a brief hint to the user as to the expected type of data that should be\n         * entered into the control. Unlike `label`, the placeholder is not visible\n         * and does not float when the textfield has a value.\n         *\n         * https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/placeholder\n         */\n        this.placeholder = '';\n        /**\n         * Indicates whether or not a user should be able to edit the text field's\n         * value.\n         *\n         * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#readonly\n         */\n        this.readOnly = false;\n        /**\n         * Indicates that input accepts multiple email addresses.\n         *\n         * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/email#multiple\n         */\n        this.multiple = false;\n        /**\n         * Returns or sets the element's step attribute, which works with min and max\n         * to limit the increments at which a numeric or date-time value can be set.\n         *\n         * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#step\n         */\n        this.step = '';\n        /**\n         * The `<input>` type to use, defaults to \"text\". The type greatly changes how\n         * the text field behaves.\n         *\n         * Text fields support a limited number of `<input>` types:\n         *\n         * - text\n         * - textarea\n         * - email\n         * - number\n         * - password\n         * - search\n         * - tel\n         * - url\n         *\n         * See\n         * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#input_types\n         * for more details on each input type.\n         */\n        this.type = 'text';\n        /**\n         * Describes what, if any, type of autocomplete functionality the input\n         * should provide.\n         *\n         * https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete\n         */\n        this.autocomplete = '';\n        /**\n         * Returns true when the text field has been interacted with. Native\n         * validation errors only display in response to user interactions.\n         */\n        this.dirty = false;\n        this.focused = false;\n        /**\n         * Whether or not a native error has been reported via `reportValidity()`.\n         */\n        this.nativeError = false;\n        /**\n         * The validation message displayed from a native error via\n         * `reportValidity()`.\n         */\n        this.nativeErrorText = '';\n    }\n    /**\n     * Gets or sets the direction in which selection occurred.\n     */\n    get selectionDirection() {\n        return this.getInputOrTextarea().selectionDirection;\n    }\n    set selectionDirection(value) {\n        this.getInputOrTextarea().selectionDirection = value;\n    }\n    /**\n     * Gets or sets the end position or offset of a text selection.\n     */\n    get selectionEnd() {\n        return this.getInputOrTextarea().selectionEnd;\n    }\n    set selectionEnd(value) {\n        this.getInputOrTextarea().selectionEnd = value;\n    }\n    /**\n     * Gets or sets the starting position or offset of a text selection.\n     */\n    get selectionStart() {\n        return this.getInputOrTextarea().selectionStart;\n    }\n    set selectionStart(value) {\n        this.getInputOrTextarea().selectionStart = value;\n    }\n    /**\n     * The text field's value as a number.\n     */\n    get valueAsNumber() {\n        const input = this.getInput();\n        if (!input) {\n            return NaN;\n        }\n        return input.valueAsNumber;\n    }\n    set valueAsNumber(value) {\n        const input = this.getInput();\n        if (!input) {\n            return;\n        }\n        input.valueAsNumber = value;\n        this.value = input.value;\n    }\n    /**\n     * The text field's value as a Date.\n     */\n    get valueAsDate() {\n        const input = this.getInput();\n        if (!input) {\n            return null;\n        }\n        return input.valueAsDate;\n    }\n    set valueAsDate(value) {\n        const input = this.getInput();\n        if (!input) {\n            return;\n        }\n        input.valueAsDate = value;\n        this.value = input.value;\n    }\n    get hasError() {\n        return this.error || this.nativeError;\n    }\n    /**\n     * Selects all the text in the text field.\n     *\n     * https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/select\n     */\n    select() {\n        this.getInputOrTextarea().select();\n    }\n    setRangeText(...args) {\n        // Calling setRangeText with 1 vs 3-4 arguments has different behavior.\n        // Use spread syntax and type casting to ensure correct usage.\n        this.getInputOrTextarea().setRangeText(...args);\n        this.value = this.getInputOrTextarea().value;\n    }\n    /**\n     * Sets the start and end positions of a selection in the text field.\n     *\n     * https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setSelectionRange\n     *\n     * @param start The offset into the text field for the start of the selection.\n     * @param end The offset into the text field for the end of the selection.\n     * @param direction The direction in which the selection is performed.\n     */\n    setSelectionRange(start, end, direction) {\n        this.getInputOrTextarea().setSelectionRange(start, end, direction);\n    }\n    /**\n     * Decrements the value of a numeric type text field by `step` or `n` `step`\n     * number of times.\n     *\n     * https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/stepDown\n     *\n     * @param stepDecrement The number of steps to decrement, defaults to 1.\n     */\n    stepDown(stepDecrement) {\n        const input = this.getInput();\n        if (!input) {\n            return;\n        }\n        input.stepDown(stepDecrement);\n        this.value = input.value;\n    }\n    /**\n     * Increments the value of a numeric type text field by `step` or `n` `step`\n     * number of times.\n     *\n     * https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/stepUp\n     *\n     * @param stepIncrement The number of steps to increment, defaults to 1.\n     */\n    stepUp(stepIncrement) {\n        const input = this.getInput();\n        if (!input) {\n            return;\n        }\n        input.stepUp(stepIncrement);\n        this.value = input.value;\n    }\n    /**\n     * Reset the text field to its default value.\n     */\n    reset() {\n        this.dirty = false;\n        this.value = this.getAttribute('value') ?? '';\n        this.nativeError = false;\n        this.nativeErrorText = '';\n    }\n    attributeChangedCallback(attribute, newValue, oldValue) {\n        if (attribute === 'value' && this.dirty) {\n            // After user input, changing the value attribute no longer updates the\n            // text field's value (until reset). This matches native <input> behavior.\n            return;\n        }\n        super.attributeChangedCallback(attribute, newValue, oldValue);\n    }\n    render() {\n        const classes = {\n            'disabled': this.disabled,\n            'error': !this.disabled && this.hasError,\n            'textarea': this.type === 'textarea',\n            'no-spinner': this.noSpinner,\n        };\n        return html `\n      <span class=\"text-field ${classMap(classes)}\">\n        ${this.renderField()}\n      </span>\n    `;\n    }\n    updated(changedProperties) {\n        // Keep changedProperties arg so that subclasses may call it\n        // If a property such as `type` changes and causes the internal <input>\n        // value to change without dispatching an event, re-sync it.\n        const value = this.getInputOrTextarea().value;\n        if (this.value !== value) {\n            // Note this is typically inefficient in updated() since it schedules\n            // another update. However, it is needed for the <input> to fully render\n            // before checking its value.\n            this.value = value;\n        }\n    }\n    renderField() {\n        return staticHtml `<${this.fieldTag}\n      class=\"field\"\n      count=${this.value.length}\n      ?disabled=${this.disabled}\n      ?error=${this.hasError}\n      error-text=${this.getErrorText()}\n      ?focused=${this.focused}\n      ?has-end=${this.hasTrailingIcon}\n      ?has-start=${this.hasLeadingIcon}\n      label=${this.label}\n      ?no-asterisk=${this.noAsterisk}\n      max=${this.maxLength}\n      ?populated=${!!this.value}\n      ?required=${this.required}\n      ?resizable=${this.type === 'textarea'}\n      supporting-text=${this.supportingText}\n    >\n      ${this.renderLeadingIcon()}\n      ${this.renderInputOrTextarea()}\n      ${this.renderTrailingIcon()}\n      <div id=\"description\" slot=\"aria-describedby\"></div>\n      <slot name=\"container\" slot=\"container\"></slot>\n    </${this.fieldTag}>`;\n    }\n    renderLeadingIcon() {\n        return html `\n      <span class=\"icon leading\" slot=\"start\">\n        <slot name=\"leading-icon\" @slotchange=${this.handleIconChange}></slot>\n      </span>\n    `;\n    }\n    renderTrailingIcon() {\n        return html `\n      <span class=\"icon trailing\" slot=\"end\">\n        <slot name=\"trailing-icon\" @slotchange=${this.handleIconChange}></slot>\n      </span>\n    `;\n    }\n    renderInputOrTextarea() {\n        const style = { 'direction': this.textDirection };\n        const ariaLabel = this.ariaLabel || this.label || nothing;\n        // lit-anaylzer `autocomplete` types are too strict\n        // tslint:disable-next-line:no-any\n        const autocomplete = this.autocomplete;\n        // These properties may be set to null if the attribute is removed, and\n        // `null > -1` is incorrectly `true`.\n        const hasMaxLength = (this.maxLength ?? -1) > -1;\n        const hasMinLength = (this.minLength ?? -1) > -1;\n        if (this.type === 'textarea') {\n            return html `\n        <textarea\n          class=\"input\"\n          style=${styleMap(style)}\n          aria-describedby=\"description\"\n          aria-invalid=${this.hasError}\n          aria-label=${ariaLabel}\n          autocomplete=${autocomplete || nothing}\n          name=${this.name || nothing}\n          ?disabled=${this.disabled}\n          maxlength=${hasMaxLength ? this.maxLength : nothing}\n          minlength=${hasMinLength ? this.minLength : nothing}\n          placeholder=${this.placeholder || nothing}\n          ?readonly=${this.readOnly}\n          ?required=${this.required}\n          rows=${this.rows}\n          cols=${this.cols}\n          .value=${live(this.value)}\n          @change=${this.redispatchEvent}\n          @focus=${this.handleFocusChange}\n          @blur=${this.handleFocusChange}\n          @input=${this.handleInput}\n          @select=${this.redispatchEvent}></textarea>\n      `;\n        }\n        const prefix = this.renderPrefix();\n        const suffix = this.renderSuffix();\n        // TODO(b/243805848): remove `as unknown as number` and `as any` once lit\n        // analyzer is fixed\n        // tslint:disable-next-line:no-any\n        const inputMode = this.inputMode;\n        return html `\n      <div class=\"input-wrapper\">\n        ${prefix}\n        <input\n          class=\"input\"\n          style=${styleMap(style)}\n          aria-describedby=\"description\"\n          aria-invalid=${this.hasError}\n          aria-label=${ariaLabel}\n          autocomplete=${autocomplete || nothing}\n          name=${this.name || nothing}\n          ?disabled=${this.disabled}\n          inputmode=${inputMode || nothing}\n          max=${(this.max || nothing)}\n          maxlength=${hasMaxLength ? this.maxLength : nothing}\n          min=${(this.min || nothing)}\n          minlength=${hasMinLength ? this.minLength : nothing}\n          pattern=${this.pattern || nothing}\n          placeholder=${this.placeholder || nothing}\n          ?readonly=${this.readOnly}\n          ?required=${this.required}\n          ?multiple=${this.multiple}\n          step=${(this.step || nothing)}\n          type=${this.type}\n          .value=${live(this.value)}\n          @change=${this.redispatchEvent}\n          @focus=${this.handleFocusChange}\n          @blur=${this.handleFocusChange}\n          @input=${this.handleInput}\n          @select=${this.redispatchEvent} />\n        ${suffix}\n      </div>\n    `;\n    }\n    renderPrefix() {\n        return this.renderAffix(this.prefixText, /* isSuffix */ false);\n    }\n    renderSuffix() {\n        return this.renderAffix(this.suffixText, /* isSuffix */ true);\n    }\n    renderAffix(text, isSuffix) {\n        if (!text) {\n            return nothing;\n        }\n        const classes = {\n            'suffix': isSuffix,\n            'prefix': !isSuffix,\n        };\n        return html `<span class=\"${classMap(classes)}\">${text}</span>`;\n    }\n    getErrorText() {\n        return this.error ? this.errorText : this.nativeErrorText;\n    }\n    handleFocusChange() {\n        // When calling focus() or reportValidity() during change, it's possible\n        // for blur to be called after the new focus event. Rather than set\n        // `this.focused` to true/false on focus/blur, we always set it to whether\n        // or not the input itself is focused.\n        this.focused = this.inputOrTextarea?.matches(':focus') ?? false;\n    }\n    handleInput(event) {\n        this.dirty = true;\n        this.value = event.target.value;\n    }\n    redispatchEvent(event) {\n        redispatchEvent(this, event);\n    }\n    getInputOrTextarea() {\n        if (!this.inputOrTextarea) {\n            // If the input is not yet defined, synchronously render.\n            // e.g.\n            // const textField = document.createElement('md-outlined-text-field');\n            // document.body.appendChild(textField);\n            // textField.focus(); // synchronously render\n            this.connectedCallback();\n            this.scheduleUpdate();\n        }\n        if (this.isUpdatePending) {\n            // If there are pending updates, synchronously perform them. This ensures\n            // that constraint validation properties (like `required`) are synced\n            // before interacting with input APIs that depend on them.\n            this.scheduleUpdate();\n        }\n        return this.inputOrTextarea;\n    }\n    getInput() {\n        if (this.type === 'textarea') {\n            return null;\n        }\n        return this.getInputOrTextarea();\n    }\n    handleIconChange() {\n        this.hasLeadingIcon = this.leadingIcons.length > 0;\n        this.hasTrailingIcon = this.trailingIcons.length > 0;\n    }\n    [getFormValue]() {\n        return this.value;\n    }\n    formResetCallback() {\n        this.reset();\n    }\n    formStateRestoreCallback(state) {\n        this.value = state;\n    }\n    focus() {\n        // Required for the case that the user slots a focusable element into the\n        // leading icon slot such as an iconbutton due to how delegatesFocus works.\n        this.getInputOrTextarea().focus();\n    }\n    [createValidator]() {\n        return new TextFieldValidator(() => ({\n            state: this,\n            renderedControl: this.inputOrTextarea,\n        }));\n    }\n    [getValidityAnchor]() {\n        return this.inputOrTextarea;\n    }\n    [onReportValidity](invalidEvent) {\n        // Prevent default pop-up behavior.\n        invalidEvent?.preventDefault();\n        const prevMessage = this.getErrorText();\n        this.nativeError = !!invalidEvent;\n        this.nativeErrorText = this.validationMessage;\n        if (prevMessage === this.getErrorText()) {\n            this.field?.reannounceError();\n        }\n    }\n}\n/** @nocollapse */\nTextField.shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n};\n__decorate([\n    property({ type: Boolean, reflect: true })\n], TextField.prototype, \"error\", void 0);\n__decorate([\n    property({ attribute: 'error-text' })\n], TextField.prototype, \"errorText\", void 0);\n__decorate([\n    property()\n], TextField.prototype, \"label\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'no-asterisk' })\n], TextField.prototype, \"noAsterisk\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], TextField.prototype, \"required\", void 0);\n__decorate([\n    property()\n], TextField.prototype, \"value\", void 0);\n__decorate([\n    property({ attribute: 'prefix-text' })\n], TextField.prototype, \"prefixText\", void 0);\n__decorate([\n    property({ attribute: 'suffix-text' })\n], TextField.prototype, \"suffixText\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'has-leading-icon' })\n], TextField.prototype, \"hasLeadingIcon\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'has-trailing-icon' })\n], TextField.prototype, \"hasTrailingIcon\", void 0);\n__decorate([\n    property({ attribute: 'supporting-text' })\n], TextField.prototype, \"supportingText\", void 0);\n__decorate([\n    property({ attribute: 'text-direction' })\n], TextField.prototype, \"textDirection\", void 0);\n__decorate([\n    property({ type: Number })\n], TextField.prototype, \"rows\", void 0);\n__decorate([\n    property({ type: Number })\n], TextField.prototype, \"cols\", void 0);\n__decorate([\n    property({ reflect: true })\n], TextField.prototype, \"inputMode\", void 0);\n__decorate([\n    property()\n], TextField.prototype, \"max\", void 0);\n__decorate([\n    property({ type: Number })\n], TextField.prototype, \"maxLength\", void 0);\n__decorate([\n    property()\n], TextField.prototype, \"min\", void 0);\n__decorate([\n    property({ type: Number })\n], TextField.prototype, \"minLength\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'no-spinner' })\n], TextField.prototype, \"noSpinner\", void 0);\n__decorate([\n    property()\n], TextField.prototype, \"pattern\", void 0);\n__decorate([\n    property({ reflect: true, converter: stringConverter })\n], TextField.prototype, \"placeholder\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], TextField.prototype, \"readOnly\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], TextField.prototype, \"multiple\", void 0);\n__decorate([\n    property()\n], TextField.prototype, \"step\", void 0);\n__decorate([\n    property({ reflect: true })\n], TextField.prototype, \"type\", void 0);\n__decorate([\n    property({ reflect: true })\n], TextField.prototype, \"autocomplete\", void 0);\n__decorate([\n    state()\n], TextField.prototype, \"dirty\", void 0);\n__decorate([\n    state()\n], TextField.prototype, \"focused\", void 0);\n__decorate([\n    state()\n], TextField.prototype, \"nativeError\", void 0);\n__decorate([\n    state()\n], TextField.prototype, \"nativeErrorText\", void 0);\n__decorate([\n    query('.input')\n], TextField.prototype, \"inputOrTextarea\", void 0);\n__decorate([\n    query('.field')\n], TextField.prototype, \"field\", void 0);\n__decorate([\n    queryAssignedElements({ slot: 'leading-icon' })\n], TextField.prototype, \"leadingIcons\", void 0);\n__decorate([\n    queryAssignedElements({ slot: 'trailing-icon' })\n], TextField.prototype, \"trailingIcons\", void 0);\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport '../../field/filled-field.js';\nimport { literal } from 'lit/static-html.js';\nimport { TextField } from './text-field.js';\n/**\n * A filled text field component.\n */\nexport class FilledTextField extends TextField {\n    constructor() {\n        super(...arguments);\n        this.fieldTag = literal `md-filled-field`;\n    }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./textfield/internal/shared-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{display:inline-flex;outline:none;resize:both;text-align:start;-webkit-tap-highlight-color:rgba(0,0,0,0)}.text-field,.field{width:100%}.text-field{display:inline-flex}.field{cursor:text}.disabled .field{cursor:default}.text-field,.textarea .field{resize:inherit}slot[name=container]{border-radius:inherit}.icon{color:currentColor;display:flex;align-items:center;justify-content:center;fill:currentColor;position:relative}.icon ::slotted(*){display:flex;position:absolute}[has-start] .icon.leading{font-size:var(--_leading-icon-size);height:var(--_leading-icon-size);width:var(--_leading-icon-size)}[has-end] .icon.trailing{font-size:var(--_trailing-icon-size);height:var(--_trailing-icon-size);width:var(--_trailing-icon-size)}.input-wrapper{display:flex}.input-wrapper>*{all:inherit;padding:0}.input{caret-color:var(--_caret-color);overflow-x:hidden;text-align:inherit}.input::placeholder{color:currentColor;opacity:1}.input::-webkit-calendar-picker-indicator{display:none}.input::-webkit-search-decoration,.input::-webkit-search-cancel-button{display:none}@media(forced-colors: active){.input{background:none}}.no-spinner .input::-webkit-inner-spin-button,.no-spinner .input::-webkit-outer-spin-button{display:none}.no-spinner .input[type=number]{-moz-appearance:textfield}:focus-within .input{caret-color:var(--_focus-caret-color)}.error:focus-within .input{caret-color:var(--_error-focus-caret-color)}.text-field:not(.disabled) .prefix{color:var(--_input-text-prefix-color)}.text-field:not(.disabled) .suffix{color:var(--_input-text-suffix-color)}.text-field:not(.disabled) .input::placeholder{color:var(--_input-text-placeholder-color)}.prefix,.suffix{text-wrap:nowrap;width:min-content}.prefix{padding-inline-end:var(--_input-text-prefix-trailing-space)}.suffix{padding-inline-start:var(--_input-text-suffix-leading-space)}\n`;\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport '../field/filled-field.js';\nimport { customElement } from 'lit/decorators.js';\nimport { literal } from 'lit/static-html.js';\nimport { styles as filledStyles } from './internal/filled-styles.js';\nimport { FilledTextField } from './internal/filled-text-field.js';\nimport { styles as sharedStyles } from './internal/shared-styles.js';\n/**\n * TODO(b/228525797): Add docs\n * @final\n * @suppress {visibility}\n */\nexport let MdFilledTextField = class MdFilledTextField extends FilledTextField {\n    constructor() {\n        super(...arguments);\n        this.fieldTag = literal `md-filled-field`;\n    }\n};\nMdFilledTextField.styles = [sharedStyles, filledStyles];\nMdFilledTextField = __decorate([\n    customElement('md-filled-text-field')\n], MdFilledTextField);\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./textfield/internal/outlined-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{--_caret-color: var(--md-outlined-text-field-caret-color, var(--md-sys-color-primary, #6750a4));--_disabled-input-text-color: var(--md-outlined-text-field-disabled-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-input-text-opacity: var(--md-outlined-text-field-disabled-input-text-opacity, 0.38);--_disabled-label-text-color: var(--md-outlined-text-field-disabled-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-label-text-opacity: var(--md-outlined-text-field-disabled-label-text-opacity, 0.38);--_disabled-leading-icon-color: var(--md-outlined-text-field-disabled-leading-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-leading-icon-opacity: var(--md-outlined-text-field-disabled-leading-icon-opacity, 0.38);--_disabled-outline-color: var(--md-outlined-text-field-disabled-outline-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-outline-opacity: var(--md-outlined-text-field-disabled-outline-opacity, 0.12);--_disabled-outline-width: var(--md-outlined-text-field-disabled-outline-width, 1px);--_disabled-supporting-text-color: var(--md-outlined-text-field-disabled-supporting-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-supporting-text-opacity: var(--md-outlined-text-field-disabled-supporting-text-opacity, 0.38);--_disabled-trailing-icon-color: var(--md-outlined-text-field-disabled-trailing-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-trailing-icon-opacity: var(--md-outlined-text-field-disabled-trailing-icon-opacity, 0.38);--_error-focus-caret-color: var(--md-outlined-text-field-error-focus-caret-color, var(--md-sys-color-error, #b3261e));--_error-focus-input-text-color: var(--md-outlined-text-field-error-focus-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_error-focus-label-text-color: var(--md-outlined-text-field-error-focus-label-text-color, var(--md-sys-color-error, #b3261e));--_error-focus-leading-icon-color: var(--md-outlined-text-field-error-focus-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_error-focus-outline-color: var(--md-outlined-text-field-error-focus-outline-color, var(--md-sys-color-error, #b3261e));--_error-focus-supporting-text-color: var(--md-outlined-text-field-error-focus-supporting-text-color, var(--md-sys-color-error, #b3261e));--_error-focus-trailing-icon-color: var(--md-outlined-text-field-error-focus-trailing-icon-color, var(--md-sys-color-error, #b3261e));--_error-hover-input-text-color: var(--md-outlined-text-field-error-hover-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_error-hover-label-text-color: var(--md-outlined-text-field-error-hover-label-text-color, var(--md-sys-color-on-error-container, #410e0b));--_error-hover-leading-icon-color: var(--md-outlined-text-field-error-hover-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_error-hover-outline-color: var(--md-outlined-text-field-error-hover-outline-color, var(--md-sys-color-on-error-container, #410e0b));--_error-hover-supporting-text-color: var(--md-outlined-text-field-error-hover-supporting-text-color, var(--md-sys-color-error, #b3261e));--_error-hover-trailing-icon-color: var(--md-outlined-text-field-error-hover-trailing-icon-color, var(--md-sys-color-on-error-container, #410e0b));--_error-input-text-color: var(--md-outlined-text-field-error-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_error-label-text-color: var(--md-outlined-text-field-error-label-text-color, var(--md-sys-color-error, #b3261e));--_error-leading-icon-color: var(--md-outlined-text-field-error-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_error-outline-color: var(--md-outlined-text-field-error-outline-color, var(--md-sys-color-error, #b3261e));--_error-supporting-text-color: var(--md-outlined-text-field-error-supporting-text-color, var(--md-sys-color-error, #b3261e));--_error-trailing-icon-color: var(--md-outlined-text-field-error-trailing-icon-color, var(--md-sys-color-error, #b3261e));--_focus-input-text-color: var(--md-outlined-text-field-focus-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_focus-label-text-color: var(--md-outlined-text-field-focus-label-text-color, var(--md-sys-color-primary, #6750a4));--_focus-leading-icon-color: var(--md-outlined-text-field-focus-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_focus-outline-color: var(--md-outlined-text-field-focus-outline-color, var(--md-sys-color-primary, #6750a4));--_focus-outline-width: var(--md-outlined-text-field-focus-outline-width, 3px);--_focus-supporting-text-color: var(--md-outlined-text-field-focus-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_focus-trailing-icon-color: var(--md-outlined-text-field-focus-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-input-text-color: var(--md-outlined-text-field-hover-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-label-text-color: var(--md-outlined-text-field-hover-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-leading-icon-color: var(--md-outlined-text-field-hover-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-outline-color: var(--md-outlined-text-field-hover-outline-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-outline-width: var(--md-outlined-text-field-hover-outline-width, 1px);--_hover-supporting-text-color: var(--md-outlined-text-field-hover-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-trailing-icon-color: var(--md-outlined-text-field-hover-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_input-text-color: var(--md-outlined-text-field-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_input-text-font: var(--md-outlined-text-field-input-text-font, var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto)));--_input-text-line-height: var(--md-outlined-text-field-input-text-line-height, var(--md-sys-typescale-body-large-line-height, 1.5rem));--_input-text-placeholder-color: var(--md-outlined-text-field-input-text-placeholder-color, var(--md-sys-color-on-surface-variant, #49454f));--_input-text-prefix-color: var(--md-outlined-text-field-input-text-prefix-color, var(--md-sys-color-on-surface-variant, #49454f));--_input-text-size: var(--md-outlined-text-field-input-text-size, var(--md-sys-typescale-body-large-size, 1rem));--_input-text-suffix-color: var(--md-outlined-text-field-input-text-suffix-color, var(--md-sys-color-on-surface-variant, #49454f));--_input-text-weight: var(--md-outlined-text-field-input-text-weight, var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400)));--_label-text-color: var(--md-outlined-text-field-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_label-text-font: var(--md-outlined-text-field-label-text-font, var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-outlined-text-field-label-text-line-height, var(--md-sys-typescale-body-large-line-height, 1.5rem));--_label-text-populated-line-height: var(--md-outlined-text-field-label-text-populated-line-height, var(--md-sys-typescale-body-small-line-height, 1rem));--_label-text-populated-size: var(--md-outlined-text-field-label-text-populated-size, var(--md-sys-typescale-body-small-size, 0.75rem));--_label-text-size: var(--md-outlined-text-field-label-text-size, var(--md-sys-typescale-body-large-size, 1rem));--_label-text-weight: var(--md-outlined-text-field-label-text-weight, var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400)));--_leading-icon-color: var(--md-outlined-text-field-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_leading-icon-size: var(--md-outlined-text-field-leading-icon-size, 24px);--_outline-color: var(--md-outlined-text-field-outline-color, var(--md-sys-color-outline, #79747e));--_outline-width: var(--md-outlined-text-field-outline-width, 1px);--_supporting-text-color: var(--md-outlined-text-field-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_supporting-text-font: var(--md-outlined-text-field-supporting-text-font, var(--md-sys-typescale-body-small-font, var(--md-ref-typeface-plain, Roboto)));--_supporting-text-line-height: var(--md-outlined-text-field-supporting-text-line-height, var(--md-sys-typescale-body-small-line-height, 1rem));--_supporting-text-size: var(--md-outlined-text-field-supporting-text-size, var(--md-sys-typescale-body-small-size, 0.75rem));--_supporting-text-weight: var(--md-outlined-text-field-supporting-text-weight, var(--md-sys-typescale-body-small-weight, var(--md-ref-typeface-weight-regular, 400)));--_trailing-icon-color: var(--md-outlined-text-field-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_trailing-icon-size: var(--md-outlined-text-field-trailing-icon-size, 24px);--_container-shape-start-start: var(--md-outlined-text-field-container-shape-start-start, var(--md-outlined-text-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)));--_container-shape-start-end: var(--md-outlined-text-field-container-shape-start-end, var(--md-outlined-text-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)));--_container-shape-end-end: var(--md-outlined-text-field-container-shape-end-end, var(--md-outlined-text-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)));--_container-shape-end-start: var(--md-outlined-text-field-container-shape-end-start, var(--md-outlined-text-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)));--_icon-input-space: var(--md-outlined-text-field-icon-input-space, 16px);--_leading-space: var(--md-outlined-text-field-leading-space, 16px);--_trailing-space: var(--md-outlined-text-field-trailing-space, 16px);--_top-space: var(--md-outlined-text-field-top-space, 16px);--_bottom-space: var(--md-outlined-text-field-bottom-space, 16px);--_input-text-prefix-trailing-space: var(--md-outlined-text-field-input-text-prefix-trailing-space, 2px);--_input-text-suffix-leading-space: var(--md-outlined-text-field-input-text-suffix-leading-space, 2px);--_focus-caret-color: var(--md-outlined-text-field-focus-caret-color, var(--md-sys-color-primary, #6750a4));--_with-leading-icon-leading-space: var(--md-outlined-text-field-with-leading-icon-leading-space, 12px);--_with-trailing-icon-trailing-space: var(--md-outlined-text-field-with-trailing-icon-trailing-space, 12px);--md-outlined-field-bottom-space: var(--_bottom-space);--md-outlined-field-container-shape-end-end: var(--_container-shape-end-end);--md-outlined-field-container-shape-end-start: var(--_container-shape-end-start);--md-outlined-field-container-shape-start-end: var(--_container-shape-start-end);--md-outlined-field-container-shape-start-start: var(--_container-shape-start-start);--md-outlined-field-content-color: var(--_input-text-color);--md-outlined-field-content-font: var(--_input-text-font);--md-outlined-field-content-line-height: var(--_input-text-line-height);--md-outlined-field-content-size: var(--_input-text-size);--md-outlined-field-content-space: var(--_icon-input-space);--md-outlined-field-content-weight: var(--_input-text-weight);--md-outlined-field-disabled-content-color: var(--_disabled-input-text-color);--md-outlined-field-disabled-content-opacity: var(--_disabled-input-text-opacity);--md-outlined-field-disabled-label-text-color: var(--_disabled-label-text-color);--md-outlined-field-disabled-label-text-opacity: var(--_disabled-label-text-opacity);--md-outlined-field-disabled-leading-content-color: var(--_disabled-leading-icon-color);--md-outlined-field-disabled-leading-content-opacity: var(--_disabled-leading-icon-opacity);--md-outlined-field-disabled-outline-color: var(--_disabled-outline-color);--md-outlined-field-disabled-outline-opacity: var(--_disabled-outline-opacity);--md-outlined-field-disabled-outline-width: var(--_disabled-outline-width);--md-outlined-field-disabled-supporting-text-color: var(--_disabled-supporting-text-color);--md-outlined-field-disabled-supporting-text-opacity: var(--_disabled-supporting-text-opacity);--md-outlined-field-disabled-trailing-content-color: var(--_disabled-trailing-icon-color);--md-outlined-field-disabled-trailing-content-opacity: var(--_disabled-trailing-icon-opacity);--md-outlined-field-error-content-color: var(--_error-input-text-color);--md-outlined-field-error-focus-content-color: var(--_error-focus-input-text-color);--md-outlined-field-error-focus-label-text-color: var(--_error-focus-label-text-color);--md-outlined-field-error-focus-leading-content-color: var(--_error-focus-leading-icon-color);--md-outlined-field-error-focus-outline-color: var(--_error-focus-outline-color);--md-outlined-field-error-focus-supporting-text-color: var(--_error-focus-supporting-text-color);--md-outlined-field-error-focus-trailing-content-color: var(--_error-focus-trailing-icon-color);--md-outlined-field-error-hover-content-color: var(--_error-hover-input-text-color);--md-outlined-field-error-hover-label-text-color: var(--_error-hover-label-text-color);--md-outlined-field-error-hover-leading-content-color: var(--_error-hover-leading-icon-color);--md-outlined-field-error-hover-outline-color: var(--_error-hover-outline-color);--md-outlined-field-error-hover-supporting-text-color: var(--_error-hover-supporting-text-color);--md-outlined-field-error-hover-trailing-content-color: var(--_error-hover-trailing-icon-color);--md-outlined-field-error-label-text-color: var(--_error-label-text-color);--md-outlined-field-error-leading-content-color: var(--_error-leading-icon-color);--md-outlined-field-error-outline-color: var(--_error-outline-color);--md-outlined-field-error-supporting-text-color: var(--_error-supporting-text-color);--md-outlined-field-error-trailing-content-color: var(--_error-trailing-icon-color);--md-outlined-field-focus-content-color: var(--_focus-input-text-color);--md-outlined-field-focus-label-text-color: var(--_focus-label-text-color);--md-outlined-field-focus-leading-content-color: var(--_focus-leading-icon-color);--md-outlined-field-focus-outline-color: var(--_focus-outline-color);--md-outlined-field-focus-outline-width: var(--_focus-outline-width);--md-outlined-field-focus-supporting-text-color: var(--_focus-supporting-text-color);--md-outlined-field-focus-trailing-content-color: var(--_focus-trailing-icon-color);--md-outlined-field-hover-content-color: var(--_hover-input-text-color);--md-outlined-field-hover-label-text-color: var(--_hover-label-text-color);--md-outlined-field-hover-leading-content-color: var(--_hover-leading-icon-color);--md-outlined-field-hover-outline-color: var(--_hover-outline-color);--md-outlined-field-hover-outline-width: var(--_hover-outline-width);--md-outlined-field-hover-supporting-text-color: var(--_hover-supporting-text-color);--md-outlined-field-hover-trailing-content-color: var(--_hover-trailing-icon-color);--md-outlined-field-label-text-color: var(--_label-text-color);--md-outlined-field-label-text-font: var(--_label-text-font);--md-outlined-field-label-text-line-height: var(--_label-text-line-height);--md-outlined-field-label-text-populated-line-height: var(--_label-text-populated-line-height);--md-outlined-field-label-text-populated-size: var(--_label-text-populated-size);--md-outlined-field-label-text-size: var(--_label-text-size);--md-outlined-field-label-text-weight: var(--_label-text-weight);--md-outlined-field-leading-content-color: var(--_leading-icon-color);--md-outlined-field-leading-space: var(--_leading-space);--md-outlined-field-outline-color: var(--_outline-color);--md-outlined-field-outline-width: var(--_outline-width);--md-outlined-field-supporting-text-color: var(--_supporting-text-color);--md-outlined-field-supporting-text-font: var(--_supporting-text-font);--md-outlined-field-supporting-text-line-height: var(--_supporting-text-line-height);--md-outlined-field-supporting-text-size: var(--_supporting-text-size);--md-outlined-field-supporting-text-weight: var(--_supporting-text-weight);--md-outlined-field-top-space: var(--_top-space);--md-outlined-field-trailing-content-color: var(--_trailing-icon-color);--md-outlined-field-trailing-space: var(--_trailing-space);--md-outlined-field-with-leading-content-leading-space: var(--_with-leading-icon-leading-space);--md-outlined-field-with-trailing-content-trailing-space: var(--_with-trailing-icon-trailing-space)}\n`;\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport '../../field/outlined-field.js';\nimport { literal } from 'lit/static-html.js';\nimport { TextField } from './text-field.js';\n/**\n * An outlined text field component\n */\nexport class OutlinedTextField extends TextField {\n    constructor() {\n        super(...arguments);\n        this.fieldTag = literal `md-outlined-field`;\n    }\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport '../field/outlined-field.js';\nimport { customElement } from 'lit/decorators.js';\nimport { literal } from 'lit/static-html.js';\nimport { styles as outlinedStyles } from './internal/outlined-styles.js';\nimport { OutlinedTextField } from './internal/outlined-text-field.js';\nimport { styles as sharedStyles } from './internal/shared-styles.js';\n/**\n * TODO(b/228525797): Add docs\n * @final\n * @suppress {visibility}\n */\nexport let MdOutlinedTextField = class MdOutlinedTextField extends OutlinedTextField {\n    constructor() {\n        super(...arguments);\n        this.fieldTag = literal `md-outlined-field`;\n    }\n};\nMdOutlinedTextField.styles = [sharedStyles, outlinedStyles];\nMdOutlinedTextField = __decorate([\n    customElement('md-outlined-text-field')\n], MdOutlinedTextField);\n"],
  "mappings": "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",
  "names": ["DEV_MODE", "issueWarning", "MdElevation", "styles", "MdFocusRing", "styles", "State", "EVENTS", "styles", "MdRipple", "styles", "property", "_a", "styles", "styles", "styles", "MdElevatedButton", "styles", "styles", "MdFilledButton", "styles", "styles", "MdFilledTonalButton", "styles", "styles", "MdOutlinedButton", "styles", "styles", "MdTextButton", "styles", "_a", "state", "state", "state", "styles", "MdCheckbox", "styles", "styles", "styles", "styles", "MdAssistChip", "styles", "isRtl", "styles", "MdChipSet", "styles", "isFocusable", "isRtl", "styles", "styles", "styles", "MdFilterChip", "styles", "styles", "MdInputChip", "styles", "styles", "MdSuggestionChip", "styles", "styles", "MdDivider", "styles", "animation", "styles", "MdDialog", "styles", "styles", "styles", "styles", "MdBrandedFab", "styles", "styles", "MdFab", "styles", "styles", "styles", "MdFilledField", "styles", "styles", "MdOutlinedField", "styles", "styles", "MdIcon", "styles", "styles", "html", "svg", "mathml", "html", "styles", "MdFilledIconButton", "styles", "styles", "MdFilledTonalIconButton", "styles", "styles", "MdIconButton", "styles", "styles", "MdOutlinedIconButton", "styles", "wrap", "isRtl", "styles", "MdList", "styles", "styles", "MdItem", "styles", "html", "styles", "MdListItem", "styles", "isRtl", "styles", "MdMenu", "styles", "html", "styles", "MdMenuItem", "styles", "isRtl", "styles", "MdSubMenu", "styles", "styles", "MdCircularProgress", "styles", "styles", "MdLinearProgress", "styles", "isFocusable", "_a", "isRtl", "state", "styles", "MdRadio", "styles", "_a", "state", "_a", "html", "state", "styles", "styles", "MdFilledSelect", "styles", "styles", "MdOutlinedSelect", "styles", "MdSelectOption", "styles", "styles", "isOverlapping", "state", "styles", "MdSlider", "styles", "state", "styles", "MdSwitch", "styles", "_a", "styles", "styles", "MdPrimaryTab", "styles", "styles", "MdSecondaryTab", "styles", "isRtl", "styles", "MdTabs", "styles", "styles", "state", "html", "state", "styles", "MdFilledTextField", "styles", "styles", "MdOutlinedTextField", "styles"]
}
